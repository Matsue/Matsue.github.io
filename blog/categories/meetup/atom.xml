<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Meetup | Matsue Blog]]></title>
  <link href="http://matsue.github.io/blog/categories/meetup/atom.xml" rel="self"/>
  <link href="http://matsue.github.io/"/>
  <updated>2015-03-05T21:14:59+09:00</updated>
  <id>http://matsue.github.io/</id>
  <author>
    <name><![CDATA[Hiroki Matsue]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Regional Scrum Gathering Tokyo 2015に参加した]]></title>
    <link href="http://matsue.github.io/blog/2015/03/05/scrumgatheringtokyo-2015/"/>
    <updated>2015-03-05T20:43:28+09:00</updated>
    <id>http://matsue.github.io/blog/2015/03/05/scrumgatheringtokyo-2015</id>
    <content type="html"><![CDATA[<p><a href="http://2015.scrumgatheringtokyo.org/">Regional Scrum Gathering Tokyo 2015</a>に参加した。<br/>
3日分の発表内容メモと感想のまとめ。長い。</p>

<p>3日間のイベントで、初日は主にスクラム実践者の方々のセッション、2日目はオープンスペーステクノロジーというディスカッション形式、
3日目はコーチや本の執筆をされている方々からのキーノートという構成。3日目のみ有料だった。</p>

<ul>
<li><a href="https://www.facebook.com/ScrumGatheringTokyo">https://www.facebook.com/ScrumGatheringTokyo</a></li>
<li><a href="https://twitter.com/search?q=%23rsgt2015">https://twitter.com/search?q=%23rsgt2015</a></li>
</ul>


<!--more-->


<h2>Day1</h2>

<p>初日は以下の4つのセッションに参加した。</p>

<ul>
<li>James O. Coplienさんの<a href="http://2015.scrumgatheringtokyo.org/event/5907692ca1c112723617f2438a0501cb#.VPLm-1PadrN">Scrum Patterns: The New Defacto Scrum Standard</a></li>
<li>藤村 新さんの<a href="http://2015.scrumgatheringtokyo.org/event/b23e2d897cdf780a82622dd55b865e11#.VPLl41PadrM">開発モデルの作り方 ～守破離の破！～</a></li>
<li>Mitsuyuki　Shiibaさんの<a href="http://2015.scrumgatheringtokyo.org/event/6bc960ff87b12ca853fea5497627b3ea#.VPLl4FPadrM">スクラムマスターは要らない</a></li>
<li>林 栄一さんとMasanari Motohasiさんの<a href="http://2015.scrumgatheringtokyo.org/event/e8ab120c5e4a83383b7da588da120a83#.VPLl71PadrM">アジャイルコミュニケーションプラログラム ~チームワークに関する心理学的アプローチ~</a></li>
</ul>


<h3>Scrum Patterns: The New Defacto Scrum Standard</h3>

<p><a href="https://picasaweb.google.com/lh/photo/34HCmZmvOTJlDDlJU2EebNMTjNZETYmyPJy0liipFm0?feat=embedwebsite"><img src="https://lh4.googleusercontent.com/-RNmV-m2WKJs/VPfPzR7rtsI/AAAAAAAASj8/_y55odF2IN8/s800/IMG_20150228_103457.jpg" height="600" width="800" /></a></p>

<p>Copeさんによるスクラムとは何かを再確認するような発表。
英語だったので意味を取り違えてる部分もあると思うが、以下のようなことを言っていた。</p>

<blockquote><ul>
<li>スクラムはただのルールブック。</li>
<li>チェスプレーヤーに例えれば、ルールを知っているだけでは良いプレーヤーとは言えない。</li>
<li>スクラムにおいてマネージャーという存在はいらない。無駄。スクラムでは自己管理する。タスクマネージャーというのもいらない。</li>
<li>Kanbanを使ってるチームは病気。</li>
<li>チームのゴールは価値を創ること。スクラムやルール自体はゴールじゃない。</li>
<li>スクラムによって、どのようにして学ぶかを学ぶ。</li>
<li>毎朝のスタンドアップミーティングは何のためにあるのか？SBIを管理するショートプランニングミーティングみたいなもの。</li>
<li>もしもスプリントが終わった時にベロシティの見積もり通りになる確率が50%以上なら誰かが嘘をついてる。</li>
<li>息子は14歳でCSMになれたんだから皆も出来る。</li>
<li>ベロシティは6ヶ月で倍になる。なってないなら、あなたは理解してない。</li>
<li>信頼が大事。マネージャーやテスターを信頼してますか？</li>
<li>アジャイルマニフェストにあるように顧客との協調が必要。</li>
</ul>
</blockquote>

<p>なぜKanbanを使うのは良くないのか聞いたところ、
例えば1つの製品をデリバリーするために、</p>

<ol>
<li>パーツAをつくるチーム: 生産性98</li>
<li>パーツBをつくるチーム: 生産性96</li>
<li>テストするチーム: 生産性100</li>
</ol>


<p>がいたとすると工程2のところで在庫が出る、という説明だった。
なのでHenrik Knibergさんの本に出てくるステータスが細かく管理され、WIPが制限されているようなカンバンを指しているわけではない。
役割が分断されているようなチームは無駄がでて良くないよね、という意見だと解釈した。</p>

<p>また、見積もったタスクが全てDONEできる確率は体感として50%以下な感じがするんだけど、と言ってみたところ、</p>

<ol>
<li>スプリントへの割り込みタスクを止める人がいない</li>
<li>違うチームへの依頼で待ち時間がある</li>
</ol>


<p>といったことが原因でしょという話になった。
これは確かにそうなんだけれども、他のチームと働くことが多いというチームの性質や、
会社の枠組みでロールの分断された組織があるという状況もあるのでなかなか難しい印象。
ただ、これらについては他の方とも話しているうちに試してみたいアイデアを得た。</p>

<p>Copeさん節はいつも通りかなりの破壊力があったし、理想の組織での話のように感じる部分はあるが、原点となるマインドと強いパッションには共感を覚える。
スクラムというと色んな要素はあるものの、価値を生み出すのがゴール。</p>

<h3>開発モデルの作り方 ～守破離の破！～</h3>

<iframe src="//www.slideshare.net/slideshow/embed_code/45257394" width="425" height="355" frameborder="0" marginwidth="0" marginheight="0" scrolling="no" style="border:1px solid #CCC; border-width:1px; margin-bottom:5px; max-width: 100%;" allowfullscreen> </iframe>


<p> <div style="margin-bottom:5px"> <strong> <a href="//www.slideshare.net/aratafuji/ss-45257394" title="開発モデルの作り方(守破離の破)" target="_blank">開発モデルの作り方(守破離の破)</a> </strong> from <strong><a href="//www.slideshare.net/aratafuji" target="_blank">Arata Fujimura</a></strong> </div></p>

<blockquote><ul>
<li>とりあえずやってみることでプラクティス厨じゃだめだと気付いた。</li>
<li>ざっくり開発者が言ってきた日数に係数かけて見積もる。エンジニア「２日です」オーナー「わかりました(４日か)」。</li>
<li>自己流から破はできない。型があるから型やぶり、型がない人が型を破ったら形無し。</li>
</ul>
</blockquote>

<p>リーン開発の現場を参考にされていることも、その他の部分でもすごく共感できることの多かったセッション。</p>

<p>現状、良かれと思って基本や事例から変化させて取り込んでる手法についてはプラクティス厨になっている気もする。
色んな方々の知識によってスクラムの基本形ができていて、それから学べる要素も多いと思うので基本形をもう一度見直したくなった。</p>

<h3>スクラムマスターは要らない</h3>

<iframe src="//www.slideshare.net/slideshow/embed_code/45257107" width="425" height="355" frameborder="0" marginwidth="0" marginheight="0" scrolling="no" style="border:1px solid #CCC; border-width:1px; margin-bottom:5px; max-width: 100%;" allowfullscreen> </iframe>


<p> <div style="margin-bottom:5px"> <strong> <a href="//www.slideshare.net/bufferings/ss-45257107" title="スクラムマスターは要らない" target="_blank">スクラムマスターは要らない</a> </strong> from <strong><a href="//www.slideshare.net/bufferings" target="_blank">Mitsuyuki Shiiba</a></strong> </div></p>

<blockquote><ul>
<li>全員POであってほしい。</li>
<li>以前は計画もスピードも重視で根性で乗り切ってた。</li>
<li>今は大阪の組織は全てスクラム。</li>
<li>当時、ベンチャーからの成長で組織はカオスだった。</li>
<li>「エンジニアとして働きたいチーム」をつくろうとした。</li>
<li>摩擦とヒエラルキーに悩んだ。</li>
<li>摩擦を生む境目が何か考えた。それは責任範囲だと考えた。「ここからはあなたの仕事、責任」</li>
<li>もう一つはエンジニアに期待してない。スキル低いエンジニアでも回せるようにしよう。</li>
<li>なんでこういう組織になったか考えた。失敗を乗り越えるためだと考えた。失敗しないように。「この範囲なら失敗しないよね」</li>
<li>子供に転んでほしくないと考えた。そのためには転ばせる必要がある。</li>
<li>エンジニアへの期待値をあげて、責任範囲を細かくしない。</li>
<li>タイムボックス、スコープ、レトロスペクティブで失敗を小さく、失敗できるように。</li>
<li>スキル高い人だけがチーム入ってほしいのではなく、成長できるようにしたかった。</li>
<li>いますぐ終わらせる、できるひとにとりあえずやってもらうではなく、コスト払っても３ヶ月後に早く開発できるようにしたかった。</li>
<li>立ち上げメンバーのようにユーザにとってうれしいことを考え、プロダクトオーナーシップを持ってほしい。</li>
<li>そもそもみんな持ってるはず。</li>
<li>「ここまででいいよ」と壁つくってた。</li>
<li>「あなたが一番いいと思うものつくって」というようにした、始めはおそるおそるだったが、徐々にみんな言える環境になった。</li>
<li>次はみんなが働きたいと思う組織を目指した。</li>
<li>チームを超える横串の場をつくった。</li>
<li>マネージャとかもフラット、ただのロールという認識を広めた。。</li>
<li>組織５０人でもやもやしてることを出した、レトロスペクティブ。

<ul>
<li>ex.全チームにホワイトボード、プロジェクタ導入、カフェテリアの匂いをなくす</li>
</ul>
</li>
<li>希望者全員CSMの研修にいってもらった。</li>
<li>いけない人向けには大阪に人を呼んだりした。</li>
<li>とりのぞける障害はとった、だから「みんなで大阪の開発部を良くしていこう」</li>
<li>組織というプロダクトを変えた。</li>
<li>ただやる人はいらない。プロダクトオーナーシップをもったスクラムマスター、エンジニアになってほしい。</li>
</ul>
</blockquote>

<p>本編以外のQAへの回答からの抜粋は以下。</p>

<ul>
<li>方向性の違いは否定するのではなく、話し合ってもともとの原因を探る。</li>
<li>取り組みの結果、もともとPO、SM、PMとか全部やってたのをメンバー任せられた。</li>
<li>消極的な人にも参加をよびかける。ほっておかない。定期的な面談とかやるんじゃなく、気付いたらすぐ伝える。</li>
</ul>


<p>うーん、羨ましい。
質問への回答にも少しあるが、コミュニケーション的な部分でぶつかった壁や解決したことが多々あったんじゃないかと思う。
今の状況ではKPTやるとどんなものが上がっているのか気になる。</p>

<h3>アジャイルコミュニケーションプラログラム ~チームワークに関する心理学的アプローチ~</h3>

<p><a href="https://picasaweb.google.com/lh/photo/FIwv2PGb2QfTk2b6gT-4xdMTjNZETYmyPJy0liipFm0?feat=embedwebsite"><img src="https://lh4.googleusercontent.com/-PoT7anCuYzI/VPfPzW6bDPI/AAAAAAAASj4/-V2AiFZQ66Q/s800/IMG_20150228_165337.jpg" height="600" width="800" /></a></p>

<p>「言っても仕方ない」「どうせダメだ」みたいな心境になった人、させる人について対応や原因を考えるセッション。</p>

<p>例えば、「報告しろ」+「自分で考えろ」という矛盾した指示(ダブルバインド)を出されたりすると、そのような心境をつくる一因になると考えられる。
ペアや4人組でのワークでは、身の回りで起きているコミュニケーション不全の状況を考え、励ましの言葉を考え、それを人から言われてみる、というようなことをした。</p>

<p>こういうセッションはむずむずするが、ワークと割り切って普段やらないことを試したり、意識できてないようなところを確認できるので面白い。
あーあるある、という状況に名前をつけて認識できるようにする感じ。関連する本を1冊読んでみたくなった。</p>

<h3>クロージング</h3>

<p><a href="https://picasaweb.google.com/lh/photo/-8m3QTZ1cMGw8ZXEb4n0J9MTjNZETYmyPJy0liipFm0?feat=embedwebsite"><img src="https://lh3.googleusercontent.com/-KW_oTBU3pZo/VPfPzaRiGKI/AAAAAAAASj4/ESG_jlF9J1s/s800/IMG_20150228_173624.jpg" height="600" width="800" /></a></p>

<p>初日のクロージングは参加者全員で来年度のRSGTのポスター・テーマを考えた。
それぞれ10人程度の9チームに分かれ、意見をまとめ、発表した。</p>

<p>限られた時間内に焦りながら成果を出そうとする感覚は、マシュマロゲームみたいな印象。
すみません、プロトタイプとか全然つくりませんでした。アイデア考えて、締め切り直前に最終版を書き始めました。</p>

<p>みなさんどうやって取り組んだろうか？
振り返りしたチームもあるようだし、自分がいたチームは「だれが」「なにを」期待するイベントにしたいかのアイデアを考えて投票、
それに合うフレーズのアイデアを出し合うようなフローで参加した。</p>

<p>意外に感じたのは、チーム内で我先にとファシリテーター役出るかと思ったらそうでもなかった。お見合い。
そんな雰囲気の中でも活発に意見を出して、雰囲気をつくっていた女性の方々すごいと思いました。</p>

<h2>Day2</h2>

<h3>Open Space Technology</h3>

<p><a href="https://picasaweb.google.com/lh/photo/wTFS1FiWL85lr_cuRREbSdMTjNZETYmyPJy0liipFm0?feat=embedwebsite"><img src="https://lh3.googleusercontent.com/--NZKsShM8S0/VPfPzZsy1nI/AAAAAAAASj4/10eN7so2MPA/s800/IMG_20150301_130543.jpg" height="600" width="800" /></a></p>

<p>2日目は全てOpen Space Technologyの時間。
午前はアイデア募集をして、似たものはまとめて、午後に向けて時間と場所の割り振りをした。</p>

<p>私は&#8221;スクラムで取ると嬉しいメトリクス・数字&#8221;というテーマで時間をとらせてもらい、以下のようなアイデアがでた。</p>

<p><a href="https://picasaweb.google.com/lh/photo/QrY0T6zZ6vUQ-MPDKLrbQdMTjNZETYmyPJy0liipFm0?feat=embedwebsite"><img src="https://lh6.googleusercontent.com/-eORdhihYEiw/VPfPzWwV1aI/AAAAAAAASj8/wdv5wzE2sKk/s800/IMG_20150301_150056.jpg" height="600" width="800" /></a></p>

<table>
<thead>
<tr>
<th>測定手法・項目</th>
<th>効果</th>
</tr>
</thead>
<tbody>
<tr>
<td>ベロシティ</td>
<td>見積もり精度向上</td>
</tr>
<tr>
<td>各タスクが何日で完了したか</td>
<td>見積もり精度向上</td>
</tr>
<tr>
<td>◯◯さんが実施したレビュー回数</td>
<td>特定の人への依存の視覚化</td>
</tr>
<tr>
<td>テストカバレッジ</td>
<td>品質</td>
</tr>
<tr>
<td>テストの書き出し、実装にかかった時間</td>
<td>工数視覚化?</td>
</tr>
<tr>
<td>割り込みタスクの数・かかった時間</td>
<td>見積もり精度向上</td>
</tr>
<tr>
<td>バグの数</td>
<td>見積もり精度向上</td>
</tr>
<tr>
<td>デモミーティング参加者のフィードバック数</td>
<td>期待値や成果の指標</td>
</tr>
<tr>
<td>目標達成できると思う率</td>
<td>心境・潜在タスクの視覚化</td>
</tr>
<tr>
<td>TODO・FIXMEコメント、つみのこしタスクの量</td>
<td>潜在タスクの視覚化、理解度の視覚化</td>
</tr>
<tr>
<td>コードの静的チェック</td>
<td>技術的負債の視覚化</td>
</tr>
<tr>
<td>トラックナンバー</td>
<td>特定の人への依存の視覚化</td>
</tr>
<tr>
<td>タスクや開発プロセスが停滞してたとこ共有</td>
<td>特定の人への依存の低減、プロセス上のボトルネックの発見</td>
</tr>
<tr>
<td>UATの実行時間</td>
<td>性能保証、変化に気づける</td>
</tr>
<tr>
<td>スプリントへの満足度</td>
<td>開発プロセス上の問題発見</td>
</tr>
<tr>
<td>問い合わせに返答してる率</td>
<td>対応もれ防止</td>
</tr>
<tr>
<td>最終ソースコミット時刻</td>
<td>働く環境の状況が見える</td>
</tr>
<tr>
<td>同じ種類のバグを出してないか</td>
<td>コード改善</td>
</tr>
</tbody>
</table>


<p>もっとはやくデリバリーしたいと思っても、どこが原因になってるか見えてないことは多いので、
上がったような項目からアイデアを得て改善できると嬉しい。</p>

<h3>Lean Coffee</h3>

<p><a href="https://picasaweb.google.com/lh/photo/EB0j90S5-Rpu7hQuoLYjvNMTjNZETYmyPJy0liipFm0?feat=embedwebsite"><img src="https://lh5.googleusercontent.com/-nxVFGEs0Hhc/VPfPzQlwsjI/AAAAAAAASj8/YJxjadGNobU/s800/IMG_20150301_123951.jpg" height="600" width="800" /></a></p>

<p>ランチの時間にはLean Coffeeを行った。Coffeeは飲んでないけど。
テーマを出し合って、投票して人気だったのテーマから順にディスカッションをする。
7分ごとに議論を継続するか、次の話題に移っていくかの確認がある。</p>

<p>適度に時間が区切られており、人数も少人数だったのでわりと集中して参加できた印象。</p>

<p>議論ででたアイデアの中で、&#8221;メンバーそれぞれがスプリントの名前を出し合う&#8221;というのが個人的に面白いと思った。
ビジョンが共有されてなければ、全く違うものが出てそれに気づくだろうし、
見返した時に何をしてきたのか、何が不足しているのかの考えるヒントになる。</p>

<h2>Day3</h2>

<p><a href="https://picasaweb.google.com/lh/photo/6HOUhH24kW39OgxzcL3JHNMTjNZETYmyPJy0liipFm0?feat=embedwebsite"><img src="https://lh6.googleusercontent.com/-tEUEtwrX5vY/VPfPzdNNIJI/AAAAAAAASj4/87n2Lmag_6w/s800/IMG_20150302_144630.jpg" height="800" width="600" /></a></p>

<p>3日目は以下の4つのセッションがあった。</p>

<ul>
<li>Kazumasa Ebataさんの<a href="http://2015.scrumgatheringtokyo.org/event/328d75dfb6132d6ced031e7ba846cc1b#.VPfjHVPadrM">Promotion of Growth Led by Scrum. ~ Road to Agile/KAIZEN. Improve THE Experience for Challenger ~</a></li>
<li>森崎 修司さんの<a href="http://2015.scrumgatheringtokyo.org/event/e34accd4020c1869e4a77e23390c3565#.VPfjIFPadrM">レビューの課題と対策、モダンコードレビューの動向</a></li>
<li>Kiro HARADAさん、Lê Trọng Hiệpさん、Phạm Anh Đớiさんの<a href="http://2015.scrumgatheringtokyo.org/event/1fdf35d5512cb65be238b2dc6985a888#.VPfjIVPadrM">State of Agile / Software Dev in Vietnam and relationship between Japan and Vietnam</a></li>
<li>Mary Gormanさんの<a href="http://2015.scrumgatheringtokyo.org/event/1fe726ea088481ce98590a251857d1fb#.VPfjJFPadrM">アジャイルな発見プラクティスを革新し、活性化させましょう Innovate and Invigorate Your Agile Discovery Practices</a></li>
</ul>


<h3>Promotion of Growth Led by Scrum. ~ Road to Agile/KAIZEN. Improve THE Experience for Challenger ~</h3>

<blockquote><ul>
<li>日本の状況は誤った情報が多い印象。</li>
<li>自分の本もスクラムに色付けしたもの。</li>
<li>今から学ぼうとするとミスリーディングが多い。正しい情報が多い状況をつくっていきたい。</li>
<li>スクラムを選択肢にいれてほしい。</li>
</ul>


<p><!-- br --></p>

<ul>
<li>◯◯ブートキャンプとか◯◯サムライも誰かが経験したもの。</li>
<li>第一ソースに会う機会を増やしていったほうがいいと感じる。</li>
</ul>


<p><!-- br --></p>

<ul>
<li>奴隷になってる。会社やスクラムの。</li>
<li>スクラムだからではなく、スクラムの目指してるものを考えれてるのか。</li>
</ul>


<p><!-- br --></p>

<ul>
<li>Ken Schwaberのgoogleでの動画から分かるように、透明感、３ヶ月後とかの状況を知る、把握するためのツール</li>
<li>ビジネスを成功させるものではない</li>
<li>できない人がやって数ヶ月後ほとんど何も完成してないだろう、それがわかる</li>
</ul>


<p><!-- br --></p>

<ul>
<li>改善したい人のペルソナを考える</li>
<li>飢餓感タイプか(圧倒的当事者意識くん)</li>
<li>危機感タイプか(やればできるこ)</li>
<li>飢餓感タイプは与えることに抵抗ない</li>
<li>危機感タイプはいただければやります、ひどいともうほっといてください</li>
</ul>


<p><!-- br --></p>

<ul>
<li>飢餓：「忙しいからほっておいてくれ！」</li>
<li>危機：「トラブルさえなければいい」</li>
<li>どちらもなにも求めてない。どちらもスクラムほしがってない。</li>
</ul>


<p><!-- br --></p>

<ul>
<li>飢餓：あなたの望みの助けになるよ、と伝える。</li>
<li>危機：なんで重要なのかというイメージもってもらう。イメージさえできればできる。</li>
<li>アプローチは対象によって違う</li>
</ul>


<p><!-- br --></p>

<ul>
<li>えばたさんは危機感タイプ。だから本場に行くことで危機感を覚えるように動く</li>
<li>フィードバックは&#8221;言う&#8221;ことだけではない。なんでも言ってたら、それはただの独り言</li>
<li>適切に行動を変える刺激を与えたり、与えなかったりすること</li>
<li>挑戦する場がなければ人は動かない</li>
</ul>


<p><!-- br --></p>

<ul>
<li>スクラムにはフィードバックが組み込まれてる</li>
<li>ルール通りにやることで、８割方のフィードバック得られるはず</li>
</ul>


<p><!-- br --></p>

<ul>
<li>スクラムスレーブ(奴隷)になる。どうやって未来をつくっていくのかを考えないと。</li>
<li>ブラックボックスな状態でスクラムやります、は仲間をつくらない。</li>
</ul>


<p><!-- br --></p>

<ul>
<li>スクラムでプロダクトよくなるは嘘。または、あくまでも特定の状況での事例にすぎない。</li>
<li>機会を多くして、プロダクトよくする機会がふえるだけ。</li>
</ul>


<p><!-- br --></p>

<ul>
<li>チームもいきなり成長することはない。</li>
<li>スクラムは現状をつきつけて残酷。ベロシティとか。</li>
</ul>


<p><!-- br --></p>

<ul>
<li>「組織が違うんです。頭でっかちいるんです。」</li>
<li>じゃあ働きかけていきましょう。キーパーソンに。スクラムにはそういうことを考えるきっかけがあるだけ。</li>
</ul>


<p><!-- br --></p>

<ul>
<li>勇気をもって未来をつくってほしい。未来はリスクある。そこにいる人が勇気を持たなければならない。</li>
<li>スクラムやったからよくなるとは限らない。</li>
</ul>
</blockquote>

<p>公演中に紹介されていたKen Schwaberさんの動画は多分これ。</p>

<p>
<div class="ratio-4-3 embed-video-container" onclick="var myAnchor = document.getElementById('_47VWIvOKH8');var tmpDiv = document.createElement('div');tmpDiv.innerHTML = '&lt;iframe style=&quot;vertical-align:top;width:100%;height:100%;position:absolute;&quot; src=&quot;http://www.youtube.com/embed/_47VWIvOKH8?autoplay=1&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;';myAnchor.parentNode.replaceChild(tmpDiv.firstChild, myAnchor);return false;" title="click here to play">
<a class="youtube-lazy-link" style="width:100%;height:100%;background:#000 url(http://i2.ytimg.com/vi/_47VWIvOKH8/0.jpg) center center no-repeat;background-size:contain;position:absolute" href="http://www.youtube.com/watch?v=_47VWIvOKH8" id="_47VWIvOKH8" onclick="return false;">
<div class="youtube-lazy-link-div"></div>
<div class="youtube-lazy-link-info">Scrum et al.</div>
</a>
<div class="video-info" >Google Tech Talks
September 5, 2006

Ken Schwaber co-developed the Agile process, Scrum. He is a founder of the Agile Alliance and Scrum Alliance, and signatory to the Agile Manifesto. Ken has been a software developer for over thirty years. He is an active advocate and evangelist for Agile processes.

ABSTRACT
Scrum is an amazingly simple process that causes many, many changes when it is implemented. This seminar presents the basic framework of Scrum and some of the implementation issues associated with it.

Google engEDU
Speaker: Ken Schwaber</div>
</div>

</p>

<p>また、メモ上では大分省略しているが、
2タイプのペルソナに対して継続・ゴール設定といった状況に合わせた具体的なメッセージの紹介があった。</p>

<p>周りの方々を見ていてもそうだが、1次ソースに触れるというのは大事なんだろうなあと感じた。
また、2タイプにわけて考えるという切り口は面白い。
相手の求めるフィードバックに役立つのはもちろん、自分がどっちかを意識しておくことで、人との違いに変にイライラせずに済みそう。</p>

<h3>レビューの課題と対策、モダンコードレビューの動向</h3>

<blockquote><p>モダン: どの時点でのモダンかわからない。
例えば&#8221;新&#8221;喜劇。</p>

<p>エンピリカルソフトウェア、フィードバックを基にした研究。</p>

<p>ソフトウェアレビューの目的：</p>

<ul>
<li>不具合の修正コストの低減</li>
<li>保守性向上</li>
<li>状況把握と承認</li>
</ul>


<p>レビューは指摘ポイントの自由度高く、本質的な欠陥の指摘が少ない。</p>

<p>アンチパターンの例:</p>

<ul>
<li>コードの前半ばかり見てる</li>
<li>作り直してやろうかと考える</li>
<li>時間があるだけやり続ける</li>
<li>人間関係の持ち込み</li>
<li>見栄の張り合い、「なにか言わないと」</li>
<li>人格攻撃、「センスないね」</li>
</ul>


<p>ある研究の結果:</p>

<ul>
<li>機能的な問題(21.4%)</li>
<li>保守上の問題(71.1%)</li>
</ul>


<p>教科書的な対応としては、レビューする前に目的を定義する。</p>

<ul>
<li>命名規則</li>
<li>ユーザビリティ</li>
<li>性能問題</li>
</ul>


<p>そのための方法:</p>

<ul>
<li>コードレビュー</li>
<li>手動テスト</li>
<li>テストコード、テスト自動化</li>
</ul>


<p><!-- br --></p>

<ul>
<li>見つけると効果ある(定数を右に書くかどうかは効果低そう)</li>
<li>コスト減らす(特殊な状況だけ起きるものとかカバー)</li>
<li>あとあと拡張しやすくする（プラグインにするとか）</li>
</ul>


<p>リーディングテクニック:</p>

<ul>
<li>シナリオを用意して個々に割り当てる</li>
<li>先にシナリオはチームで合意しておく

<ul>
<li>ex.メモリリークないか(確保と解放の数あってるか)、無停止でデプロイできるか</li>
</ul>
</li>
</ul>


<p>シナリオのメリット:</p>

<ul>
<li>限界を知って割りきれる。「初めてやるし仕方ない」</li>
<li>問題の指摘するふりした攻撃とかを減らせる。</li>
</ul>


<p><!-- br --></p>

<ul>
<li>唯一の正解があるわけではない</li>
<li><p>身の丈にあったシナリオ設定する</p>

<ul>
<li>ex.鉄道のシステムとかつくるのと違って、絶対に落ちないアプリそれほど求められてない</li>
</ul>


<p> <!-- br --></p></li>
<li><p>タブとかスペースの数は息の長くないモジュールにやっても仕方ない</p></li>
<li>が、OSSだとちょっと違う</li>
<li>メンテナがいないと滅びるのでevolvabilityが重視される</li>
</ul>


<p><!-- br --></p>

<ul>
<li>アジャイルでなくても信頼、助け合いは必要</li>
<li>言葉の端々への配慮必要</li>
<li>態度を変えさせるための指摘してはだめ</li>
</ul>


<p>新人向けの注意:</p>

<ul>
<li>問題指摘されても自分の批判と考えないように</li>
<li>「知ってました」「そうでしたっけ」と照れ隠ししない</li>
<li>厳しい批判に「自分でやってください」と逆上しない</li>
<li>「本質的でない」と逆批判しない</li>
</ul>


<p>モダンコードレビューは:</p>

<ul>
<li>パスアラウンドに似てる、メールでなげて回覧板みたいにするやつ</li>
<li>OSSのコードレビューに似てる</li>
</ul>


<p>欠陥検出以外に・・</p>

<ul>
<li>情報共有</li>
<li>透明性向上</li>
<li>代替実装方法の検討</li>
<li>良い点、続けてもらいたいことも積極的に伝える</li>
</ul>


<p>グーグルでのコードレビュー:</p>

<ul>
<li>目的は協調であり、欠陥検出ではない</li>
<li>コーディングプロセスの一部として統合されてる</li>
</ul>


<p>メリット</p>

<ul>
<li>修正時間を短くする</li>
<li>新人の教育</li>
<li>信頼感の醸成</li>
</ul>


<p>グーグルのツール:</p>

<ul>
<li>mondrianというツールで管理</li>
<li>OSSクローンのrietveldがある</li>
</ul>


<p>シスコでのコードレビュー:<br/>
シスコでのコードレビューも小さくたくさんやってる感じ</p>

<p>Microsoftはcodeflowというツール。mondrianやgerritと似てる。</p>

<p>コードレビューに期待することアンケートでは</p>

<ul>
<li>保守性</li>
<li>情報共有</li>
<li>やってること見える化</li>
</ul>


<p>あたり上位にきてた。バグ見つけるだけじゃない。</p>

<p>モダンコードレビューでの注意点</p>

<ul>
<li>断片でみるので全体での一貫性や整合性が見落としがち</li>
<li>些細な指摘ならないシナリオ設定</li>
<li>誰かがみるだろうと放置</li>
<li>特定の人に集中する</li>
</ul>
</blockquote>

<p>Githubなどで利用されているプルリクエストがちょうどモダンコードレビューに当たるとのこと。<br/>
なんでプルリクという形に落ち着いてるのか考えるきっかけになる。
また、どうしてOSSでは保守性が重視されるのか、という切り口は面白いと思った。</p>

<p>そして紹介されていたアンチパターンは、耳の痛いものばかり。。</p>

<h3>State of Agile / Software Dev in Vietnam and relationship between Japan and Vietnam</h3>

<blockquote><ul>
<li>ベトナムの現状、手法やhowが多い</li>
<li>value driven development</li>
<li>これからwhyに変わっていくだろう</li>
</ul>


<p>問題:</p>

<ul>
<li>まずは信頼が大事。コードの品質よりも大事だとおもう。

<ul>
<li>日本はレポート多い。下手すると毎時間。</li>
</ul>
</li>
<li>言葉の壁。定義されてない期待。

<ul>
<li>ex.５分早くミーティングにいくべき。とか</li>
<li>やりたいこと(日本語)->仕様書(日本語)->ベトナム語と、たくさんの変換</li>
</ul>
</li>
</ul>


<p>POをオフショア先に置くのが一つの解決策では。
プロキシPOではなく。スクラムチームまるごとをオフショア先におく。</p></blockquote>

<p>プロキシする人が多いとややこしいというのは共感。
依頼側も依頼される側も「信頼関係を築きたい」と考えている状況ならもっとシンプルになりそう。</p>

<p>今回の発表者のお二人もそうだし、紹介されていたベトナムでのイベントはとても盛り上がっている印象を受けた。
ベトナムでは多くの講演が英語らしい。
ベトナム行きたい。</p>

<h3>Innovate and Invigorate Your Agile Discovery Practices</h3>

<blockquote><ul>
<li>多くのチームは一度ディスカバーに時間を費やした後、多くの時間をデリバリーに費やしている</li>
<li>ディスカバーとデリバリーのフローは断絶されてるべきではない。</li>
<li>そしてジャストオンタイムであるべき。</li>
</ul>


<p><!-- br --></p>

<ul>
<li>inovate(革新) + invigorate(活性化)</li>
</ul>


<p><!-- br --></p>

<ul>
<li>一般的なストーリーはユーザーとアクションから構成される</li>
</ul>


<p><!-- br --></p>

<ul>
<li>要件は機能要件と非機能要件に分けられる</li>
<li>それらの要件をさらに7つに分解したのが&#8221;7 product demensions&#8221;(プロダクトの7側面)</li>
</ul>


<p><!-- br --></p>

<ul>
<li>チームはinterdependent(互いに依存している状態)がよい</li>
<li>独立状態でもなく</li>
<li>依存でもなく(一方的な)</li>
</ul>


<p><!-- br --></p>

<ul>
<li>イメージを共有するために、より視覚的に考えるべき</li>
<li>実際に7側面を考える場を設けるとそれはエネルギッシュで騒がしい場になる</li>
<li>ディスカバーすることでモチベーションも高まる</li>
</ul>
</blockquote>

<p>今回紹介されたDtoD本は日本語に翻訳されている。紹介動画もある。</p>

<table border="0" cellpadding="0" cellspacing="0"><tr><td valign="top"><div style="border:1px solid;margin:0px;padding:6px 0px;width:260px;text-align:center;float:left"><a href="http://hb.afl.rakuten.co.jp/hgc/0ecae152.d6af1699.0ecae153.1dd72672/?pc=http%3a%2f%2fitem.rakuten.co.jp%2fbook%2f13138583%2f%3fscid%3daf_link_tbl&amp;m=http%3a%2f%2fm.rakuten.co.jp%2fbook%2fi%2f17331482%2f" target="_blank"><img src="http://hbb.afl.rakuten.co.jp/hgb/?pc=http%3a%2f%2fthumbnail.image.rakuten.co.jp%2f%400_mall%2fbook%2fcabinet%2fnoimage_01.gif%3f_ex%3d240x240&amp;m=http%3a%2f%2fthumbnail.image.rakuten.co.jp%2f%400_mall%2fbook%2fcabinet%2fnoimage_01.gif%3f_ex%3d80x80" alt="発見から納品へ [ Gottesdiener，Ellen ]" border="0" style="margin:0px;padding:0px"></a><p style="font-size:12px;line-height:1.4em;text-align:left;margin:0px;padding:2px 6px"><a href="http://hb.afl.rakuten.co.jp/hgc/0ecae152.d6af1699.0ecae153.1dd72672/?pc=http%3a%2f%2fitem.rakuten.co.jp%2fbook%2f13138583%2f%3fscid%3daf_link_tbl&amp;m=http%3a%2f%2fm.rakuten.co.jp%2fbook%2fi%2f17331482%2f" target="_blank">発見から納品へ [ Gottesdiener，Ellen ]</a><br><span style="">価格：3,500円（税込、送料込）</span><br></p></div></td></tr></table>


<p>
<div class="ratio-4-3 embed-video-container" onclick="var myAnchor = document.getElementById('x9oIpZaXTDs');var tmpDiv = document.createElement('div');tmpDiv.innerHTML = '&lt;iframe style=&quot;vertical-align:top;width:100%;height:100%;position:absolute;&quot; src=&quot;http://www.youtube.com/embed/x9oIpZaXTDs?autoplay=1&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;';myAnchor.parentNode.replaceChild(tmpDiv.firstChild, myAnchor);return false;" title="click here to play">
<a class="youtube-lazy-link" style="width:100%;height:100%;background:#000 url(http://i2.ytimg.com/vi/x9oIpZaXTDs/0.jpg) center center no-repeat;background-size:contain;position:absolute" href="http://www.youtube.com/watch?v=x9oIpZaXTDs" id="x9oIpZaXTDs" onclick="return false;">
<div class="youtube-lazy-link-div"></div>
<div class="youtube-lazy-link-info">Discover to Deliver Explained</div>
</a>
<div class="video-info" >This 2-minute of key concepts on how product partners conduct structured conversations to discover and deliver high value products. This framework, from the acclaimed book Discover to Deliver: Agile Product Planning and Analysis (see www.DiscoverToDeliver.com), is applied by organizations globally to identify the right software-intensive product to build, and build it right.</div>
</div>

</p>

<p>イメージ的にはスコープや要件に新たな切り口を定義する感じだろうか。</p>

<hr />

<p>発表者の方々はHowではなくWhyを語る人が多い印象を受けた。
ただ、Howを実践することでWhyを発見することはあるはず。
一方で、もっと人やプロダクトの価値にもっとフォーカスすべきだなあと感じた。</p>

<p>ベトナムの方々は強いインパクトがあった。
彼らはスクラムの未来を考えよう、とビジョンやマインドを語っていたし、若かった。ベトナムのIT業界の平均年齢は27歳らしい。</p>

<p>今回のイベントに参加して、本家アジャイルカンファレンスにも行きたくなった。</p>

<p>最後に、実行委員の皆様ありがとうございました。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Unityで3D野球盤を作った]]></title>
    <link href="http://matsue.github.io/blog/2015/02/04/unity-workshop/"/>
    <updated>2015-02-04T22:15:42+09:00</updated>
    <id>http://matsue.github.io/blog/2015/02/04/unity-workshop</id>
    <content type="html"><![CDATA[<p><img class="<a" src="href="https://lh6.googleusercontent.com/-jREUCZKPIRA/VNIwE0Q0JBI/AAAAAAAAR_A/bkdtFf09lvE/w1056-h692-no/unity-baseball-game.png">https://lh6.googleusercontent.com/-jREUCZKPIRA/VNIwE0Q0JBI/AAAAAAAAR_A/bkdtFf09lvE/w1056-h692-no/unity-baseball-game.png</a>&#8221;></p>

<p><a href="http://8a1-apc.connpass.com/event/11282/">&ldquo;【ハンズオン】初めてのUnityで作る「3D野球盤」APC勉強会 #14&rdquo;</a>に参加してきた。</p>

<!-- more -->


<p>当日の資料はこちら: <a href="http://www.slideshare.net/apc_8a1/8a120150204-unity">http://www.slideshare.net/apc_8a1/8a120150204-unity</a></p>

<p>上記の資料に沿ってUnityで3D野球盤を作ってきた。
資料がスクリーンショットを交えながら丁寧に作られていたし、
事前にオブジェクトやスクリプトが用意されていたこともあって、ちゃんと動くところまでいけた。
細かい操作で詰まっても質問してすぐに解決しながら作成できたのも良かった。
今回使用させてもらったオブジェクトやスクリプトが含まれるパッケージは、パスワード付きのリンクだったのでここには貼ってない。</p>

<p>今回のハンズオンでスクリプトの定義方法、コンポーネントの追加の仕方、Assetsの登録方法など基本的な操作が理解できた。</p>

<p>今回は時間短縮のためにパッケージで済ませた、
オブジェクトやゲームスクリプトの作成でトライ&amp;エラーを繰り返していたら、
とても１時間程度では終わらなかったと思う。</p>

<p>ほとんど用意されていたものを使ったとはいえ、動くとやっぱり嬉しい。</p>

<p>Unityで作成したアプリなので、この野球盤アプリはAndroidでも動いた。
ただ、ラップトップではキー操作で動く部分が、Androidでは画面タップにする必要があるのでそこは修正しないといけない。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Paris Tech Talks 8th に参加した]]></title>
    <link href="http://matsue.github.io/blog/2014/09/23/paris-tech-talks-8th/"/>
    <updated>2014-09-23T06:36:15+09:00</updated>
    <id>http://matsue.github.io/blog/2014/09/23/paris-tech-talks-8th</id>
    <content type="html"><![CDATA[<p><a href="http://www.meetup.com/Paris-Tech-Talks/events/206595892/">Paris Tech Talks #8</a> に参加してきた。
Paris Tech Talksは新しい技術や事業の紹介をする場。
<a href="http://matsue.github.io/blog/2014/08/06/paris-dot-rb/">Paris.rb</a> に続きパリでは2回目の勉強会参加になる。
珍しく英語開催のイベントということもあって参加してみた。</p>

<p><img class="<a" src="href="https://lh3.googleusercontent.com/-a9Jgv7TzM-A/VCCTzKMc0mI/AAAAAAAAFGk/wa4WihFt4fg/w924-h693-no/IMG_20140922_194645.jpg">https://lh3.googleusercontent.com/-a9Jgv7TzM-A/VCCTzKMc0mI/AAAAAAAAFGk/wa4WihFt4fg/w924-h693-no/IMG_20140922_194645.jpg</a>&#8221;></p>

<!-- more -->


<h2>セッション</h2>

<h3>Detctive.io</h3>

<p><a href="https://www.detective.io/tour/">Detctive.io</a>というデータジャーナリズムを扱うサービスの紹介。<br/>
サービスの裏側ではNeo4jとDjangoを使用していて、<a href="https://github.com/scholrly/neo4django">neo4django</a>を使っているらしい。
ただ、neo4djangoはまだ使える機能が限られており困っているとのこと。</p>

<h3>webプラットフォーム開発コミュニティ</h3>

<p>共通環境でのブラウザテストや標準化をするコミュニティの話。<br/>
十分なテストや、ライセンスにCCを用いたり、開発練習の場としてスナップショットを用意したり、トピックブランチを活用してもらうというような取り組みで人を増やそうとしているとのこと。</p>

<p>関連リンク:</p>

<ul>
<li><a href="http://extensiblewebmanifesto.org/">http://extensiblewebmanifesto.org/</a></li>
<li><a href="http://www.webplatform.com/">http://www.webplatform.com/</a></li>
</ul>


<h3>Platform.sh</h3>

<p>Ori pekelmanさんによる<a href="https://platform.sh/">Platform.sh</a>の紹介。<br/>
Gitにpushするだけでデプロイとかできる、という趣旨のサービス。
懇親会で話を聞く限り、発表者の方は開発ミートアップイベントの常連さんらしい。</p>

<h3>ドットカンファレンスの紹介</h3>

<p>パリで開催される<a href="http://www.dotgo.eu/">dotGO</a>、<a href="http://www.dotcss.eu/">dotCSS</a>、<a href="http://www.dotjs.eu/">dotJS</a>の紹介。<br/>
割引コード紹介や、<a href="http://www.dotjs.eu/prize">dotJS prize</a>の紹介があった。
dotJSプライズはOSSならノミネートできるとのこと。</p>

<p>その他にも以下のイベントが近くパリで開催される。</p>

<ul>
<li>Rails Girls</li>
<li><a href="http://scala.io/">Scala.io</a></li>
<li><a href="http://www.dotswift.io/">dotSwift</a></li>
</ul>


<h3>Pulsar</h3>

<p>Pulsarという開発中のビデオストリーミングソフトの紹介。<br/>
Kodi(XBMC)の上で動くtorrentの検索、ストリームエンジン。
Raspberry Piでも動くらしく、Chromecastのような機器も開発中とのこと。</p>

<p>関連リンク:</p>

<ul>
<li><a href="https://github.com/steeve/script.pulsar.dummy">https://github.com/steeve/script.pulsar.dummy</a></li>
<li><a href="http://forum.xbmc.org/showthread.php?tid=200957">http://forum.xbmc.org/showthread.php?tid=200957</a></li>
</ul>


<h2>イベント運営</h2>

<p>会場は<a href="http://www.deezer.com/">Deezer</a>のオフィスだった。
Deezerは音楽ストリーミングサイトで、日本とアメリカでは展開していない模様。</p>

<p><img class="<a" src="href="https://lh3.googleusercontent.com/dngAX2MxhhqSbqgqTjp4lPiMJfdnRhn14T7Gi26M8Fc=s207-p-no">https://lh3.googleusercontent.com/dngAX2MxhhqSbqgqTjp4lPiMJfdnRhn14T7Gi26M8Fc=s207-p-no</a>&#8221;>
<img class="<a" src="href="https://lh3.googleusercontent.com/cJUh3ZZi_yP1Vw7GPR37k5FrXxsbifHl_0mDpZsCfTQ=s207-p-no">https://lh3.googleusercontent.com/cJUh3ZZi_yP1Vw7GPR37k5FrXxsbifHl_0mDpZsCfTQ=s207-p-no</a>&#8221;>
<img class="<a" src="href="https://lh6.googleusercontent.com/a3JdQ8u_kuXnhxQdcSU-DA_9loRsaNZIeTrfXZwOZ0A=s207-p-no">https://lh6.googleusercontent.com/a3JdQ8u_kuXnhxQdcSU-DA_9loRsaNZIeTrfXZwOZ0A=s207-p-no</a>&#8221;></p>

<p>会場にはキッチン、ソファ、テーブルサッカー等があり、カジュアルな雰囲気。
オフィスの雰囲気がなさすぎて何度か前を通り過ぎてしまった。</p>

<p>登録221名に対して、実際の参加者は100名程度だったように見えた。</p>

<p>ピザもビールも十分あったのでお腹いっぱいになった。
ピザとビールはスポンサーによって提供。ありがとうございます。<br/>
いろいろなビールが用意されており、私は<a href="http://ja.wikipedia.org/wiki/%E3%83%87%E3%83%AA%E3%83%AA%E3%82%A6%E3%83%A0%E3%83%BB%E3%83%88%E3%83%AC%E3%83%A1%E3%83%B3%E3%82%B9">Delirium Beer</a>というのをいただいた。ありがとうございます。</p>

<p><img class="<a" src="href="https://lh6.googleusercontent.com/-rcr_ovLpHnQ/VCRsYtJDfmI/AAAAAAAAFPU/V0l_-qMjccc/w520-h693-no/IMG_20140922_222017.jpg">https://lh6.googleusercontent.com/-rcr_ovLpHnQ/VCRsYtJDfmI/AAAAAAAAFPU/V0l_-qMjccc/w520-h693-no/IMG_20140922_222017.jpg</a>&#8221;></p>

<p>スライドの位置は少し低めだったので、後ろの席の方々はときどき立ち上がって資料を確認していた。</p>

<p><img class="<a" src="href="https://lh4.googleusercontent.com/-RYTu2eKjjlo/VCRsYmYDyDI/AAAAAAAAFPU/rzevcRScXfI/w924-h693-no/IMG_20140922_200426.jpg">https://lh4.googleusercontent.com/-RYTu2eKjjlo/VCRsYmYDyDI/AAAAAAAAFPU/rzevcRScXfI/w924-h693-no/IMG_20140922_200426.jpg</a>&#8221;></p>

<h2>懇親会</h2>

<p><img class="<a" src="href="https://lh5.googleusercontent.com/-yRyxQymMeBw/VCRsYsowoAI/AAAAAAAAFPU/sfBL2mvHcwo/w924-h693-no/IMG_20140922_211742.jpg">https://lh5.googleusercontent.com/-yRyxQymMeBw/VCRsYsowoAI/AAAAAAAAFPU/sfBL2mvHcwo/w924-h693-no/IMG_20140922_211742.jpg</a>&#8221;></p>

<p>知ってる人がいないので、ピザをいただきつつ<a href="http://d.hatena.ne.jp/hyoshiok/20130602">よしおかさんメソッド</a>で何名かの方に話を聞いた。</p>

<p>話の中ではDevOpsという単語と共に、Puppet、Chef、Ansibleや<a href="https://github.com/saltstack/salt">Salt</a>の名前があがっていた。あとはDocker。</p>

<p>また<a href="https://www.mailjet.com/">Mailjet</a>というサービスで働いている方にどの言語でサービスを実装してるか聞いた所、<a href="http://blog.mailjet.com/post/93317385400/developer-evangelists-faq">Free Pascalという回答</a>がきて驚いた。
メールを処理する時にバッファオーバフローが起こらないから安全なので使っている、というようなお話だった。</p>

<p>ストレージに興味があるなら、<a href="http://www.meetup.com/Paris-Datageeks/">Paris DataGeeks</a>というミートアップがオススメとのこと。</p>

<hr />

<p>英語のミートアップではあったが、フランス語が喋れると活動の幅が広がるだろうなあ、改めて感じた。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Erlang User Conference 2014 に参加した]]></title>
    <link href="http://matsue.github.io/blog/2014/06/12/euc2014/"/>
    <updated>2014-06-12T14:09:40+09:00</updated>
    <id>http://matsue.github.io/blog/2014/06/12/euc2014</id>
    <content type="html"><![CDATA[<p>ストックホルムで開催された<a href="http://www.erlang-factory.com/euc2014">Erlang User Conference 2014</a>に参加した。</p>

<p><img src="/images/2014-06-12-euc2014/euc2014_sponsors.jpg" title="&lsquo;euc2014_sponsors&rsquo; &lsquo;The flag of sponsors ato Erlang User Conference 2014&rsquo;" ></p>

<p>大変有難いことに<a href="http://www.erlang-factory.com/euc2014/yosuke-hara">LeoFSのセッション</a>の一部で、7分ほど登壇させていただいた。</p>

<iframe src="http://www.slideshare.net/slideshow/embed_code/35673208" width="427" height="356" frameborder="0" marginwidth="0" marginheight="0" scrolling="no" style="border:1px solid #CCC; border-width:1px 1px 0; margin-bottom:5px; max-width: 100%;" allowfullscreen> </iframe>


<p> <div style="margin-bottom:5px"> <strong> <a href="https://www.slideshare.net/rakutentech/scaling-and-high-performance-storage-system-leofs" title="Scaling and High Performance Storage System: LeoFS" target="_blank">Scaling and High Performance Storage System: LeoFS</a> </strong> from <strong><a href="http://www.slideshare.net/rakutentech" target="_blank">Rakuten, Inc</a></strong> </div></p>

<!-- more -->


<p>私が話したのは主にLeoFSのユースケースで、</p>

<ul>
<li>現時点で600TB程度のディスク総量でクラスタを組んでいる

<ul>
<li>データセンター間のレプリケーション機能を使っていきたい</li>
</ul>
</li>
<li>社内のファイル共有にownCloudをLeoFSと組み合わせて使っている

<ul>
<li>各国のグループ会社との動画の共有などに使われている</li>
</ul>
</li>
</ul>


<p>というようなことを紹介した。<br/>
私たちのセッションには30名ほどの方が聞きにきてくれていたかと思う。</p>

<h2>Day1</h2>

<p>初日は以下のセッションに参加した。</p>

<ol>
<li>Welcome to the Erlang User Conference!</li>
<li>Keynote: Composing a Functional Community (Katie Miller)</li>
<li>Scaling and High Performance Storage System: LeoFS (Yosuke Hara) => 発表</li>
<li>The Last REST Client You Will Ever Need (Loïc Hoguin)</li>
<li>Concuerror: Into Real Code (Stavros Aronis)</li>
<li>Building a Distributed Data Ingestion System with RabbitMQ (Alvaro Videla)</li>
<li>Building a Cloud with Erlang and SmartOS - How Hard Could it Possibly Be? (Heinz Gies)</li>
<li>Locks - Erlang-style Scalable Distributed Locking (Ulf Wiger)</li>
</ol>


<h3>Composing a Functional Community</h3>

<p>初日のキーノートは<a href="http://www.lambdaladies.com/">Lambda Ladies</a>という関数型言語の女性コミュニティから、Katieさんによる発表。</p>

<p>FP(Functional Programming)コミュニティの発展には以下が必要というお話でした。</p>

<ul>
<li>Education ビギナー向けの教育</li>
<li>Safe space ハラスメント対策とか</li>
<li>Mentoring 励ます メンティーはメンターになっていく</li>
</ul>


<p>今のテックスペースやコミュニティはデフォルトで男性向けである話や、実際に女性達が感じていることが紹介されていて、ほとんど男性で埋まっていた会場に対してパンチの効いた発表。<br/>
<a href="http://www.codemiller.com/blog/2013/07/06/functional-frock-a-dress-fit-for-a-lambda-lady/">Haskellによる6つのソートアルゴリズムがプリントされたギークドレス</a>も印象的でした。</p>

<ul>
<li>発表者プロフィール: <a href="http://www.erlang-factory.com/euc2014/katie-miller">http://www.erlang-factory.com/euc2014/katie-miller</a></li>
<li>スライド: <a href="http://community.codemiller.com/#/">http://community.codemiller.com/#/</a></li>
</ul>


<h3>The Last REST Client You Will Ever Need</h3>

<p>webサーバの<a href="https://github.com/extend/cowboy">cowboy</a>の開発者であるLoicさんによる発表。</p>

<p>REST APIに使うMedia TypeにJSON、Msgpack、HTML、XMLに代わってBEDというのを考えてるよ、という話。<br/>
Media Typeは独自の定義が使えるので、以下のようなタイプを提唱していた。</p>

<ul>
<li>application/x-bed</li>
<li>application/x-bed-stream</li>
</ul>


<p>バイト数は短く、圧縮もなしで、relationも定義できて・・というようなものを目指しているよう。<br/>
現時点では構想の段階でレポジトリはないが、プロジェクトは作成されている。
<a href="https://github.com/bed-project">https://github.com/bed-project</a></p>

<p>ヘルプ絶賛募集中とのことなので、BEDが気になった方はLoicさんにコンタクトをとるといいと思う。</p>

<ul>
<li>発表者プロフィール: <a href="http://www.erlang-factory.com/euc2014/loc-hoguin">http://www.erlang-factory.com/euc2014/loc-hoguin</a></li>
<li>スライド: <a href="http://ninenines.eu/talks/bed/bed.html">http://ninenines.eu/talks/bed/bed.html</a></li>
</ul>


<h3>Building a Distributed Data Ingestion System with RabbitMQ</h3>

<p>&ldquo;RabbitMQ in Action&#8221;の著者のAlvaroさんによるRabbitMQのデザインパターン紹介。</p>

<p>複数のDC間でのログ集めにRabbitMQを使ってるらしい。<br/>
スケールしていくには<a href="http://www.rabbitmq.com/federation.html">Federation Plugin</a>を使うといいよという内容。<br/>
性能が必要だが、メッセージのロスが許されるような場合はno-ackモードという選択肢もあるとのこと。</p>

<p>以下のデモページでメッセージが分配される様子を紹介しながらの発表だった。</p>

<ul>
<li>デモ実行ページ: <a href="http://tryrabbitmq.com/">http://tryrabbitmq.com/</a></li>
<li>デモのソース: <a href="https://github.com/RabbitMQSimulator/RabbitMQSimulator">https://github.com/RabbitMQSimulator/RabbitMQSimulator</a></li>
</ul>


<p>各workerにメッセージが分散される様子を見れるデモページは、ついついポチポチ押したくなってしまう。<br/>
正規表現を使ってのメッセージの内容に応じたルーティングもできる模様。</p>

<p>Fedarationを使った分散の例は以下のリンクでもJavaのコードを交えて紹介されているようだ。
<a href="http://jaxenter.com/distributed-log-aggregation-with-rabbitmq-federation-49154.html">http://jaxenter.com/distributed-log-aggregation-with-rabbitmq-federation-49154.html</a></p>

<ul>
<li>発表者プロフィール: <a href="http://www.erlang-factory.com/euc2014/alvaro-videla">http://www.erlang-factory.com/euc2014/alvaro-videla</a></li>
<li>スライド: <a href="http://www.erlang-factory.com/static/upload/media/1402395255933144rabbitmq_data_ingestion_euc.pdf">http://www.erlang-factory.com/static/upload/media/1402395255933144rabbitmq_data_ingestion_euc.pdf</a></li>
</ul>


<h2>Day2</h2>

<p>二日目に参加したセッションはこちら。</p>

<ol>
<li>Welcome to the 2nd Day of the EUC!</li>
<li>Keynote: Erlang, Open Networking, and the Future of Computing (Stuart Bailey)</li>
<li>Powering your Web and Mobile Applications (Jordan Wilberding)</li>
<li>Monitoring Erlang Systems with WombatOAM (Richard Jonas)</li>
<li>Scaling Erlang on 10K or More Cores: An Overview of the RELEASE Project (Simon Thompson)</li>
<li>Real-Time Performance at Massive Scale (Francois Orsini)</li>
<li>Where Shall I Parallelize? (Tamás Kozsik)</li>
<li>Elixir Tooling: Exploring Beyond the Language (Eric Meadows-Jönsson)</li>
<li>Latest News from the OTP Team - Kenneth Lundin</li>
<li>Announcement of the Erlang User of the Year &amp; the Most Influential Talk of 1999</li>
</ol>


<h3>Elixir Tooling: Exploring Beyond the Language</h3>

<p>ElixirコミッターのEricさんによる発表。</p>

<p>はじめにElixirの今年のニュースとして以下の３つを挙げていた。</p>

<ul>
<li>version1.0がリリース予定</li>
<li><a href="http://elixirconf.com/">ElixirConf</a>が開催予定</li>
<li>パッケージマネージャの<a href="https://hex.pm/">Hex</a>がリリースされた</li>
</ul>


<h4>Mix</h4>

<p>Mixというのはプロジェクト作成、コンパイル、テスト、などなどをサポートしてくれるツール。
ErlangのrebarやRubyでのrakeやbundleに似たことをしてくれる模様。</p>

<p>以下のツールを入れると、Mixのコマンドが拡張されるようだ。</p>

<ul>
<li>ecto <a href="https://github.com/elixir-lang/ecto">https://github.com/elixir-lang/ecto</a></li>
<li>exrm <a href="https://github.com/bitwalker/exrm">https://github.com/bitwalker/exrm</a></li>
</ul>


<p>ectoはDBのラッパーや管理を提供し、exrmはリリースをサポートしてくれる模様。</p>

<h4>Hex</h4>

<p>Elixirのパッケージマネージャで最近リリースされたばかりのようだ。<br/>
パッケージはS3でホスティングされてるとのこと。</p>

<h4>IEx</h4>

<p>Erlangでいうところのerl, Rubyでいうところのirbにあたる、Elixirの実行ターミナル。</p>

<p>IEx.pryを書いておくと実行中のコードの途中でiexに入ってデバッグできるらしい。pryにインスパイアされたものだそうだ。</p>

<p>iexシェルの中では<code>h Enum.map/2</code>とかするとヘルプも見えるとのこと。</p>

<h4>ExUnit</h4>

<p>tagsやfilter機能を使うと環境毎にテストを分けたり、特定ケースだけ実行することができるようだ。</p>

<p>またElixirではdoctestも提供されているとのこと。この形式で書かれたコメントは、後でドキュメントとして生成されるだけでなく、書かれているコードはテストとしての実行もしてくれる。</p>

<h4>Standard library</h4>

<ul>
<li><a href="http://elixir-lang.org/docs/stable/elixir/Stream.html">Stream</a>

<ul>
<li>再帰的にファイルの各行に処理するコードが、eachにブロック渡すだけのコードにできる。</li>
<li>遅延評価されるので必要になったときだけ実際にファイルをオープンしてる。</li>
</ul>
</li>
<li><a href="http://elixir-lang.org/docs/stable/elixir/Agent.html">Agent</a>

<ul>
<li>OTPを抽象化してくれるライブラリ</li>
</ul>
</li>
<li><p><a href="http://elixir-lang.org/docs/stable/elixir/Task.html">Task</a></p>

<ul>
<li>非同期に処理をするために使うライブラリ</li>
<li>Task.asyncでタスクを作って、Task.awaitで待つ、というような使い方。</li>
</ul>
</li>
<li><p>発表者プロフィール: <a href="http://www.erlang-factory.com/euc2014/eric-meadowsjnsson">http://www.erlang-factory.com/euc2014/eric-meadowsjnsson</a></p></li>
<li>スライド: <a href="http://www.erlang-factory.com/static/upload/media/1402598794815412elixirtooling.pdf">http://www.erlang-factory.com/static/upload/media/1402598794815412elixirtooling.pdf</a></li>
</ul>


<h3>Latest News from the OTP Team</h3>

<p>OTPチームからの17系以降の変更点の紹介。</p>

<ul>
<li>新しいデータ型のMaps</li>
<li>binary周りで発生していた、スレッドにおけるブロックが減る</li>
<li>ライセンスがEPL(Erlang Public License)からApache License Version 2.0に代わる</li>
</ul>


<p>ライセンスに関しては以前、Mozilla Public Licenseへの移行も検討されていたようだ。
ライセンス変更にあたり、コミッターの方々にはメールで同意を求めるので&#8221;Yes&#8221;という準備しておいてね！というようなことを言っていた。</p>

<h2>Day3</h2>

<p>最終日は以下のチュートリアルに参加した。</p>

<ol>
<li>Introduction to Load Testing with Tsung (Radosław Szymczyszyn)</li>
<li>Erlang in Production - Tricks and Tools for Running Erlang Production Systems (Jesper Louis Andersen)</li>
<li>Load Testing Made Easy (Diana Corbacho)</li>
<li>Deploying and Monitoring Erlang Nodes in the Cloud (Csaba Hoch)</li>
</ol>


<p><img src="/images/2014-06-12-euc2014/euc2014_ericsson.jpg" title="&lsquo;euc2014_ericsson&rsquo; &lsquo;Ericsson Group headquarters&rsquo;" ></p>

<p>WombatOAMやMegaloadといったErlang監視ツール、ロードテストサポートツールにも実際に触れることができたがこちらはOSSではないようだ。</p>

<h3>Introduction to Load Testing with Tsung</h3>

<p>ロードテストツールであるTsungの紹介。こちら、Erlang製のJMeterのようなもの。</p>

<p>チュートリアルは以下の資料に従い、Vagrantで構築された複数VMを使って行われた。Tsungの資料はあまりないと思われるので貴重だ。</p>

<ul>
<li><a href="https://github.com/lavrin/euc-2014">https://github.com/lavrin/euc-2014</a></li>
<li><a href="https://github.com/lavrin/tsung-scenarios">https://github.com/lavrin/tsung-scenarios</a></li>
</ul>


<p>Tsungに関するメモ。</p>

<ul>
<li>指定されたユーザ数でランダムなアクセスをシミュレーションできる

<ul>
<li>XMPP、TCP、HTTPなどのロードテストができる</li>
<li>ログインパスワード指定できる</li>
<li>ユーザによってはログインしかしないとかシミュレーションできる</li>
<li>パスにIDとかいれてリクエスト生成してくれる</li>
</ul>
</li>
<li>今回のサンプルでdurationが14400 minutesなのは十分に大きくするため</li>
<li>ディレクトリ構成やログインユーザ、elrangのcookieなど環境揃っている必要があるが、複数のノードからtsungの実行もできるらしい</li>
<li>テストの結果はtsplotとかでグラフにできるらしい</li>
<li>テスト時に、<code>ulimit -n</code>の上限に引っかかる可能性あるので注意しておく</li>
<li>クラスタでやるときはtsung-controllerというのもあるらしいが、使用には注意らしい(SPOF?)</li>
<li>dumptrafficというオプションをオンにすると、大量のログがでるので注意</li>
<li><p>JMeterと違ってErlangなので、テスト時にはerlangのメソッドを直接呼ぶようなテストもできるらしい</p></li>
<li><p>発表者プロフィール: <a href="http://www.erlang-factory.com/euc2014/radosaw-szymczyszyn">http://www.erlang-factory.com/euc2014/radosaw-szymczyszyn</a></p></li>
</ul>


<h3>Erlang in Production</h3>

<p>運用者が朝まで寝ていられるシステムをつくるにはどうすればいいかという話。</p>

<p>まず、システムはいつ壊れるのかという話を&#8221;How Complex Systems Fail&#8221;というRichard Cookさんの資料を引用しつつ紹介。
たぶん元の資料は<a href="http://www.ctlab.org/documents/How%20Complex%20Systems%20Fail.pdf">こちら</a>。</p>

<p>紹介されていたライブラリの一部。
- <a href="https://github.com/feuerlabs/exometer">https://github.com/feuerlabs/exometer</a><br/>
- <a href="https://github.com/klarna/circuit_breaker">https://github.com/klarna/circuit_breaker</a>
- <a href="https://github.com/basho/sidejob">https://github.com/basho/sidejob</a>
- <a href="https://github.com/uwiger/jobs">https://github.com/uwiger/jobs</a>
- <a href="https://github.com/massemanet/eper">https://github.com/massemanet/eper</a></p>

<p>上記のライブラリは、Erlangプロセスの情報を収集したり、ジョブスケジューリングをしてくれるもののようだ。</p>

<p>以降は、使ってるライブラリや設定の話。</p>

<h4>sys.configについて</h4>

<p><code>erl -man config</code>でも確認できるがconfigは、他のファイルも読めるので環境ごとのファイルを置いておくようにするといいらしい。</p>

<h4>Lager</h4>

<p><a href="https://github.com/basho/lager">https://github.com/basho/lager</a></p>

<p>logライブラリにはlagerを使って、どこかに集めている。
<a href="https://github.com/boundary/folsom">folsom</a>のデータ飛ばしてるらしい。</p>

<h4>alarm_handler</h4>

<p>SASLの一部。アラートは自分で定義できて、Nagiosサーバにもデータ飛ばすこともできる。
アラームがオフになる時(?)にlagerに流し込むとかもできる。</p>

<p>Nagiosと組み合わせる際は、ファイル書き出されたステータスをNagiosが定期的に確認するようにしていたらしい。</p>

<h4>os_mon</h4>

<p><a href="http://erlang.org/doc/man/os_mon_app.html">http://erlang.org/doc/man/os_mon_app.html</a></p>

<p>cpu usageみたりもできる。mem_supでメモリ使い過ぎ検知もできる。</p>

<h4>fuse</h4>

<p><a href="https://github.com/jlouis/fuse">https://github.com/jlouis/fuse</a></p>

<p>マウントに使うfuseとは別のErlangライブラリ。<br/>
たとえばmysql落ちた時にほかのノードの処理をキックするのに使う。</p>

<h4>Folsom</h4>

<p><a href="https://github.com/boundary/folsom">https://github.com/boundary/folsom</a></p>

<p>メトリクスのライブラリ。</p>

<p>データ転送にはUDP使ってる、リモートが落ちてたり遅いことに影響されないように。<br/>
counters, gauges, spirals, histogramsなどのグラフが用意されている。<br/>
グラフを見るに当たっての注意点としては、平均を見るのは危険。低い方と高い方に値が固まっているかもしれないので。なので、95th、99thパーセンタイルの情報をみるべき。</p>

<h4>なにを集計する？</h4>

<p>取れるものすべてを集計してる。</p>

<ul>
<li>query times</li>
<li>internal heavy weight processing</li>
<li>API endpoints</li>
<li>every cascading subsystem</li>
<li>cache hit/miss, あとDBたたいた時にどうだったのか</li>
</ul>


<h4>Tracing / Recon</h4>

<ul>
<li><a href="http://ferd.github.io/recon/">http://ferd.github.io/recon/</a></li>
<li><a href="https://github.com/ferd/recon">https://github.com/ferd/recon</a></li>
</ul>


<p>reconは各pidが何を実行しているかわかるようにしてくれるらしい。
recon_traceでオンラインtracingもできるらしい。</p>

<h2>会場の写真</h2>

<p>カンファレンス会場に使われた建物。
<img src="/images/2014-06-12-euc2014/euc2014_venue.jpg" title="&lsquo;euc2014_venue&rsquo; &lsquo;The venue of EUC2014&rsquo;" ></p>

<p>カンファレンス会場では何故かファミコンが置かれていて、グラディウスやボンバーマンをプレイされていた。コナミコマンドは使っていないようだ。
<img src="/images/2014-06-12-euc2014/euc2014_game.jpg" title="&lsquo;euc2014_game&rsquo; &lsquo;Game space at EUC2014&rsquo;" ></p>

<p>カンファレンス会場でのランチの様子。
<img src="/images/2014-06-12-euc2014/euc2014_lunch.jpg" title="&lsquo;euc2014_lunch&rsquo; &lsquo;Lunch time at EUC2014&rsquo;" ></p>

<p>チュートリアルで使われたEricssonの一室。
<img src="/images/2014-06-12-euc2014/euc2014_tutorial_room.jpg" title="&lsquo;euc2014_tutorial_room&rsquo; &lsquo;Tutorial room at Ericsson&rsquo;" ></p>

<p>Ericssonでのランチ。スウェーデンではサンドイッチの出る場面が多い。
<img src="/images/2014-06-12-euc2014/euc2014_tutorial_lunch.jpg" title="&lsquo;euc2014_tutorial_lunch&rsquo; &lsquo;Lunch time at Ericsson&rsquo;" ></p>

<h2>おわりに</h2>

<p>EUCに参加するのは二度目で、前回は<a href="http://www.erlang-factory.com/conference/ErlangUserConference2012">2012年のEUC</a>に参加していた。</p>

<p>以前は日に何度かあるコーヒブレイクの45分が非常に長く感じられたのだが、今回は会場で知り合った方と話せたこともあってか、あっという間に感じられた。<br/>
英語への敷居が前よりも下がったのかもしれない。<a href="http://d.hatena.ne.jp/hyoshiok/20130602">コーヒーを取るタイミング</a>で、目が合ったら&#8221;hi&#8221;と言ってみたりもした。<br/>
わずかだがJoe Armstrongさんとも話せて嬉しい限りだ。</p>

<p>また、あまり前回は意識していなかったが、発表者はみんな英語が母国語とは限らない。<br/>
よく聞いていると、言いたいことが出てこなかったり、発音を気にして言い直したりしている。<br/>
ヨーロッパの各地から来ている人がいるので、イントネーションも様々だった。<br/>
英語での発表には、多少の不自由を感じながらもみんなやっているのかもしれない。</p>

<p>最後に、今回の発表・参加にあたってレビューや調整をしてくれた皆様に感謝します。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[第21回 AWS User Group - Japan 東京勉強会に参加しました]]></title>
    <link href="http://matsue.github.io/blog/2014/05/21/jaws-ug-tokyo-21th-20140521/"/>
    <updated>2014-05-21T00:12:13+09:00</updated>
    <id>http://matsue.github.io/blog/2014/05/21/jaws-ug-tokyo-21th-20140521</id>
    <content type="html"><![CDATA[<p>AWSのユーザイベントということで、naoyaさんの自動化の話から始まりました。このセッションが一番印象に残りました。<br/>
コード化された運用は形式知化である。そして手順であれコードであれ、「なんでそうしてるのか？」ということも共有されないといけない。なるほど、なるほど。<br/>
紹介されていたQiita teamは使ったことないけれど、Markdownで書けて、気軽に投稿して、検索可能な情報共有の場があると、たしかに良さそうです。</p>

<p>以下、イベント参加時のメモです。</p>

<!-- more -->


<hr />

<h2>イベント関連link</h2>

<ul>
<li>イベントページ: <a href="http://jawsug-tokyo.doorkeeper.jp/events/11269">http://jawsug-tokyo.doorkeeper.jp/events/11269</a></li>
<li>Twitter: <a href="https://twitter.com/search?q=%23jawsug">https://twitter.com/search?q=%23jawsug</a></li>
</ul>


<h2>伊藤 直也さん</h2>

<p>資料: <a href="https://speakerdeck.com/naoya/sukerusurukai-fa-zu-zhi-falsezuo-rifang-number-jawsug">https://speakerdeck.com/naoya/sukerusurukai-fa-zu-zhi-falsezuo-rifang-number-jawsug</a></p>

<h3>手作業はなぜダメなのか</h3>

<p>暗黙知になる = 言語化されてないノウハウ<br/>
ログ何処にあるか、サーバ止めていいかわからない</p>

<p>しっかり手順書？いいえ、infrastracture as a code<br/>
コードにするだけでいい？いいえ</p>

<p>コードにすると&hellip;</p>

<ul>
<li>オブジェクト指向になる。</li>
<li><p>アプリケーション開発の文脈で使える、業務フローが変わる<br/>
フローとはgithubでpull requestとか</p></li>
<li><p>べきとうである</p></li>
<li><p>変更が可視化される</p>

<ul>
<li>たとえばnginxの設定を変えたとか</li>
<li>pull requestないと普段だれも見てない</li>
</ul>
</li>
<li><p>2時間が10分はそれほど重要ではない</p></li>
<li>属人化して不明なことを減らす

<ul>
<li>わからないことには保守的になる。不透明な課金部分とか触れない。</li>
<li>組織のスケールアウトを阻害する</li>
</ul>
</li>
</ul>


<h3>スタートアップの機動力</h3>

<ul>
<li>暗黙知が少ないので自律的に動きやすい(全能感)

<ul>
<li>フィードバックも得やすく自信を得られる</li>
</ul>
</li>
<li>暗黙知の圧力で保守的になりスタートアップがスタートアップでなくなる</li>
</ul>


<p>ref: &ldquo;the tweleve factor app&rdquo;</p>

<p>フロー情報の共有による知識のチーム間の横展開、連鎖<br/>
Qiita teamとか</p>

<h3>まだできてないこと</h3>

<ul>
<li>メンタルモデルのコードへの反映

<ul>
<li>野生動物を見たら危険だと判断するといった判断</li>
</ul>
</li>
<li>「なぜ」が暗黙知化されがち

<ul>
<li>パーミッションかえる => なんで？とか</li>
<li>そこはドキュメント化するしかない。そこでフロー情報の共有。</li>
</ul>
</li>
</ul>


<h3>質問タイム</h3>

<h4>Q. フロー情報の共有にQiita team以外に試したツールは？</h4>

<p>上手く行かなかった物があるが名前は出せない。wikiのようなもの使っていた。<br/>
wikiだと更新しなかったことも、Qiita teamのようなものだと気軽に投稿できてよい。</p>

<hr />

<h2>Wantedly株式会社 川崎 禎紀さん</h2>

<p>サービス開始からの2年間Heroku</p>

<p>サーバの使い分け
- staging: 本番と同じデータ、デプロイ前のテスト<br/>
- QA: topicブランチのテスト、ユーザなどに見てもらう</p>

<p>travis, circleではなくwercker使ってる</p>

<p>新しい機能試すこと目的ではなく、ユーザに価値を届けるのが大事にするべし</p>

<hr />

<h2>Sansan株式会社 宍倉 功一さん</h2>

<p>Eightの話</p>

<h3>KPI</h3>

<p>PDCAの効果測定、検証での指標</p>

<p>評価、状態の共有方法
- メール
- Dashboard => ducsdataを40インチディスプレイに映してる
- その他 fluentd + slash7</p>

<hr />

<h2>株式会社スマートエデュケーション 谷川裕之さん</h2>

<p>世界への配信にS3 + CloudFront必須<br/>
MBaasSはParseを参考に自作してる</p>

<hr />

<h2>ChatWork株式会社 山本 正喜さん</h2>

<p>RDSにmroogaでラップして検索インデックスつくってる<br/>
mroogaからelasticsearchの導入を検討していたが、amazon cloudsearchを導入予定<br/>
コードはPHPからScalaへ乗り換え予定</p>

<hr />

<h2>株式会社nanapi 和田 修一さん</h2>

<p>logはfluentd<br/>
生でs3へ<br/>
あとはelasticsearch + kibanaで視覚化</p>

<hr />

<h2>ランサーズ株式会社 田邊 賢司さん</h2>

<ul>
<li>4000人が毎月収入</li>
<li>生活出来るひと: 200人</li>
</ul>


<hr />

<h2>株式会社アカツキ 田中 勇輔さん</h2>

<p>CloudFormationのテンプレート: yusuketのgist<br/>
asset_sync gem利用中<br/>
filepath + MD5をs3にで管理し、ファイル自体はダウンロードせずに存在確認してる<br/>
cloudwatchのアラートをhipchatに送ってる<br/>
github/blacklineのプラグイン使用中</p>

<hr />

<h2>Kaizen platform Inc. 石橋 利真さん</h2>

<p>調整さん、plat BCD(ABテストツール)<br/>
リモートワークしてる</p>

<h3>インフラ運用の見える化</h3>

<p>暗黙知era => 見える化era</p>

<p>事件</p>

<ul>
<li>ec2keypairなくなった。</li>
<li>RAILS_ENVはどこ。/etc/profile.d/rail.shで設定されてた。</li>
</ul>


<p>chef(knife-solo) + serverspec<br/>
ref: github時代のデプロイ戦略</p>

<hr />

<h2>株式会社ビズリーチ 竹内 真さん</h2>

<p>LUXAの話</p>

<p>メール1億通/月<br/>
外部サービス、SESは使ってない<br/>
送る時にSMTPサーバ数増やす<br/>
EC2の金額抑えるために稼働時間は30~45分でコントロールしてる</p>

<hr />

<h2>イベントレジスト株式会社 池田 大輔さん</h2>

<p>翻訳にはTransifex使ってる</p>
]]></content>
  </entry>
  
</feed>
