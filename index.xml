<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>256DAYS</title>
    <link>http://matsue.github.io/index.xml</link>
    <description>Recent content on 256DAYS</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>jp-ja</language>
    <copyright>All rights reserved - 2015</copyright>
    <lastBuildDate>Sat, 24 Sep 2016 22:25:51 +0900</lastBuildDate>
    <atom:link href="http://matsue.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>使いにくい人材と理念が『10万人に愛されるブランドを作る！』</title>
      <link>http://matsue.github.io/post/lifenet-marketing/</link>
      <pubDate>Sat, 24 Sep 2016 22:25:51 +0900</pubDate>
      
      <guid>http://matsue.github.io/post/lifenet-marketing/</guid>
      <description>&lt;p&gt;『10万人に愛されるブランドを作る！』を読んだ。&lt;br /&gt;
ライフネット生命のマーケティングについて書かれた本だけれども、スターバックスのマーケティングについても書かれている。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;「どこかに喫茶店、コーヒー屋さんはないだろうか？」&lt;br /&gt;
と店を探すことはしないでしょう。まず、&lt;br /&gt;
「最寄りのスターバックスコーヒーはどこだろうか？」&lt;br /&gt;
と探してくれるのです。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;/p&gt;

&lt;p&gt;たしかに「スタバ」という単語をGoogle Mapに入れたことが何度か思い当たる。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;スターバックスはコーヒー・ビジネスに非ず&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;え、そうなの？&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;実はスターバックスは、自らのビジネスを「コーヒー・ビジネス」とは一度も称していません。開業当初も今も、自らのビジネス「ピープル・ビジネス」と称しています。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;そうだったのか！&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;「スターバックスでは「いらっしゃいませ」は、まず使われることはありません。なぜならその掛け声が、スターバックスの理念と合致しないからです。」&lt;br /&gt;
&amp;hellip;&lt;br /&gt;
スターバックスには「『いらっしゃいませ』と言ってはいけない」というマニュアルはない&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;なんだってー！&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;「使いにくい人材こそ、採用したい人材だ」&lt;br /&gt;
&amp;hellip;&lt;br /&gt;
来たれ、使いにくい人材。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;尊敬するすごい人達と一緒に働きたいなあと思ったとき、思い浮かんだ人達は組織でおとなしく仕事するタイプではない。&lt;br /&gt;
「使いにくい人材」という言い方はすごくしっくりくる。&lt;/p&gt;

&lt;p&gt;スターバックスとライフネット生命のマーケティング理念や実際に行われていることが書かれていて、読みながらアイデアも浮かんでくる、とても参考になる本だった。&lt;/p&gt;

&lt;div class=&#34;amazlet-box&#34; style=&#34;margin-bottom:0px;&#34;&gt;&lt;div class=&#34;amazlet-image&#34; style=&#34;float:left;margin:0px 12px 1px 0px;&#34;&gt;&lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4492557113/waytoa-22/ref=nosim/&#34; name=&#34;amazletlink&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;http://ecx.images-amazon.com/images/I/41q95WyyclL._SL160_.jpg&#34; alt=&#34;10万人に愛されるブランドを作る!&#34; style=&#34;border: none;&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;div class=&#34;amazlet-info&#34; style=&#34;line-height:120%; margin-bottom: 10px&#34;&gt;&lt;div class=&#34;amazlet-name&#34; style=&#34;margin-bottom:10px;line-height:120%&#34;&gt;&lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4492557113/waytoa-22/ref=nosim/&#34; name=&#34;amazletlink&#34; target=&#34;_blank&#34;&gt;10万人に愛されるブランドを作る!&lt;/a&gt;&lt;div class=&#34;amazlet-powered-date&#34; style=&#34;font-size:80%;margin-top:5px;line-height:120%&#34;&gt;posted with &lt;a href=&#34;http://www.amazlet.com/&#34; title=&#34;amazlet&#34; target=&#34;_blank&#34;&gt;amazlet&lt;/a&gt; at 16.09.24&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;amazlet-detail&#34;&gt;中田 華寿子 &lt;br /&gt;東洋経済新報社 &lt;br /&gt;売り上げランキング: 194,583&lt;br /&gt;&lt;/div&gt;&lt;div class=&#34;amazlet-sub-info&#34; style=&#34;float: left;&#34;&gt;&lt;div class=&#34;amazlet-link&#34; style=&#34;margin-top: 5px&#34;&gt;&lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4492557113/waytoa-22/ref=nosim/&#34; name=&#34;amazletlink&#34; target=&#34;_blank&#34;&gt;Amazon.co.jpで詳細を見る&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;amazlet-footer&#34; style=&#34;clear: left&#34;&gt;&lt;/div&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>全速前進で進むために必要なもの『ザ・ビジョン 進むべき道は見えているか』</title>
      <link>http://matsue.github.io/post/full-steam-ahead/</link>
      <pubDate>Sun, 04 Sep 2016 22:09:29 +0900</pubDate>
      
      <guid>http://matsue.github.io/post/full-steam-ahead/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;一身を投げ出すとは、行動に移すということだ。いろいろ不安があっても、それを受け止めつつ、なお前進すべきなのだ。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;!--  --&gt;

&lt;blockquote&gt;
&lt;p&gt;自分にはできる、あるいはできるようになりたいと思ったら、ともかくはじめること。大胆さが才能を生み、力を生み、魔法を生む。&amp;mdash;ゲーテ&lt;/p&gt;
&lt;/blockquote&gt;

&lt;!--  --&gt;

&lt;blockquote&gt;
&lt;p&gt;やろう思えば、できないことはない、やろうと思えば夢はかなうのだということを、人々に気づいて欲しい。&amp;mdash;テリー・フォックス(一九八〇年)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;『ザ・ビジョン 進むべき道は見えているか』は、エリーとジムが対話する物語を通して、「ビジョン」に必要な要素や考え方が述べられている本。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;p&gt;訳者の方のあとがきが端的にわかりやすく本の内容について書いてくれている。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;すぐれたビジョンには「有意義な目的」「明確な価値観」「未来のイメージ」の三つが要求される&lt;/p&gt;
&lt;/blockquote&gt;

&lt;!--  --&gt;

&lt;blockquote&gt;
&lt;p&gt;自分の葬儀でどんな追悼文を読んでほしいか&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;ノーベルは生存中に死亡記事を誤って書かれ、その記事にダイナマイトによる「破壊」のことばかりが書かれていたことにがっかりする。&lt;br /&gt;
そこからノーベルは「平和」によって人々の記憶に残るよう舵を切る。&lt;/p&gt;

&lt;p&gt;スティーブ・ジョブズのスピーチにも最後の日を意識した一文がある。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;If today were the last day of my life, would I want to do what I am about to do today?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;追悼文や最後の日を意識することはビジョンの1つの表現方法であり、「目的」を持つことで全速前進(Full Steam Ahead)することができる。&lt;/p&gt;

&lt;div class=&#34;amazlet-box&#34; style=&#34;margin-bottom:0px;&#34;&gt;&lt;div class=&#34;amazlet-image&#34; style=&#34;float:left;margin:0px 12px 1px 0px;&#34;&gt;&lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4478732701/waytoa-22/ref=nosim/&#34; name=&#34;amazletlink&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;http://ecx.images-amazon.com/images/I/51MWK5KSXFL._SL160_.jpg&#34; alt=&#34;ザ・ビジョン 進むべき道は見えているか&#34; style=&#34;border: none;&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;div class=&#34;amazlet-info&#34; style=&#34;line-height:120%; margin-bottom: 10px&#34;&gt;&lt;div class=&#34;amazlet-name&#34; style=&#34;margin-bottom:10px;line-height:120%&#34;&gt;&lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4478732701/waytoa-22/ref=nosim/&#34; name=&#34;amazletlink&#34; target=&#34;_blank&#34;&gt;ザ・ビジョン 進むべき道は見えているか&lt;/a&gt;&lt;div class=&#34;amazlet-detail&#34;&gt;ケン・ブランチャード ジェシー・ストーナー &lt;br /&gt;ダイヤモンド社 &lt;br /&gt;売り上げランキング: 3,052&lt;br /&gt;&lt;/div&gt;&lt;div class=&#34;amazlet-sub-info&#34; style=&#34;float: left;&#34;&gt;&lt;div class=&#34;amazlet-link&#34; style=&#34;margin-top: 5px&#34;&gt;&lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4478732701/waytoa-22/ref=nosim/&#34; name=&#34;amazletlink&#34; target=&#34;_blank&#34;&gt;Amazon.co.jpで詳細を見る&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;amazlet-footer&#34; style=&#34;clear: left&#34;&gt;&lt;/div&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>How to remove square brackets from Alamofire array values</title>
      <link>http://matsue.github.io/post/how-to-remove-square-brackets-with-alamofire/</link>
      <pubDate>Sat, 02 Jul 2016 17:59:16 +0900</pubDate>
      
      <guid>http://matsue.github.io/post/how-to-remove-square-brackets-with-alamofire/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://github.com/Alamofire/Alamofire&#34;&gt;Alamofire&lt;/a&gt; will add square brackets for the key of array values. This article will show you how to remove those brackets.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;p&gt;By default, array values will be encoded to parameters like this.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;foo[]=bar1&amp;amp;foo[]=bar2&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;This time we will make no square brackets parameters with ParameterEncoding.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;foo=bar1&amp;amp;foo=bar2&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&#34;examples-with-parameterencoding&#34;&gt;Examples with ParameterEncoding&lt;/h2&gt;

&lt;p&gt;Alamofire allow to change encoding formats with ParameterEncoding.&lt;/p&gt;

&lt;h3 id=&#34;swift3&#34;&gt;Swift3&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;// Remove square brackets for GET request
struct CustomGetEncoding: ParameterEncoding {
    func encode(_ urlRequest: URLRequestConvertible, with parameters: Parameters?) throws -&amp;gt; URLRequest {
        var request = try URLEncoding().encode(urlRequest, with: parameters)
        request.url = URL(string: request.url!.absoluteString.replacingOccurrences(of: &amp;quot;%5B%5D=&amp;quot;, with: &amp;quot;=&amp;quot;))
        return request
    }
}

...

Alamofire.request(&amp;quot;http://example.com&amp;quot;, method: .get, parameters: [&amp;quot;foo&amp;quot;: [&amp;quot;bar1&amp;quot;, &amp;quot;bar2&amp;quot;]], encoding: CustomGetEncoding())
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;// Remove square brackets for POST request
struct CustomPostEncoding: ParameterEncoding {
    func encode(_ urlRequest: URLRequestConvertible, with parameters: Parameters?) throws -&amp;gt; URLRequest {
        var request = try URLEncoding().encode(urlRequest, with: parameters)
        let httpBody = NSString(data: request.httpBody!, encoding: String.Encoding.utf8.rawValue)!
        request.httpBody = httpBody.replacingOccurrences(of: &amp;quot;%5B%5D=&amp;quot;, with: &amp;quot;=&amp;quot;).data(using: .utf8)
        return request
    }
}

...

Alamofire.request(&amp;quot;http://example.com&amp;quot;, method: .post, parameters: [&amp;quot;foo&amp;quot;: [&amp;quot;bar1&amp;quot;, &amp;quot;bar2&amp;quot;]], encoding: CustomPostEncoding())
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;swift2&#34;&gt;Swift2&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;// Remove square brackets for GET request
let parameterEncoding = ParameterEncoding.Custom { requestConvertible, parameters in
    let (mutableRequest, error) = ParameterEncoding.URL.encode(requestConvertible, parameters: parameters)
    mutableRequest.URL = NSURL(string: mutableRequest.URLString.stringByReplacingOccurrencesOfString(&amp;quot;%5B%5D=&amp;quot;, withString: &amp;quot;=&amp;quot;))
    return (mutableRequest, error)
}

Alamofire.request(.GET, &amp;quot;http://example.com&amp;quot;, parameters: [&amp;quot;foo&amp;quot;: [&amp;quot;bar1&amp;quot;, &amp;quot;bar2&amp;quot;]], encoding: parameterEncoding)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;// Remove square brackets for POST request
let parameterEncoding = ParameterEncoding.Custom { requestConvertible, parameters in
    let (mutableRequest, error) = ParameterEncoding.URL.encode(requestConvertible, parameters: parameters)
    let httpBody = NSString(data: mutableRequest.HTTPBody!, encoding: NSUTF8StringEncoding)!
    mutableRequest.HTTPBody = httpBody.stringByReplacingOccurrencesOfString(&amp;quot;%5B%5D=&amp;quot;, withString: &amp;quot;=&amp;quot;).dataUsingEncoding(NSUTF8StringEncoding)
    return (mutableRequest, error)
}

Alamofire.request(.POST, &amp;quot;http://example.com&amp;quot;, parameters: [&amp;quot;foo&amp;quot;: [&amp;quot;bar1&amp;quot;, &amp;quot;bar2&amp;quot;]], encoding: parameterEncoding)
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;why-collection-types-have-multiple-implementation-ways&#34;&gt;Why collection types have multiple implementation ways&lt;/h2&gt;

&lt;p&gt;Current RFC does not define clear ways for how to encode collection types. Alamofire&amp;rsquo;s &lt;a href=&#34;https://github.com/Alamofire/Alamofire/blob/dae3ed1b22d33c28de0f50e1271fb4e0d54ad44a/README.md&#34;&gt;README&lt;/a&gt; mentioned it.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Since there is no published specification for how to encode collection types, Alamofire follows the convention of appending [] to the key for array values (foo[]=1&amp;amp;foo[]=2), and appending the key surrounded by square brackets for nested dictionary values (foo[bar]=baz).&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;references&#34;&gt;References&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/Alamofire/Alamofire/issues/965&#34;&gt;https://github.com/Alamofire/Alamofire/issues/965&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>どうすれば人生は美しいといえるのか 『なぜ、あなたの仕事は終わらないのか スピードは最強の武器である』</title>
      <link>http://matsue.github.io/post/rocket-start-working-style/</link>
      <pubDate>Sun, 19 Jun 2016 22:46:25 +0900</pubDate>
      
      <guid>http://matsue.github.io/post/rocket-start-working-style/</guid>
      <description>&lt;p&gt;アツい！&lt;/p&gt;

&lt;p&gt;紹介されている時間術自体はシンプルだが、6章のメッセージが胸に刺さる。
Windows95の開発やビル・ゲイツの話と共に書かれているので、エンジニアリングに関わる人は読むと特に共感が得られるはず。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;どうすれば集中できるのか&lt;/li&gt;
&lt;li&gt;どうすれば残業も辛くないのか&lt;/li&gt;
&lt;li&gt;どうすればやりたいことを実現できるのか&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;自分が幸せになれる行動をしないと、人は幸せにはなれない。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;時間術だけじゃない、そんなことに答えている本。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;一度しかない人生、思いっきり楽しもうぜ。&lt;/p&gt;

&lt;p&gt;やりたくもないことに延々時間をとられてるなんて、もったいないぜ。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&#34;rakuten-affiliate&#34;&gt;
&lt;table border=&#34;0&#34; cellpadding=&#34;0&#34; cellspacing=&#34;0&#34;&gt;&lt;tr&gt;&lt;td&gt;&lt;div style=&#34;border:1px solid #000000;background-color:#FFFFFF;width:310px;margin:auto;padding-top:6px;text-align:center;overflow:auto;&#34;&gt;&lt;a href=&#34;http://hb.afl.rakuten.co.jp/hgc/15045127.6cd0de8a.15045128.eadfa748/?pc=http%3A%2F%2Fitem.rakuten.co.jp%2Frakutenkobo-ebooks%2F7ac5676948203e20bc72011b45df5c38&amp;m=http%3A%2F%2Fm.rakuten.co.jp%2Frakutenkobo-ebooks%2Fi%2F15676440%2F&amp;scid=af_item_tbl&amp;link_type=picttext&amp;ut=eyJwYWdlIjoiaXRlbSIsInR5cGUiOiJwaWN0dGV4dCIsInNpemUiOiIzMDB4MzAwIiwibmFtIjoxLCJuYW1wIjoiZG93biIsImNvbSI6MSwiY29tcCI6ImRvd24iLCJwcmljZSI6MCwiYm9yIjoxLCJjb2wiOjAsInRhciI6MX0%3D&#34; target=&#34;_blank&#34; style=&#34;word-wrap:break-word;&#34;  &gt;&lt;img src=&#34;http://hbb.afl.rakuten.co.jp/hgb/15045127.6cd0de8a.15045128.eadfa748/?me_id=1278256&amp;item_id=15676440&amp;m=https%3A%2F%2Fthumbnail.image.rakuten.co.jp%2F%400_mall%2Frakutenkobo-ebooks%2Fcabinet%2F3179%2F2000004383179.jpg%3F_ex%3D80x80&amp;pc=https%3A%2F%2Fthumbnail.image.rakuten.co.jp%2F%400_mall%2Frakutenkobo-ebooks%2Fcabinet%2F3179%2F2000004383179.jpg%3F_ex%3D300x300&amp;s=300x300&amp;t=picttext&#34; border=&#34;0&#34; style=&#34;margin:2px&#34;&gt;&lt;/a&gt;&lt;p style=&#34;font-size:12px;line-height:1.4em;text-align:left;margin:0px;padding:2px 6px;word-wrap:break-word&#34;&gt;&lt;a href=&#34;http://hb.afl.rakuten.co.jp/hgc/15045127.6cd0de8a.15045128.eadfa748/?pc=http%3A%2F%2Fitem.rakuten.co.jp%2Frakutenkobo-ebooks%2F7ac5676948203e20bc72011b45df5c38&amp;m=http%3A%2F%2Fm.rakuten.co.jp%2Frakutenkobo-ebooks%2Fi%2F15676440%2F&amp;scid=af_item_tbl&amp;link_type=picttext&amp;ut=eyJwYWdlIjoiaXRlbSIsInR5cGUiOiJwaWN0dGV4dCIsInNpemUiOiIzMDB4MzAwIiwibmFtIjoxLCJuYW1wIjoiZG93biIsImNvbSI6MSwiY29tcCI6ImRvd24iLCJwcmljZSI6MCwiYm9yIjoxLCJjb2wiOjAsInRhciI6MX0%3D&#34; target=&#34;_blank&#34; style=&#34;word-wrap:break-word;&#34;  &gt;なぜ、あなたの仕事は終わらないのか スピードは最強の武器である【電子書籍】[ 中島聡 ]&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;&lt;br&gt;&lt;p style=&#34;font-size:12px;line-height:1.4em;margin:5px;word-wrap:break-word&#34;&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Rakuten Technology Conference 2015に参加しました</title>
      <link>http://matsue.github.io/post/2015-11-24-rakuten-technology-conference-2015/</link>
      <pubDate>Tue, 24 Nov 2015 20:07:45 +0900</pubDate>
      
      <guid>http://matsue.github.io/post/2015-11-24-rakuten-technology-conference-2015/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://rakutentechnologyconference2015.sched.org/&#34;&gt;Rakuten Technology Conference 2015&lt;/a&gt;に参加しました。二子玉川にある楽天の新社屋Crimson Houseでの開催でした。&lt;/p&gt;

&lt;p&gt;並行して複数のセッションが行われていたので見逃したセッションも多いですが、以下のタイムテーブルの各セッション詳細にYoutubeへのリンクがあるので安心です。
&lt;a href=&#34;http://rakutentechnologyconference2015.sched.org/grid/&#34;&gt;http://rakutentechnologyconference2015.sched.org/grid/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;全てのセッションが英語ですので、その点でも動画で再確認できるのは素敵です。&lt;/p&gt;

&lt;p&gt;以下は参加したセッションについてのまとめです。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;p&gt;##　Will AI surpass human intelligence? &amp;ndash; Beyond Deep Learning (Yutaka Matsuo)&lt;/p&gt;

&lt;div class=&#34;embed-video-container&#34;&gt;
  &lt;iframe src=&#34;http://www.youtube.com/embed/s7yey8hfQII&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;


&lt;p&gt;&lt;a href=&#34;http://rakutentechnologyconference2015.sched.org/event/4B4g/will-ai-surpass-human-intelligence-beyond-deep-hellip&#34;&gt;http://rakutentechnologyconference2015.sched.org/event/4B4g/will-ai-surpass-human-intelligence-beyond-deep-hellip&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;松尾先生による、これまでのAIの歴史とディープラーニングを用いた研究成果、そして今後の展望についてのお話。&lt;/p&gt;

&lt;p&gt;上記動画の28分あたりから紹介されている、ディープラーニングに関連する映像が衝撃的です。
画像解析とゲームスコアによる評価付けで、ブロック崩しやレースゲームをAIが効率良く解いている様子が紹介されています。
どの動画でも前半はやみくもにゲームをプレイしているAIも学習が進むと、ブロック崩しで端に穴をあけてまとめてブロックを崩したり、レースゲームで最適なコース取りをしていて、その急成長ぶりは気味の悪さも感じさせます。&lt;/p&gt;

&lt;p&gt;近年の画像解析のアルゴリズムコンペでも、同一人物の顔を見つける処理をした場合の誤認識率は5%を下回り、同一人物・別人物と誤認識していた画像は人間が見ても判別が難しいそうです。&lt;/p&gt;

&lt;p&gt;また近年の学習をしていくAIのことを&lt;strong&gt;&amp;ldquo;Child AI&amp;rdquo;&lt;/strong&gt;、過去のAIにあったような人間が直接に解法や知識を与えておくアプローチでつくるAIを&lt;strong&gt;&amp;ldquo;Adult AI&amp;rdquo;&lt;/strong&gt;と呼び分けていました。&lt;/p&gt;

&lt;h2 id=&#34;programmable-iot-platform-soracom-ken-tamagawa&#34;&gt;Programmable IoT Platform “SORACOM&amp;rdquo; (Ken Tamagawa)&lt;/h2&gt;

&lt;div class=&#34;embed-video-container&#34;&gt;
  &lt;iframe src=&#34;http://www.youtube.com/embed/XtdijMoKC1o&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;


&lt;p&gt;&lt;a href=&#34;http://rakutentechnologyconference2015.sched.org/event/4N57/programmable-iot-platform-soracom&#34;&gt;http://rakutentechnologyconference2015.sched.org/event/4N57/programmable-iot-platform-soracom&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;玉川さんによるSORACOMのお話。&lt;/p&gt;

&lt;p&gt;キャリアが提供するパケット通信、帯域制限といった機能を賄うデータセンターのサーバーは、すべて用意しようとすると700億円近くもするらしいです。。&lt;/p&gt;

&lt;p&gt;そこでMVNO。SORACOMはIoT向けのMVNOでAWSのようなWebコンソールから管理下のSIMの帯域制限などができます。&lt;/p&gt;

&lt;p&gt;使っている例として大手企業や、以下の様なデバイスが紹介されていました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://akerun.com/&#34;&gt;Akerun&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://kibi-dango.jp/info.php?type=items&amp;amp;id=I0000137&#34;&gt;LiveConnect&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;soracom-beam&#34;&gt;SORACOM Beam&lt;/h3&gt;

&lt;p&gt;SIMカードから送られたパケットをキャリアネットワークから先で自動で暗号化してくれるサービス。例えば&lt;strong&gt;HTTP通信はHTTPS通信に&lt;/strong&gt;してくれます。デバイス側ではSSL通信の処理をしなくてよいので、&lt;strong&gt;バッテリーの使用量削減&lt;/strong&gt;も期待できます。
&lt;a href=&#34;http://whill.us/&#34;&gt;WHILL&lt;/a&gt;でも使われてるらしいです。&lt;/p&gt;

&lt;h3 id=&#34;今後の展開&#34;&gt;今後の展開&lt;/h3&gt;

&lt;p&gt;最近ではカスタムDNS等の機能をリリースしており、今後も既存のプラットフォームをAWS上で各国にリリースすることでグローバルに展開していくとのことです。&lt;/p&gt;

&lt;h3 id=&#34;q-a&#34;&gt;Q&amp;amp;A&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;物理サーバは使ってないのか？それはボトルネックにならないのか？

&lt;ul&gt;
&lt;li&gt;ドコモのデータセンターにあるが、拡張可能なためボトルネックにはならない。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;なぜSORACOMをやろうと決心したのか？

&lt;ul&gt;
&lt;li&gt;AWSにいたころ、時差ボケで眠れない夜にSORACOMのプレスリリースを書いて、翌日の朝にそのプレスリリースを読んでこれはいけると思ったのがきっかけ&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;SORACOM Beamはどのくらい電力使用量を減らすのか？

&lt;ul&gt;
&lt;li&gt;具体的なデータは持ってないが、HTTPSの処理は多大なリソースを使っていた部分をHTTPで処理できる分、削減できると考える。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Software SIMについてどう考えるか？

&lt;ul&gt;
&lt;li&gt;いまのSORACOMはSIMカードが必要。リモートでプロファイルが書き換えられるSoftware SIMはSORACOMとも相性が良いので、調査中。実際にEU諸国での例もあるので展開が楽しみ。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;rakuten-and-microsoft-talk-devops-in-real-world-kotaro-ogino-drew-robbins-tsuyoshi-ushio&#34;&gt;Rakuten and Microsoft talk DevOps in Real world (Kotaro Ogino / Drew Robbins / Tsuyoshi Ushio)&lt;/h2&gt;

&lt;div class=&#34;embed-video-container&#34;&gt;
  &lt;iframe src=&#34;http://www.youtube.com/embed/mZ8tgEtubGE&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;


&lt;p&gt;&lt;a href=&#34;http://rakutentechnologyconference2015.sched.org/event/3iON/rakuten-and-microsoft-talk-devops-in-real-world&#34;&gt;http://rakutentechnologyconference2015.sched.org/event/3iON/rakuten-and-microsoft-talk-devops-in-real-world&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;動画冒頭の&amp;rdquo;DevOps!!!&amp;ldquo;コールは音量に注意してください笑&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The Phoenix Project&lt;/strong&gt;がアメリカではDevOpsのバイブル本とのことです。&lt;/p&gt;

&lt;table border=&#34;0&#34; cellpadding=&#34;0&#34; cellspacing=&#34;0&#34;&gt;&lt;tr&gt;&lt;td valign=&#34;top&#34;&gt;&lt;div style=&#34;border:1px solid;margin:0px;padding:6px 0px;width:160px;text-align:center;float:left&#34;&gt;&lt;a href=&#34;http://hb.afl.rakuten.co.jp/hgc/0ecae152.d6af1699.0ecae153.1dd72672/?pc=http%3a%2f%2fbooks.rakuten.co.jp%2frb%2f12928326%2f%3fscid%3daf_link_tbl&amp;amp;m=http%3a%2f%2fm.rakuten.co.jp%2fbook%2fi%2f17111893%2f&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;http://hbb.afl.rakuten.co.jp/hgb/?pc=http%3a%2f%2fthumbnail.image.rakuten.co.jp%2f%400_mall%2fbook%2fcabinet%2f2508%2f9780988262508.jpg%3f_ex%3d128x128&amp;amp;m=http%3a%2f%2fthumbnail.image.rakuten.co.jp%2f%400_mall%2fbook%2fcabinet%2f2508%2f9780988262508.jpg%3f_ex%3d80x80&#34; alt=&#34;The Phoenix Project: A Novel about IT, DevOps, and Helping Your Business Win&#34; border=&#34;0&#34; style=&#34;margin:0px;padding:0px&#34;&gt;&lt;/a&gt;&lt;p style=&#34;font-size:12px;line-height:1.4em;text-align:left;margin:0px;padding:2px 6px&#34;&gt;&lt;a href=&#34;http://hb.afl.rakuten.co.jp/hgc/0ecae152.d6af1699.0ecae153.1dd72672/?pc=http%3a%2f%2fbooks.rakuten.co.jp%2frb%2f12928326%2f%3fscid%3daf_link_tbl&amp;amp;m=http%3a%2f%2fm.rakuten.co.jp%2fbook%2fi%2f17111893%2f&#34; target=&#34;_blank&#34;&gt;The Phoenix Project: A Novel about IT, DevOps, and Helping Your Business Win&lt;/a&gt;&lt;br&gt;&lt;span style=&#34;&#34;&gt;著者：Gene Kim&lt;/span&gt;&lt;br&gt;&lt;span style=&#34;&#34;&gt;価格：3,421円（税込、送料込）&lt;/span&gt;&lt;/p&gt;&lt;/div&gt;&lt;/td&gt;
&lt;td valign=&#34;top&#34;&gt;&lt;div style=&#34;border:1px solid;margin:0px;padding:6px 0px;width:160px;text-align:center;float:left&#34;&gt;&lt;a href=&#34;http://hb.afl.rakuten.co.jp/hgc/0ecae152.d6af1699.0ecae153.1dd72672/?pc=http%3a%2f%2fbooks.rakuten.co.jp%2frb%2f12883862%2f%3fscid%3daf_link_tbl&amp;amp;m=http%3a%2f%2fm.rakuten.co.jp%2fbook%2fi%2f17062168%2f&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;http://hbb.afl.rakuten.co.jp/hgb/?pc=http%3a%2f%2fthumbnail.image.rakuten.co.jp%2f%400_mall%2fbook%2fcabinet%2f5357%2f9784822285357.jpg%3f_ex%3d128x128&amp;amp;m=http%3a%2f%2fthumbnail.image.rakuten.co.jp%2f%400_mall%2fbook%2fcabinet%2f5357%2f9784822285357.jpg%3f_ex%3d80x80&#34; alt=&#34;The　DevOps逆転だ！&#34; border=&#34;0&#34; style=&#34;margin:0px;padding:0px&#34;&gt;&lt;/a&gt;&lt;p style=&#34;font-size:12px;line-height:1.4em;text-align:left;margin:0px;padding:2px 6px&#34;&gt;&lt;a href=&#34;http://hb.afl.rakuten.co.jp/hgc/0ecae152.d6af1699.0ecae153.1dd72672/?pc=http%3a%2f%2fbooks.rakuten.co.jp%2frb%2f12883862%2f%3fscid%3daf_link_tbl&amp;amp;m=http%3a%2f%2fm.rakuten.co.jp%2fbook%2fi%2f17062168%2f&#34; target=&#34;_blank&#34;&gt;The　DevOps逆転だ！&lt;/a&gt;&lt;br&gt;&lt;span style=&#34;&#34;&gt;著者：ジーン・キム&lt;/span&gt;&lt;br&gt;&lt;span style=&#34;&#34;&gt;価格：2,376円（税込、送料込）&lt;/span&gt;&lt;/p&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;h3 id=&#34;devops-journey-micorsoft&#34;&gt;DevOps Journey (Micorsoft)&lt;/h3&gt;

&lt;p&gt;Visual Studioは1997年にリリースされ、当時は2、3年おきにリリースするというサイクルでした。
そして最初のリリース後はバグ修正だけに終始してユーザのフィードバックに応えることはありませんでした。&lt;/p&gt;

&lt;p&gt;2008年移行にその体制は変わって、2013年にはVisual Studio Onlineという形でリリースがされました。&lt;/p&gt;

&lt;p&gt;DevとOpsとPMに分かれていたチームは&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Dev &amp;amp; Opsで&lt;strong&gt;Development Team&lt;/strong&gt;になり、&lt;/li&gt;
&lt;li&gt;Dev &amp;amp; Ops &amp;amp; PMで&lt;strong&gt;Feature Team&lt;/strong&gt;になり、&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;顧客とコラボレーションして動くようになりました。
その結果、いまでは1週間で80デプロイを行い、それでもインシデント数は1ヶ月で10個だけになったそうです。&lt;/p&gt;

&lt;p&gt;さらに凄いのは、この変化は会社のサポートが最初からあって起きたわけではなく、以下のフェーズを経て少数の熱意から変化したそうです。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Change agent(s)&lt;/strong&gt; : DevOpsを始める少数の人、ユニコーンによるDevOps開始&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Grassroots&lt;/strong&gt; : 著名人などを招いた会社内でのイベントの実施&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Tops down&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Scale&lt;/strong&gt; : Dojoシステム&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;今では&lt;strong&gt;Dojoシステム&lt;/strong&gt;というものがあり、週一程度で定期開催される会でCI等についていつでも学ぶことができます。
それでもまだDevOps Journeyの途上だということです。&lt;/p&gt;

&lt;p&gt;他社のDevOps Journeyとしては以下のストーリーが紹介されました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Rakuten: &lt;strong&gt;Microservices&lt;/strong&gt;により、大きな企業の中であっても、各チームはスタートアップのように振る舞う&lt;/li&gt;
&lt;li&gt;Yahoo! Japan: DevとOpsの壁をなくすために、&lt;strong&gt;Devチームのユニコーン(リーダー格)の人をOpsに入れる&lt;/strong&gt;ことで、Opsに自動化の文化を生み出す&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;test-automation-for-devops-rakuten&#34;&gt;Test Automation for DevOps (Rakuten)&lt;/h3&gt;

&lt;p&gt;発表者の荻野さんは楽天のIDやポイント、決済を管理するGroup Core Serviceという部署で働いていており、多くのビジネス要求がある中でどのようにDevOpsを回しているかの紹介がありました。&lt;/p&gt;

&lt;p&gt;スケール可能なパフォーマンステストを行うため、楽天内のOpenStack環境を使い、数クリックでGatlingによるテストを実行できるとのことです。そして全てのCI結果はKibanaにより集計されていました。かっこいい。&lt;/p&gt;

&lt;h3 id=&#34;ci-strategies-microsoft&#34;&gt;CI Strategies (Microsoft)&lt;/h3&gt;

&lt;p&gt;Microsoftでは以下のような戦略・手法をとっています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;クラウドとオンプレミスのコードベースを共有する&lt;/li&gt;
&lt;li&gt;いつでもデプロイ可能にする&lt;/li&gt;
&lt;li&gt;Canary testing (カナリアテスト) : 一部のサーバクラスタにだけ新機能をリリースし、問題がなければ他のクラスタにもスケールしていく&lt;/li&gt;
&lt;li&gt;Feature flags : ランタイムで機能のON/OFF&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;continuous-delivery-strategy-map&#34;&gt;Continuous Delivery Strategy Map&lt;/h3&gt;

&lt;p&gt;牛尾さんがDevOpsインタビューをする中で気づいた戦略マップにはSpeed、Qualityの2つの軸があります。&lt;/p&gt;

&lt;p&gt;Cookpadが行っているような、いつでもロールバックできるようにする戦略はSpeed重視、荻野さんの例やカナリアテストを使う戦略はQuality重視になります。&lt;/p&gt;

&lt;h2 id=&#34;building-smart-applications-with-an-algorithm-marketplace-diego-oppenheimer-algorithmia-dex-dex-tra-dextra-daryl-arnold-diego-oppenheimer&#34;&gt;Building Smart Applications with an Algorithm Marketplace : Diego Oppenheimer, Algorithmia &amp;amp; DEX &amp;amp; DEX(TRA) : Dextra (Daryl Arnold / Diego Oppenheimer)&lt;/h2&gt;

&lt;div class=&#34;embed-video-container&#34;&gt;
  &lt;iframe src=&#34;http://www.youtube.com/embed/T0Pob0hyRps&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;


&lt;p&gt;&lt;a href=&#34;http://rakutentechnologyconference2015.sched.org/event/4B5P/building-smart-applications-with-an-algorithm-markehellip&#34;&gt;http://rakutentechnologyconference2015.sched.org/event/4B5P/building-smart-applications-with-an-algorithm-markehellip&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;algorithmia&#34;&gt;Algorithmia&lt;/h3&gt;

&lt;p&gt;Algorithmiaは人々がアルゴリズムを発見・利用できる状態にすることを目的とする会社で、様々なアルゴリズムをサイト上で試用・購入することができます。&lt;/p&gt;

&lt;p&gt;アルゴリズムエコノミーが必要な背景としては以下の事例を挙げていました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;2009年には8ゼタバイト(テラ-&amp;gt;ペタ-&amp;gt;エクサ-&amp;gt;ゼタ)のデータが生み出され、2020年には35ゼタバイトに上る&lt;/li&gt;
&lt;li&gt;1時間あたり、100万台の新しいデバイスがオンラインになっている&lt;/li&gt;
&lt;li&gt;1分あたり、20時間分の動画がアップロードされている&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;実際のアルゴリズムの例は、以下が挙げられていました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Nudity detection: &lt;a href=&#34;https://isitnude.com/&#34;&gt;isitnude&lt;/a&gt; / &lt;a href=&#34;http://blog.algorithmia.com/post/121967357859/isitnude&#34;&gt;ブログ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Face recognition: &lt;a href=&#34;http://fr-demo.aerobaticapp.com/&#34;&gt;Name That Actor&lt;/a&gt; / &lt;a href=&#34;http://blog.algorithmia.com/post/130768558569/whos-who-facial-recognition-made-simple&#34;&gt;ブログ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Web page recommender: &lt;a href=&#34;https://algorithmia.com/recommends&#34;&gt;https://algorithmia.com/recommends&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;keyword tags for a URL: &lt;a href=&#34;https://algorithmia.com/algorithms/tags/AutoTagURL&#34;&gt;https://algorithmia.com/algorithms/tags/AutoTagURL&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;他の事例については以下のリンク先を見て、いくつか試してみるとわかりやすいです。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://algorithmia.com/use-cases&#34;&gt;https://algorithmia.com/use-cases&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;devops-with-lego-and-chocolate-simulation-game-dana-pylayeva&#34;&gt;DevOps with Lego and Chocolate simulation game (Dana Pylayeva)&lt;/h2&gt;

&lt;div class=&#34;embed-video-container&#34;&gt;
  &lt;iframe src=&#34;http://www.youtube.com/embed/Lup62Wf783Y&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;


&lt;p&gt;&lt;a href=&#34;http://rakutentechnologyconference2015.sched.org/event/4B4r/devops-with-lego-and-chocolate-simulation-game&#34;&gt;http://rakutentechnologyconference2015.sched.org/event/4B4r/devops-with-lego-and-chocolate-simulation-game&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;DevOpsについて、ワークショップ形式で実際に他の方々とゲームで学べるセッションです。
文章では伝わりづらいかと思いますが、概ね以下のようなルールのゲームが行われました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;ビジネス、Dev、Opsを持つ3つのチームにわかれ、さらにチーム内でそれぞれに、アドミンやテスターといった役割が割り振られる&lt;/li&gt;
&lt;li&gt;ビジネスの要求を基に、レゴで組み立てられたプロダクトを各チームはたくさん生産することを目的に取り組む&lt;/li&gt;
&lt;li&gt;生産する時間な数スプリント用意されていて、各スプリント間には振り返りの時間と、ルール変更がある&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;上記のルール変更が大きなポイントで、例えばゲーム開始当初は&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Devのみがレゴを組み立てて良い&lt;/li&gt;
&lt;li&gt;Opsだけが使用できるレゴの種類を知っていて納品できる&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;という風に完全に役割が分かれています。&lt;/p&gt;

&lt;p&gt;スプリントが進むとルールが変化し、&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Devも使用できるレゴを知って良いし、納品しても良い&lt;/li&gt;
&lt;li&gt;Opsもレゴを組み立てて良い&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;となります。&lt;/p&gt;

&lt;p&gt;そうするとDevもOpsも待っているだけの時間がなくなり、スプリントを進めるごとに納品できるプロダクトが増えていきます。&lt;/p&gt;


&lt;figure &gt;
    
        &lt;img src=&#34;https://lh3.googleusercontent.com/-B-9FHwzzITE/VmA3C9cA6XI/AAAAAAAAfzU/J5vvP4t3gWo/w530-h707-p-rw/_3748.JPG&#34;  /&gt;
    
    
&lt;/figure&gt;



&lt;p&gt;このワークショップでは、以下の様な実際の現場にありそうなイベント・体験が用意されていたのが印象的でした。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Devが作ったものが完成してから、Opsの段階で&lt;strong&gt;セキュリティの要件でプロダクトが差し戻される&lt;/strong&gt;イベントがある&lt;/li&gt;
&lt;li&gt;セキュリティ要件を修正したあと、&lt;strong&gt;ビジネス判断で完成品のデプロイが延期になる&lt;/strong&gt;イベントがある&lt;/li&gt;
&lt;li&gt;スプリントが進んでDevがOpsを兼ねるようになると、Ops陣もDevに入らないと&lt;strong&gt;やることがなくなる&lt;/strong&gt;(逆も然り)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;また、突然その場であった人たちとお互いの会社も国籍も分からないまま、ルールも手探りで、英語と日本語であれこれ言いながらやれた体験が特に面白く感じました。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://matsue.github.io/blog/2015/03/05/scrumgatheringtokyo-2015/&#34;&gt;Regional Scrum Gathering Tokyo 2015&lt;/a&gt;でもそうでしたが、こういったワークショップは気づきが多く、個人的には満足感が高いです。&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;以上です。さいごに、講演者・スタッフの皆様、素敵なカンファレンスをありがとうございました！&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Regional Scrum Gathering Tokyo 2015に参加した</title>
      <link>http://matsue.github.io/post/2015-03-01-scrumgatheringtokyo-2015/</link>
      <pubDate>Thu, 05 Mar 2015 20:43:28 +0900</pubDate>
      
      <guid>http://matsue.github.io/post/2015-03-01-scrumgatheringtokyo-2015/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://2015.scrumgatheringtokyo.org/&#34;&gt;Regional Scrum Gathering Tokyo 2015&lt;/a&gt;に参加した。&lt;br /&gt;
3日分の発表内容メモと感想のまとめ。長い。&lt;/p&gt;

&lt;p&gt;3日間のイベントで、初日は主にスクラム実践者の方々のセッション、2日目はオープンスペーステクノロジーというディスカッション形式、
3日目はコーチや本の執筆をされている方々からのキーノートという構成。3日目のみ有料だった。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.facebook.com/ScrumGatheringTokyo&#34;&gt;https://www.facebook.com/ScrumGatheringTokyo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://twitter.com/search?q=%23rsgt2015&#34;&gt;https://twitter.com/search?q=%23rsgt2015&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;/p&gt;

&lt;h2 id=&#34;day1&#34;&gt;Day1&lt;/h2&gt;

&lt;p&gt;初日は以下の4つのセッションに参加した。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;James O. Coplienさんの&lt;a href=&#34;http://2015.scrumgatheringtokyo.org/event/5907692ca1c112723617f2438a0501cb#.VPLm-1PadrN&#34;&gt;Scrum Patterns: The New Defacto Scrum Standard&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;藤村 新さんの&lt;a href=&#34;http://2015.scrumgatheringtokyo.org/event/b23e2d897cdf780a82622dd55b865e11#.VPLl41PadrM&#34;&gt;開発モデルの作り方 ～守破離の破！～&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Mitsuyuki　Shiibaさんの&lt;a href=&#34;http://2015.scrumgatheringtokyo.org/event/6bc960ff87b12ca853fea5497627b3ea#.VPLl4FPadrM&#34;&gt;スクラムマスターは要らない&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;林 栄一さんとMasanari Motohasiさんの&lt;a href=&#34;http://2015.scrumgatheringtokyo.org/event/e8ab120c5e4a83383b7da588da120a83#.VPLl71PadrM&#34;&gt;アジャイルコミュニケーションプラログラム ~チームワークに関する心理学的アプローチ~&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;scrum-patterns-the-new-defacto-scrum-standard&#34;&gt;Scrum Patterns: The New Defacto Scrum Standard&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;https://picasaweb.google.com/lh/photo/34HCmZmvOTJlDDlJU2EebNMTjNZETYmyPJy0liipFm0?feat=embedwebsite&#34;&gt;&lt;img src=&#34;https://lh4.googleusercontent.com/-RNmV-m2WKJs/VPfPzR7rtsI/AAAAAAAASj8/_y55odF2IN8/s800/_20150228_103457.jpg&#34; height=&#34;600&#34; width=&#34;800&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Copeさんによるスクラムとは何かを再確認するような発表。
英語だったので意味を取り違えてる部分もあると思うが、以下のようなことを言っていた。&lt;/p&gt;

&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;スクラムはただのルールブック。&lt;/li&gt;
&lt;li&gt;チェスプレーヤーに例えれば、ルールを知っているだけでは良いプレーヤーとは言えない。&lt;/li&gt;
&lt;li&gt;スクラムにおいてマネージャーという存在はいらない。無駄。スクラムでは自己管理する。タスクマネージャーというのもいらない。&lt;/li&gt;
&lt;li&gt;Kanbanを使ってるチームは病気。&lt;/li&gt;
&lt;li&gt;チームのゴールは価値を創ること。スクラムやルール自体はゴールじゃない。&lt;/li&gt;
&lt;li&gt;スクラムによって、どのようにして学ぶかを学ぶ。&lt;/li&gt;
&lt;li&gt;毎朝のスタンドアップミーティングは何のためにあるのか？SBIを管理するショートプランニングミーティングみたいなもの。&lt;/li&gt;
&lt;li&gt;もしもスプリントが終わった時にベロシティの見積もり通りになる確率が50%以上なら誰かが嘘をついてる。&lt;/li&gt;
&lt;li&gt;息子は14歳でCSMになれたんだから皆も出来る。&lt;/li&gt;
&lt;li&gt;ベロシティは6ヶ月で倍になる。なってないなら、あなたは理解してない。&lt;/li&gt;
&lt;li&gt;信頼が大事。マネージャーやテスターを信頼してますか？&lt;/li&gt;
&lt;li&gt;アジャイルマニフェストにあるように顧客との協調が必要。&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt;なぜKanbanを使うのは良くないのか聞いたところ、
例えば1つの製品をデリバリーするために、&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;パーツAをつくるチーム: 生産性98&lt;/li&gt;
&lt;li&gt;パーツBをつくるチーム: 生産性96&lt;/li&gt;
&lt;li&gt;テストするチーム: 生産性100&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;がいたとすると工程2のところで在庫が出る、という説明だった。
なのでHenrik Knibergさんの本に出てくるステータスが細かく管理され、WIPが制限されているようなカンバンを指しているわけではない。
役割が分断されているようなチームは無駄がでて良くないよね、という意見だと解釈した。&lt;/p&gt;

&lt;p&gt;また、見積もったタスクが全てDONEできる確率は体感として50%以下な感じがするんだけど、と言ってみたところ、&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;スプリントへの割り込みタスクを止める人がいない&lt;/li&gt;
&lt;li&gt;違うチームへの依頼で待ち時間がある&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;といったことが原因でしょという話になった。
これは確かにそうなんだけれども、他のチームと働くことが多いというチームの性質や、
会社の枠組みでロールの分断された組織があるという状況もあるのでなかなか難しい印象。
ただ、これらについては他の方とも話しているうちに試してみたいアイデアを得た。&lt;/p&gt;

&lt;p&gt;Copeさん節はいつも通りかなりの破壊力があったし、理想の組織での話のように感じる部分はあるが、原点となるマインドと強いパッションには共感を覚える。
スクラムというと色んな要素はあるものの、価値を生み出すのがゴール。&lt;/p&gt;

&lt;h3 id=&#34;開発モデルの作り方-守破離の破&#34;&gt;開発モデルの作り方 ～守破離の破！～&lt;/h3&gt;

&lt;p&gt;&lt;iframe src=&#34;//www.slideshare.net/slideshow/embed_code/45257394&#34; width=&#34;425&#34; height=&#34;355&#34; frameborder=&#34;0&#34; marginwidth=&#34;0&#34; marginheight=&#34;0&#34; scrolling=&#34;no&#34; style=&#34;border:1px solid #CCC; border-width:1px; margin-bottom:5px; max-width: 100%;&#34; allowfullscreen&gt; &lt;/iframe&gt; &lt;div style=&#34;margin-bottom:5px&#34;&gt; &lt;strong&gt; &lt;a href=&#34;//www.slideshare.net/aratafuji/ss-45257394&#34; title=&#34;開発モデルの作り方(守破離の破)&#34; target=&#34;_blank&#34;&gt;開発モデルの作り方(守破離の破)&lt;/a&gt; &lt;/strong&gt; from &lt;strong&gt;&lt;a href=&#34;//www.slideshare.net/aratafuji&#34; target=&#34;_blank&#34;&gt;Arata Fujimura&lt;/a&gt;&lt;/strong&gt; &lt;/div&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;とりあえずやってみることでプラクティス厨じゃだめだと気付いた。&lt;/li&gt;
&lt;li&gt;ざっくり開発者が言ってきた日数に係数かけて見積もる。エンジニア「２日です」オーナー「わかりました(４日か)」。&lt;/li&gt;
&lt;li&gt;自己流から破はできない。型があるから型やぶり、型がない人が型を破ったら形無し。&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt;リーン開発の現場を参考にされていることも、その他の部分でもすごく共感できることの多かったセッション。&lt;/p&gt;

&lt;p&gt;現状、良かれと思って基本や事例から変化させて取り込んでる手法についてはプラクティス厨になっている気もする。
色んな方々の知識によってスクラムの基本形ができていて、それから学べる要素も多いと思うので基本形をもう一度見直したくなった。&lt;/p&gt;

&lt;h3 id=&#34;スクラムマスターは要らない&#34;&gt;スクラムマスターは要らない&lt;/h3&gt;

&lt;p&gt;&lt;iframe src=&#34;//www.slideshare.net/slideshow/embed_code/45257107&#34; width=&#34;425&#34; height=&#34;355&#34; frameborder=&#34;0&#34; marginwidth=&#34;0&#34; marginheight=&#34;0&#34; scrolling=&#34;no&#34; style=&#34;border:1px solid #CCC; border-width:1px; margin-bottom:5px; max-width: 100%;&#34; allowfullscreen&gt; &lt;/iframe&gt; &lt;div style=&#34;margin-bottom:5px&#34;&gt; &lt;strong&gt; &lt;a href=&#34;//www.slideshare.net/bufferings/ss-45257107&#34; title=&#34;スクラムマスターは要らない&#34; target=&#34;_blank&#34;&gt;スクラムマスターは要らない&lt;/a&gt; &lt;/strong&gt; from &lt;strong&gt;&lt;a href=&#34;//www.slideshare.net/bufferings&#34; target=&#34;_blank&#34;&gt;Mitsuyuki Shiiba&lt;/a&gt;&lt;/strong&gt; &lt;/div&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;全員POであってほしい。&lt;/li&gt;
&lt;li&gt;以前は計画もスピードも重視で根性で乗り切ってた。
- 今は大阪の組織は全てスクラム。&lt;/li&gt;
&lt;li&gt;当時、ベンチャーからの成長で組織はカオスだった。&lt;/li&gt;
&lt;li&gt;「エンジニアとして働きたいチーム」をつくろうとした。&lt;/li&gt;
&lt;li&gt;摩擦とヒエラルキーに悩んだ。&lt;/li&gt;
&lt;li&gt;摩擦を生む境目が何か考えた。それは責任範囲だと考えた。「ここからはあなたの仕事、責任」&lt;/li&gt;
&lt;li&gt;もう一つはエンジニアに期待してない。スキル低いエンジニアでも回せるようにしよう。&lt;/li&gt;
&lt;li&gt;なんでこういう組織になったか考えた。失敗を乗り越えるためだと考えた。失敗しないように。「この範囲なら失敗しないよね」&lt;/li&gt;
&lt;li&gt;子供に転んでほしくないと考えた。そのためには転ばせる必要がある。&lt;/li&gt;
&lt;li&gt;エンジニアへの期待値をあげて、責任範囲を細かくしない。&lt;/li&gt;
&lt;li&gt;タイムボックス、スコープ、レトロスペクティブで失敗を小さく、失敗できるように。&lt;/li&gt;
&lt;li&gt;スキル高い人だけがチーム入ってほしいのではなく、成長できるようにしたかった。&lt;/li&gt;
&lt;li&gt;いますぐ終わらせる、できるひとにとりあえずやってもらうではなく、コスト払っても３ヶ月後に早く開発できるようにしたかった。&lt;/li&gt;
&lt;li&gt;立ち上げメンバーのようにユーザにとってうれしいことを考え、プロダクトオーナーシップを持ってほしい。&lt;/li&gt;
&lt;li&gt;そもそもみんな持ってるはず。&lt;/li&gt;
&lt;li&gt;「ここまででいいよ」と壁つくってた。&lt;/li&gt;
&lt;li&gt;「あなたが一番いいと思うものつくって」というようにした、始めはおそるおそるだったが、徐々にみんな言える環境になった。&lt;/li&gt;
&lt;li&gt;次はみんなが働きたいと思う組織を目指した。&lt;/li&gt;
&lt;li&gt;チームを超える横串の場をつくった。&lt;/li&gt;
&lt;li&gt;マネージャとかもフラット、ただのロールという認識を広めた。。&lt;/li&gt;
&lt;li&gt;組織５０人でもやもやしてることを出した、レトロスペクティブ。

&lt;ul&gt;
&lt;li&gt;ex.全チームにホワイトボード、プロジェクタ導入、カフェテリアの匂いをなくす&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;希望者全員CSMの研修にいってもらった。&lt;/li&gt;
&lt;li&gt;いけない人向けには大阪に人を呼んだりした。&lt;/li&gt;
&lt;li&gt;とりのぞける障害はとった、だから「みんなで大阪の開発部を良くしていこう」&lt;/li&gt;
&lt;li&gt;組織というプロダクトを変えた。&lt;/li&gt;
&lt;li&gt;ただやる人はいらない。プロダクトオーナーシップをもったスクラムマスター、エンジニアになってほしい。&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt;本編以外のQAへの回答からの抜粋は以下。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;方向性の違いは否定するのではなく、話し合ってもともとの原因を探る。&lt;/li&gt;
&lt;li&gt;取り組みの結果、もともとPO、SM、PMとか全部やってたのをメンバー任せられた。&lt;/li&gt;
&lt;li&gt;消極的な人にも参加をよびかける。ほっておかない。定期的な面談とかやるんじゃなく、気付いたらすぐ伝える。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;うーん、羨ましい。
質問への回答にも少しあるが、コミュニケーション的な部分でぶつかった壁や解決したことが多々あったんじゃないかと思う。
今の状況ではKPTやるとどんなものが上がっているのか気になる。&lt;/p&gt;

&lt;h3 id=&#34;アジャイルコミュニケーションプラログラム-チームワークに関する心理学的アプローチ&#34;&gt;アジャイルコミュニケーションプラログラム ~チームワークに関する心理学的アプローチ~&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;https://picasaweb.google.com/lh/photo/FIwv2PGb2QfTk2b6gT-4xdMTjNZETYmyPJy0liipFm0?feat=embedwebsite&#34;&gt;&lt;img src=&#34;https://lh4.googleusercontent.com/-PoT7anCuYzI/VPfPzW6bDPI/AAAAAAAASj4/-V2AiFZQ66Q/s800/_20150228_165337.jpg&#34; height=&#34;600&#34; width=&#34;800&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;「言っても仕方ない」「どうせダメだ」みたいな心境になった人、させる人について対応や原因を考えるセッション。&lt;/p&gt;

&lt;p&gt;例えば、「報告しろ」+「自分で考えろ」という矛盾した指示(ダブルバインド)を出されたりすると、そのような心境をつくる一因になると考えられる。
ペアや4人組でのワークでは、身の回りで起きているコミュニケーション不全の状況を考え、励ましの言葉を考え、それを人から言われてみる、というようなことをした。&lt;/p&gt;

&lt;p&gt;こういうセッションはむずむずするが、ワークと割り切って普段やらないことを試したり、意識できてないようなところを確認できるので面白い。
あーあるある、という状況に名前をつけて認識できるようにする感じ。関連する本を1冊読んでみたくなった。&lt;/p&gt;

&lt;h3 id=&#34;クロージング&#34;&gt;クロージング&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;https://picasaweb.google.com/lh/photo/-8m3QTZ1cMGw8ZXEb4n0J9MTjNZETYmyPJy0liipFm0?feat=embedwebsite&#34;&gt;&lt;img src=&#34;https://lh3.googleusercontent.com/-KW_oTBU3pZo/VPfPzaRiGKI/AAAAAAAASj4/ESG_jlF9J1s/s800/_20150228_173624.jpg&#34; height=&#34;600&#34; width=&#34;800&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;初日のクロージングは参加者全員で来年度のRSGTのポスター・テーマを考えた。
それぞれ10人程度の9チームに分かれ、意見をまとめ、発表した。&lt;/p&gt;

&lt;p&gt;限られた時間内に焦りながら成果を出そうとする感覚は、マシュマロゲームみたいな印象。
すみません、プロトタイプとか全然つくりませんでした。アイデア考えて、締め切り直前に最終版を書き始めました。&lt;/p&gt;

&lt;p&gt;みなさんどうやって取り組んだろうか？
振り返りしたチームもあるようだし、自分がいたチームは「だれが」「なにを」期待するイベントにしたいかのアイデアを考えて投票、
それに合うフレーズのアイデアを出し合うようなフローで参加した。&lt;/p&gt;

&lt;p&gt;意外に感じたのは、チーム内で我先にとファシリテーター役出るかと思ったらそうでもなかった。お見合い。
そんな雰囲気の中でも活発に意見を出して、雰囲気をつくっていた女性の方々すごいと思いました。&lt;/p&gt;

&lt;h2 id=&#34;day2&#34;&gt;Day2&lt;/h2&gt;

&lt;h3 id=&#34;open-space-technology&#34;&gt;Open Space Technology&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;https://picasaweb.google.com/lh/photo/wTFS1FiWL85lr_cuRREbSdMTjNZETYmyPJy0liipFm0?feat=embedwebsite&#34;&gt;&lt;img src=&#34;https://lh3.googleusercontent.com/--NZKsShM8S0/VPfPzZsy1nI/AAAAAAAASj4/10eN7so2MPA/s800/_20150301_130543.jpg&#34; height=&#34;600&#34; width=&#34;800&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;2日目は全てOpen Space Technologyの時間。
午前はアイデア募集をして、似たものはまとめて、午後に向けて時間と場所の割り振りをした。&lt;/p&gt;

&lt;p&gt;私は&amp;rdquo;スクラムで取ると嬉しいメトリクス・数字&amp;rdquo;というテーマで時間をとらせてもらい、以下のようなアイデアがでた。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://picasaweb.google.com/lh/photo/QrY0T6zZ6vUQ-MPDKLrbQdMTjNZETYmyPJy0liipFm0?feat=embedwebsite&#34;&gt;&lt;img src=&#34;https://lh6.googleusercontent.com/-eORdhihYEiw/VPfPzWwV1aI/AAAAAAAASj8/wdv5wzE2sKk/s800/_20150301_150056.jpg&#34; height=&#34;600&#34; width=&#34;800&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;測定手法・項目&lt;/th&gt;
&lt;th&gt;効果&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;ベロシティ&lt;/td&gt;
&lt;td&gt;見積もり精度向上&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;各タスクが何日で完了したか&lt;/td&gt;
&lt;td&gt;見積もり精度向上&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;◯◯さんが実施したレビュー回数&lt;/td&gt;
&lt;td&gt;特定の人への依存の視覚化&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;テストカバレッジ&lt;/td&gt;
&lt;td&gt;品質&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;テストの書き出し、実装にかかった時間&lt;/td&gt;
&lt;td&gt;工数視覚化?&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;割り込みタスクの数・かかった時間&lt;/td&gt;
&lt;td&gt;見積もり精度向上&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;バグの数&lt;/td&gt;
&lt;td&gt;見積もり精度向上&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;デモミーティング参加者のフィードバック数&lt;/td&gt;
&lt;td&gt;期待値や成果の指標&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;目標達成できると思う率&lt;/td&gt;
&lt;td&gt;心境・潜在タスクの視覚化&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;TODO・FIXMEコメント、つみのこしタスクの量&lt;/td&gt;
&lt;td&gt;潜在タスクの視覚化、理解度の視覚化&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;コードの静的チェック&lt;/td&gt;
&lt;td&gt;技術的負債の視覚化&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;トラックナンバー&lt;/td&gt;
&lt;td&gt;特定の人への依存の視覚化&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;タスクや開発プロセスが停滞してたとこ共有&lt;/td&gt;
&lt;td&gt;特定の人への依存の低減、プロセス上のボトルネックの発見&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;UATの実行時間&lt;/td&gt;
&lt;td&gt;性能保証、変化に気づける&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;スプリントへの満足度&lt;/td&gt;
&lt;td&gt;開発プロセス上の問題発見&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;問い合わせに返答してる率&lt;/td&gt;
&lt;td&gt;対応もれ防止&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;最終ソースコミット時刻&lt;/td&gt;
&lt;td&gt;働く環境の状況が見える&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;同じ種類のバグを出してないか&lt;/td&gt;
&lt;td&gt;コード改善&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;もっとはやくデリバリーしたいと思っても、どこが原因になってるか見えてないことは多いので、
上がったような項目からアイデアを得て改善できると嬉しい。&lt;/p&gt;

&lt;h3 id=&#34;lean-coffee&#34;&gt;Lean Coffee&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;https://picasaweb.google.com/lh/photo/EB0j90S5-Rpu7hQuoLYjvNMTjNZETYmyPJy0liipFm0?feat=embedwebsite&#34;&gt;&lt;img src=&#34;https://lh5.googleusercontent.com/-nxVFGEs0Hhc/VPfPzQlwsjI/AAAAAAAASj8/YJxjadGNobU/s800/_20150301_123951.jpg&#34; height=&#34;600&#34; width=&#34;800&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;ランチの時間にはLean Coffeeを行った。Coffeeは飲んでないけど。
テーマを出し合って、投票して人気だったのテーマから順にディスカッションをする。
7分ごとに議論を継続するか、次の話題に移っていくかの確認がある。&lt;/p&gt;

&lt;p&gt;適度に時間が区切られており、人数も少人数だったのでわりと集中して参加できた印象。&lt;/p&gt;

&lt;p&gt;議論ででたアイデアの中で、&amp;rdquo;メンバーそれぞれがスプリントの名前を出し合う&amp;rdquo;というのが個人的に面白いと思った。
ビジョンが共有されてなければ、全く違うものが出てそれに気づくだろうし、
見返した時に何をしてきたのか、何が不足しているのかの考えるヒントになる。&lt;/p&gt;

&lt;h2 id=&#34;day3&#34;&gt;Day3&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://picasaweb.google.com/lh/photo/6HOUhH24kW39OgxzcL3JHNMTjNZETYmyPJy0liipFm0?feat=embedwebsite&#34;&gt;&lt;img src=&#34;https://lh6.googleusercontent.com/-tEUEtwrX5vY/VPfPzdNNIJI/AAAAAAAASj4/87n2Lmag_6w/s800/_20150302_144630.jpg&#34; height=&#34;800&#34; width=&#34;600&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;3日目は以下の4つのセッションがあった。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Kazumasa Ebataさんの&lt;a href=&#34;http://2015.scrumgatheringtokyo.org/event/328d75dfb6132d6ced031e7ba846cc1b#.VPfjHVPadrM&#34;&gt;Promotion of Growth Led by Scrum. ~ Road to Agile/KAIZEN. Improve THE Experience for Challenger ~&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;森崎 修司さんの&lt;a href=&#34;http://2015.scrumgatheringtokyo.org/event/e34accd4020c1869e4a77e23390c3565#.VPfjIFPadrM&#34;&gt;レビューの課題と対策、モダンコードレビューの動向&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Kiro HARADAさん、Lê Trọng Hiệpさん、Phạm Anh Đớiさんの&lt;a href=&#34;http://2015.scrumgatheringtokyo.org/event/1fdf35d5512cb65be238b2dc6985a888#.VPfjIVPadrM&#34;&gt;State of Agile / Software Dev in Vietnam and relationship between Japan and Vietnam&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Mary Gormanさんの&lt;a href=&#34;http://2015.scrumgatheringtokyo.org/event/1fe726ea088481ce98590a251857d1fb#.VPfjJFPadrM&#34;&gt;アジャイルな発見プラクティスを革新し、活性化させましょう Innovate and Invigorate Your Agile Discovery Practices&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;promotion-of-growth-led-by-scrum-road-to-agile-kaizen-improve-the-experience-for-challenger&#34;&gt;Promotion of Growth Led by Scrum. ~ Road to Agile/KAIZEN. Improve THE Experience for Challenger ~&lt;/h3&gt;

&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;日本の状況は誤った情報が多い印象。&lt;/li&gt;
&lt;li&gt;自分の本もスクラムに色付けしたもの。&lt;/li&gt;
&lt;li&gt;今から学ぼうとするとミスリーディングが多い。正しい情報が多い状況をつくっていきたい。&lt;/li&gt;
&lt;li&gt;スクラムを選択肢にいれてほしい。&lt;/li&gt;
&lt;/ul&gt;

&lt;!-- br --&gt;

&lt;ul&gt;
&lt;li&gt;◯◯ブートキャンプとか◯◯サムライも誰かが経験したもの。&lt;/li&gt;
&lt;li&gt;第一ソースに会う機会を増やしていったほうがいいと感じる。&lt;/li&gt;
&lt;/ul&gt;

&lt;!-- br --&gt;

&lt;ul&gt;
&lt;li&gt;奴隷になってる。会社やスクラムの。&lt;/li&gt;
&lt;li&gt;スクラムだからではなく、スクラムの目指してるものを考えれてるのか。&lt;/li&gt;
&lt;/ul&gt;

&lt;!-- br --&gt;

&lt;ul&gt;
&lt;li&gt;Ken Schwaberのgoogleでの動画から分かるように、透明感、３ヶ月後とかの状況を知る、把握するためのツール&lt;/li&gt;
&lt;li&gt;ビジネスを成功させるものではない&lt;/li&gt;
&lt;li&gt;できない人がやって数ヶ月後ほとんど何も完成してないだろう、それがわかる&lt;/li&gt;
&lt;/ul&gt;

&lt;!-- br --&gt;

&lt;ul&gt;
&lt;li&gt;改善したい人のペルソナを考える&lt;/li&gt;
&lt;li&gt;飢餓感タイプか(圧倒的当事者意識くん)&lt;/li&gt;
&lt;li&gt;危機感タイプか(やればできるこ)&lt;/li&gt;
&lt;li&gt;飢餓感タイプは与えることに抵抗ない&lt;/li&gt;
&lt;li&gt;危機感タイプはいただければやります、ひどいともうほっといてください&lt;/li&gt;
&lt;/ul&gt;

&lt;!-- br --&gt;

&lt;ul&gt;
&lt;li&gt;飢餓：「忙しいからほっておいてくれ！」&lt;/li&gt;
&lt;li&gt;危機：「トラブルさえなければいい」&lt;/li&gt;
&lt;li&gt;どちらもなにも求めてない。どちらもスクラムほしがってない。&lt;/li&gt;
&lt;/ul&gt;

&lt;!-- br --&gt;

&lt;ul&gt;
&lt;li&gt;飢餓：あなたの望みの助けになるよ、と伝える。&lt;/li&gt;
&lt;li&gt;危機：なんで重要なのかというイメージもってもらう。イメージさえできればできる。&lt;/li&gt;
&lt;li&gt;アプローチは対象によって違う&lt;/li&gt;
&lt;/ul&gt;

&lt;!-- br --&gt;

&lt;ul&gt;
&lt;li&gt;えばたさんは危機感タイプ。だから本場に行くことで危機感を覚えるように動く&lt;/li&gt;
&lt;li&gt;フィードバックは&amp;rdquo;言う&amp;rdquo;ことだけではない。なんでも言ってたら、それはただの独り言&lt;/li&gt;
&lt;li&gt;適切に行動を変える刺激を与えたり、与えなかったりすること&lt;/li&gt;
&lt;li&gt;挑戦する場がなければ人は動かない&lt;/li&gt;
&lt;/ul&gt;

&lt;!-- br --&gt;

&lt;ul&gt;
&lt;li&gt;スクラムにはフィードバックが組み込まれてる&lt;/li&gt;
&lt;li&gt;ルール通りにやることで、８割方のフィードバック得られるはず&lt;/li&gt;
&lt;/ul&gt;

&lt;!-- br --&gt;

&lt;ul&gt;
&lt;li&gt;スクラムスレーブ(奴隷)になる。どうやって未来をつくっていくのかを考えないと。&lt;/li&gt;
&lt;li&gt;ブラックボックスな状態でスクラムやります、は仲間をつくらない。&lt;/li&gt;
&lt;/ul&gt;

&lt;!-- br --&gt;

&lt;ul&gt;
&lt;li&gt;スクラムでプロダクトよくなるは嘘。または、あくまでも特定の状況での事例にすぎない。&lt;/li&gt;
&lt;li&gt;機会を多くして、プロダクトよくする機会がふえるだけ。&lt;/li&gt;
&lt;/ul&gt;

&lt;!-- br --&gt;

&lt;ul&gt;
&lt;li&gt;チームもいきなり成長することはない。&lt;/li&gt;
&lt;li&gt;スクラムは現状をつきつけて残酷。ベロシティとか。&lt;/li&gt;
&lt;/ul&gt;

&lt;!-- br --&gt;

&lt;ul&gt;
&lt;li&gt;「組織が違うんです。頭でっかちいるんです。」&lt;/li&gt;
&lt;li&gt;じゃあ働きかけていきましょう。キーパーソンに。スクラムにはそういうことを考えるきっかけがあるだけ。&lt;/li&gt;
&lt;/ul&gt;

&lt;!-- br --&gt;

&lt;ul&gt;
&lt;li&gt;勇気をもって未来をつくってほしい。未来はリスクある。そこにいる人が勇気を持たなければならない。&lt;/li&gt;
&lt;li&gt;スクラムやったからよくなるとは限らない。&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt;公演中に紹介されていたKen Schwaberさんの動画は多分これ。&lt;/p&gt;

&lt;div class=&#34;embed-video-container&#34;&gt;
  &lt;iframe src=&#34;http://www.youtube.com/embed/_47VWIvOKH8&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;


&lt;p&gt;また、メモ上では大分省略しているが、
2タイプのペルソナに対して継続・ゴール設定といった状況に合わせた具体的なメッセージの紹介があった。&lt;/p&gt;

&lt;p&gt;周りの方々を見ていてもそうだが、1次ソースに触れるというのは大事なんだろうなあと感じた。
また、2タイプにわけて考えるという切り口は面白い。
相手の求めるフィードバックに役立つのはもちろん、自分がどっちかを意識しておくことで、人との違いに変にイライラせずに済みそう。&lt;/p&gt;

&lt;h3 id=&#34;レビューの課題と対策-モダンコードレビューの動向&#34;&gt;レビューの課題と対策、モダンコードレビューの動向&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;モダン: どの時点でのモダンかわからない。
例えば&amp;rdquo;新&amp;rdquo;喜劇。&lt;/p&gt;

&lt;p&gt;エンピリカルソフトウェア、フィードバックを基にした研究。&lt;/p&gt;

&lt;p&gt;ソフトウェアレビューの目的：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;不具合の修正コストの低減&lt;/li&gt;
&lt;li&gt;保守性向上&lt;/li&gt;
&lt;li&gt;状況把握と承認&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;レビューは指摘ポイントの自由度高く、本質的な欠陥の指摘が少ない。&lt;/p&gt;

&lt;p&gt;アンチパターンの例:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;コードの前半ばかり見てる&lt;/li&gt;
&lt;li&gt;作り直してやろうかと考える&lt;/li&gt;
&lt;li&gt;時間があるだけやり続ける&lt;/li&gt;
&lt;li&gt;人間関係の持ち込み&lt;/li&gt;
&lt;li&gt;見栄の張り合い、「なにか言わないと」&lt;/li&gt;
&lt;li&gt;人格攻撃、「センスないね」&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;ある研究の結果:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;機能的な問題(21.4%)&lt;/li&gt;
&lt;li&gt;保守上の問題(71.1%)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;教科書的な対応としては、レビューする前に目的を定義する。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;命名規則&lt;/li&gt;
&lt;li&gt;ユーザビリティ&lt;/li&gt;
&lt;li&gt;性能問題&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;そのための方法:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;コードレビュー&lt;/li&gt;
&lt;li&gt;手動テスト&lt;/li&gt;
&lt;li&gt;テストコード、テスト自動化&lt;/li&gt;
&lt;/ul&gt;

&lt;!-- br --&gt;

&lt;ul&gt;
&lt;li&gt;見つけると効果ある(定数を右に書くかどうかは効果低そう)&lt;/li&gt;
&lt;li&gt;コスト減らす(特殊な状況だけ起きるものとかカバー)&lt;/li&gt;
&lt;li&gt;あとあと拡張しやすくする（プラグインにするとか）&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;リーディングテクニック:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;シナリオを用意して個々に割り当てる&lt;/li&gt;
&lt;li&gt;先にシナリオはチームで合意しておく

&lt;ul&gt;
&lt;li&gt;ex.メモリリークないか(確保と解放の数あってるか)、無停止でデプロイできるか&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;シナリオのメリット:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;限界を知って割りきれる。「初めてやるし仕方ない」&lt;/li&gt;
&lt;li&gt;問題の指摘するふりした攻撃とかを減らせる。&lt;/li&gt;
&lt;/ul&gt;

&lt;!-- br --&gt;

&lt;ul&gt;
&lt;li&gt;唯一の正解があるわけではない&lt;/li&gt;
&lt;li&gt;身の丈にあったシナリオ設定する

&lt;ul&gt;
&lt;li&gt;ex.鉄道のシステムとかつくるのと違って、絶対に落ちないアプリそれほど求められてない&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;!-- br --&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;タブとかスペースの数は息の長くないモジュールにやっても仕方ない&lt;/li&gt;
&lt;li&gt;が、OSSだとちょっと違う&lt;/li&gt;
&lt;li&gt;メンテナがいないと滅びるのでevolvabilityが重視される&lt;/li&gt;
&lt;/ul&gt;

&lt;!-- br --&gt;

&lt;ul&gt;
&lt;li&gt;アジャイルでなくても信頼、助け合いは必要&lt;/li&gt;
&lt;li&gt;言葉の端々への配慮必要&lt;/li&gt;
&lt;li&gt;態度を変えさせるための指摘してはだめ&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;新人向けの注意:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;問題指摘されても自分の批判と考えないように&lt;/li&gt;
&lt;li&gt;「知ってました」「そうでしたっけ」と照れ隠ししない&lt;/li&gt;
&lt;li&gt;厳しい批判に「自分でやってください」と逆上しない&lt;/li&gt;
&lt;li&gt;「本質的でない」と逆批判しない&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;モダンコードレビューは:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;パスアラウンドに似てる、メールでなげて回覧板みたいにするやつ&lt;/li&gt;
&lt;li&gt;OSSのコードレビューに似てる&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;欠陥検出以外に・・&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;情報共有&lt;/li&gt;
&lt;li&gt;透明性向上&lt;/li&gt;
&lt;li&gt;代替実装方法の検討&lt;/li&gt;
&lt;li&gt;良い点、続けてもらいたいことも積極的に伝える&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;グーグルでのコードレビュー:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;目的は協調であり、欠陥検出ではない&lt;/li&gt;
&lt;li&gt;コーディングプロセスの一部として統合されてる&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;メリット&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;修正時間を短くする&lt;/li&gt;
&lt;li&gt;新人の教育&lt;/li&gt;
&lt;li&gt;信頼感の醸成&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;グーグルのツール:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;mondrianというツールで管理&lt;/li&gt;
&lt;li&gt;OSSクローンのrietveldがある&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;シスコでのコードレビュー:&lt;br /&gt;
シスコでのコードレビューも小さくたくさんやってる感じ&lt;/p&gt;

&lt;p&gt;Microsoftはcodeflowというツール。mondrianやgerritと似てる。&lt;/p&gt;

&lt;p&gt;コードレビューに期待することアンケートでは&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;保守性&lt;/li&gt;
&lt;li&gt;情報共有&lt;/li&gt;
&lt;li&gt;やってること見える化&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;あたり上位にきてた。バグ見つけるだけじゃない。&lt;/p&gt;

&lt;p&gt;モダンコードレビューでの注意点&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;断片でみるので全体での一貫性や整合性が見落としがち&lt;/li&gt;
&lt;li&gt;些細な指摘ならないシナリオ設定&lt;/li&gt;
&lt;li&gt;誰かがみるだろうと放置&lt;/li&gt;
&lt;li&gt;特定の人に集中する&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt;Githubなどで利用されているプルリクエストがちょうどモダンコードレビューに当たるとのこと。&lt;br /&gt;
なんでプルリクという形に落ち着いてるのか考えるきっかけになる。
また、どうしてOSSでは保守性が重視されるのか、という切り口は面白いと思った。&lt;/p&gt;

&lt;p&gt;そして紹介されていたアンチパターンは、耳の痛いものばかり。。&lt;/p&gt;

&lt;h3 id=&#34;state-of-agile-software-dev-in-vietnam-and-relationship-between-japan-and-vietnam&#34;&gt;State of Agile / Software Dev in Vietnam and relationship between Japan and Vietnam&lt;/h3&gt;

&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;ベトナムの現状、手法やhowが多い&lt;/li&gt;
&lt;li&gt;value driven development&lt;/li&gt;
&lt;li&gt;これからwhyに変わっていくだろう&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;問題:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;まずは信頼が大事。コードの品質よりも大事だとおもう。

&lt;ul&gt;
&lt;li&gt;日本はレポート多い。下手すると毎時間。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;言葉の壁。定義されてない期待。

&lt;ul&gt;
&lt;li&gt;ex.５分早くミーティングにいくべき。とか&lt;/li&gt;
&lt;li&gt;やりたいこと(日本語)-&amp;gt;仕様書(日本語)-&amp;gt;ベトナム語と、たくさんの変換&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;POをオフショア先に置くのが一つの解決策では。
プロキシPOではなく。スクラムチームまるごとをオフショア先におく。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;プロキシする人が多いとややこしいというのは共感。
依頼側も依頼される側も「信頼関係を築きたい」と考えている状況ならもっとシンプルになりそう。&lt;/p&gt;

&lt;p&gt;今回の発表者のお二人もそうだし、紹介されていたベトナムでのイベントはとても盛り上がっている印象を受けた。
ベトナムでは多くの講演が英語らしい。
ベトナム行きたい。&lt;/p&gt;

&lt;h3 id=&#34;innovate-and-invigorate-your-agile-discovery-practices&#34;&gt;Innovate and Invigorate Your Agile Discovery Practices&lt;/h3&gt;

&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;多くのチームは一度ディスカバーに時間を費やした後、多くの時間をデリバリーに費やしている&lt;/li&gt;
&lt;li&gt;ディスカバーとデリバリーのフローは断絶されてるべきではない。&lt;/li&gt;
&lt;li&gt;そしてジャストオンタイムであるべき。&lt;/li&gt;
&lt;/ul&gt;

&lt;!-- br --&gt;

&lt;ul&gt;
&lt;li&gt;inovate(革新) + invigorate(活性化)&lt;/li&gt;
&lt;/ul&gt;

&lt;!-- br --&gt;

&lt;ul&gt;
&lt;li&gt;一般的なストーリーはユーザーとアクションから構成される&lt;/li&gt;
&lt;/ul&gt;

&lt;!-- br --&gt;

&lt;ul&gt;
&lt;li&gt;要件は機能要件と非機能要件に分けられる&lt;/li&gt;
&lt;li&gt;それらの要件をさらに7つに分解したのが&amp;rdquo;7 product demensions&amp;rdquo;(プロダクトの7側面)&lt;/li&gt;
&lt;/ul&gt;

&lt;!-- br --&gt;

&lt;ul&gt;
&lt;li&gt;チームはinterdependent(互いに依存している状態)がよい&lt;/li&gt;
&lt;li&gt;独立状態でもなく&lt;/li&gt;
&lt;li&gt;依存でもなく(一方的な)&lt;/li&gt;
&lt;/ul&gt;

&lt;!-- br --&gt;

&lt;ul&gt;
&lt;li&gt;イメージを共有するために、より視覚的に考えるべき&lt;/li&gt;
&lt;li&gt;実際に7側面を考える場を設けるとそれはエネルギッシュで騒がしい場になる
- ディスカバーすることでモチベーションも高まる&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt;今回紹介されたDtoD本は日本語に翻訳されている。紹介動画もある。&lt;/p&gt;

&lt;table border=&#34;0&#34; cellpadding=&#34;0&#34; cellspacing=&#34;0&#34;&gt;&lt;tr&gt;&lt;td valign=&#34;top&#34;&gt;&lt;div style=&#34;border:1px solid;margin:0px;padding:6px 0px;width:260px;text-align:center;float:left&#34;&gt;&lt;a href=&#34;http://hb.afl.rakuten.co.jp/hgc/0ecae152.d6af1699.0ecae153.1dd72672/?pc=http%3a%2f%2fitem.rakuten.co.jp%2fbook%2f13138583%2f%3fscid%3daf_link_tbl&amp;amp;m=http%3a%2f%2fm.rakuten.co.jp%2fbook%2fi%2f17331482%2f&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;http://hbb.afl.rakuten.co.jp/hgb/?pc=http%3a%2f%2fthumbnail.image.rakuten.co.jp%2f%400_mall%2fbook%2fcabinet%2fnoimage_01.gif%3f_ex%3d240x240&amp;amp;m=http%3a%2f%2fthumbnail.image.rakuten.co.jp%2f%400_mall%2fbook%2fcabinet%2fnoimage_01.gif%3f_ex%3d80x80&#34; alt=&#34;発見から納品へ [ Gottesdiener，Ellen ]&#34; border=&#34;0&#34; style=&#34;margin:0px;padding:0px&#34;&gt;&lt;/a&gt;&lt;p style=&#34;font-size:12px;line-height:1.4em;text-align:left;margin:0px;padding:2px 6px&#34;&gt;&lt;a href=&#34;http://hb.afl.rakuten.co.jp/hgc/0ecae152.d6af1699.0ecae153.1dd72672/?pc=http%3a%2f%2fitem.rakuten.co.jp%2fbook%2f13138583%2f%3fscid%3daf_link_tbl&amp;amp;m=http%3a%2f%2fm.rakuten.co.jp%2fbook%2fi%2f17331482%2f&#34; target=&#34;_blank&#34;&gt;発見から納品へ [ Gottesdiener，Ellen ]&lt;/a&gt;&lt;br&gt;&lt;span&gt;価格：3,500円（税込、送料込）&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;div class=&#34;embed-video-container&#34;&gt;
  &lt;iframe src=&#34;http://www.youtube.com/embed/x9oIpZaXTDs&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;


&lt;p&gt;イメージ的にはスコープや要件に新たな切り口を定義する感じだろうか。&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;発表者の方々はHowではなくWhyを語る人が多い印象を受けた。
ただ、Howを実践することでWhyを発見することはあるはず。
一方で、もっと人やプロダクトの価値にもっとフォーカスすべきだなあと感じた。&lt;/p&gt;

&lt;p&gt;ベトナムの方々は強いインパクトがあった。
彼らはスクラムの未来を考えよう、とビジョンやマインドを語っていたし、若かった。ベトナムのIT業界の平均年齢は27歳らしい。&lt;/p&gt;

&lt;p&gt;今回のイベントに参加して、本家アジャイルカンファレンスにも行きたくなった。&lt;/p&gt;

&lt;p&gt;最後に、実行委員の皆様ありがとうございました。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>パリ生活に役立つアプリ10選&#43;α</title>
      <link>http://matsue.github.io/post/2015-02-06-useful-apps-in-paris/</link>
      <pubDate>Fri, 06 Feb 2015 15:01:38 +0900</pubDate>
      
      <guid>http://matsue.github.io/post/2015-02-06-useful-apps-in-paris/</guid>
      <description>&lt;p&gt;パリに滞在していた際に、便利だったり面白いと感じたアプリやサービスの紹介。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;パリ生活に役立つアプリ

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#citymapper&#34;&gt;Citymapper - 街中の移動に役立つアプリ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#flashInvaders&#34;&gt;FlashInvaders - 街を歩くのが楽しくなるアプリ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#le-fooding&#34;&gt;Le Fooding - パリのレストラン探し&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#vivino&#34;&gt;Vivino - ワインの記録のお供に&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#allocine&#34;&gt;AlloCiné - 映画を観たくなった時に&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#priceminister&#34;&gt;PriceMinister - ネットでお買い物&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;旅行に役立つアプリ

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#capitaine-train&#34;&gt;Capitaine Train - 列車の予約&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#skyscanner&#34;&gt;Skyscanner - 飛行機の予約&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#booking-com&#34;&gt;Booking.com - 宿の予約&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;その他の気になったサービス達

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#car-sharing&#34;&gt;車の貸し借り&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#study-japanese&#34;&gt;日本語の勉強&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;/p&gt;

&lt;h2 id=&#34;パリ生活に役立つアプリ&#34;&gt;パリ生活に役立つアプリ&lt;/h2&gt;

&lt;h3 id=&#34;a-name-citymapper-a-citymapper-街中の移動に役立つアプリ&#34;&gt;&lt;a name=&#34;citymapper&#34;&gt;&lt;/a&gt;Citymapper - 街中の移動に役立つアプリ&lt;/h3&gt;


&lt;figure &gt;
    
        &lt;img src=&#34;https://lh6.googleusercontent.com/-F4b4zb-Fn64/VNSUUDgCGeI/AAAAAAAASAI/Op9fHfrh8nw/w389-h692-no/Screenshot_2014-10-09-23-09-16.png&#34;  /&gt;
    
    
&lt;/figure&gt;



&lt;ul&gt;
&lt;li&gt;iOS: &lt;a href=&#34;https://itunes.apple.com/app/id469463298&#34;&gt;https://itunes.apple.com/app/id469463298&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;Android: &lt;a href=&#34;https://play.google.com/store/apps/details?id=com.citymapper.app.release&#34;&gt;https://play.google.com/store/apps/details?id=com.citymapper.app.release&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;これはパリで最も重宝したアプリ！
Google Mapsも十分便利だけれど、Citymapperは自転車やバスも含めて検索してくれるところが良い。&lt;/p&gt;

&lt;p&gt;パリではレンタル自転車のVelibが随所に設置されていて簡単に利用できることともあり、
自転車も含めてルート検索したくなるのだけれど、このアプリなら簡単に検索して比較できる。&lt;/p&gt;

&lt;p&gt;またVelib乗り場で使用可能な自転車の数や、駐車先の場所や空き状況も表示してくれるのも嬉しい。&lt;/p&gt;

&lt;p&gt;Velibのオフィシャルアプリ(&lt;a href=&#34;https://itunes.apple.com/jp/app/velib/id577807727&#34;&gt;iOS&lt;/a&gt; / &lt;a href=&#34;https://play.google.com/store/apps/details?id=com.paris.velib&#34;&gt;Android&lt;/a&gt;)もあるけれど、結局Citymapperがあればほとんど使う機会は無かった。&lt;/p&gt;

&lt;p&gt;車でお出かけの際はWaze(&lt;a href=&#34;https://itunes.apple.com/us/app/waze-social-gps-traffic/id323229106&#34;&gt;iOS&lt;/a&gt; / &lt;a href=&#34;https://play.google.com/store/apps/details?id=com.waze&#34;&gt;Android&lt;/a&gt;)をナビに使ってる人も多い。&lt;/p&gt;

&lt;h3 id=&#34;a-name-flashinvaders-a-flashinvaders-街を歩くのが楽しくなるアプリ&#34;&gt;&lt;a name=&#34;flashInvaders&#34;&gt;&lt;/a&gt;FlashInvaders - 街を歩くのが楽しくなるアプリ&lt;/h3&gt;


&lt;figure &gt;
    
        &lt;img src=&#34;https://lh6.googleusercontent.com/-Ld9PZUGVPaE/VNSUegz98YI/AAAAAAAASA0/-HPriFz5Yaw/w389-h692-no/15%2B-%2B1&#34;  /&gt;
    
    
&lt;/figure&gt;



&lt;ul&gt;
&lt;li&gt;iOS: &lt;a href=&#34;https://itunes.apple.com/jp/app/flashinvaders/id895180919&#34;&gt;https://itunes.apple.com/jp/app/flashinvaders/id895180919&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Android: &lt;a href=&#34;https://play.google.com/store/apps/details?id=com.ltu.flashInvader&#34;&gt;https://play.google.com/store/apps/details?id=com.ltu.flashInvader&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Citymapperに次いで使用率の高かったアプリ。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://en.wikipedia.org/wiki/Invader_%28artist%29&#34;&gt;インベーダー氏&lt;/a&gt;が街中に設置したインベーダーを模したストリートアートを写真に収めると、
ポイントが貰えるというアプリ。&lt;/p&gt;

&lt;p&gt;見つけると嬉しいので、やり始めるとついつい街を歩きながらも外壁を見ながら歩いてしまう。
インベーダーは、ビルの最上階や水路の壁など、「どうやって置いたの？」と思われる場所に潜伏していたりする。&lt;/p&gt;

&lt;p&gt;特にポイント集めたら何か貰えるわけでもないのだが楽しい。
そして、1人でやるよりも誰かと見つけたインベーダー情報を交換しながらやる方が楽しい。
ときどき、写真を撮っていると他のインベーダー収集家と、「あっちの壁にもいたよ」といったコミュニケーションも生まれたりする。
個人的にはアプリのドット感も好き。&lt;/p&gt;

&lt;p&gt;インベーダー氏は世界中で3069匹、計62都市でインベーダーを設置したらしく、
&lt;a href=&#34;http://space-invaders.com/world/paris/&#34;&gt;パリ&lt;/a&gt;には1135匹ものインベーダーがおり、完全に本拠地。
&lt;a href=&#34;http://space-invaders.com/world/tokyo/&#34;&gt;東京&lt;/a&gt;にも138匹いるらしい。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://instagram.com/invaderwashere/&#34;&gt;Instagram&lt;/a&gt;や&lt;a href=&#34;https://www.youtube.com/watch?v=gBXjpfX576w&#34;&gt;Youtube&lt;/a&gt;では、潜伏しているインベーダーの写真・映像が見れる。
「え、そこにいたの！」と普段通っている道でも新たな発見があるかもしれない。&lt;/p&gt;

&lt;p&gt;ちなみにパリではインベーダー以外にもたくさんのストリートアートを見かけ、
パリの人々にはラクガキというよりはちゃんとアートとして受け入れられているように感じた。&lt;/p&gt;

&lt;h3 id=&#34;a-name-le-fooding-a-le-fooding-パリのレストラン探し&#34;&gt;&lt;a name=&#34;le-fooding&#34;&gt;&lt;/a&gt;Le Fooding - パリのレストラン探し&lt;/h3&gt;


&lt;figure &gt;
    
        &lt;img src=&#34;https://lh6.googleusercontent.com/-JYx9cYSjKvI/VNSXYZmTNsI/AAAAAAAASBI/1ltWwvER--Y/w519-h692-no/_20140730_130613.jpg&#34;  /&gt;
    
    
&lt;/figure&gt;



&lt;p&gt;旅行先で人気のスポットを探す際は&lt;a href=&#34;http://www.tripadvisor.com/&#34;&gt;TripAdvisor&lt;/a&gt;が便利だけれど、
パリのレストランで検索するとあまりにも候補が多すぎて使いづらい。&lt;/p&gt;

&lt;p&gt;美味しいレストランを見ていると、&lt;a href=&#34;http://lefooding.com/fr/restaurants&#34;&gt;Le Fooding&lt;/a&gt;や&lt;a href=&#34;http://www.timeout.fr/paris/restaurant&#34;&gt;Time Out&lt;/a&gt;に取り上げられていることが多いので、
これらのサイトから情報を探すと良いだろう。&lt;/p&gt;

&lt;p&gt;フランス語が分かる方には&lt;a href=&#34;http://www.alloresto.fr/&#34;&gt;Alloresto&lt;/a&gt;も良さそう。&lt;/p&gt;

&lt;h3 id=&#34;a-name-vivino-a-vivino-ワインの記録のお供に&#34;&gt;&lt;a name=&#34;vivino&#34;&gt;&lt;/a&gt;Vivino - ワインの記録のお供に&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;iOS: &lt;a href=&#34;https://itunes.apple.com/jp/app/vivino-wine-scanner/id414461255&#34;&gt;https://itunes.apple.com/jp/app/vivino-wine-scanner/id414461255&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Android: &lt;a href=&#34;https://play.google.com/store/apps/details?id=vivino.web.app&#34;&gt;https://play.google.com/store/apps/details?id=vivino.web.app&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;フランスで見つけた美味しいワインの記録にはこのアプリ。
ワインのラベルをこのアプリで撮ると自動で種類や年度を記録してくれて便利。&lt;/p&gt;

&lt;p&gt;似たようなアプリだとVinica(&lt;a href=&#34;https://itunes.apple.com/jp/app/vinica-vu-inika-wainwo-xie/id601305612&#34;&gt;iOS&lt;/a&gt; / &lt;a href=&#34;https://play.google.com/store/apps/details?id=me.vinica.android&#34;&gt;Android&lt;/a&gt;)もある。&lt;/p&gt;

&lt;h3 id=&#34;a-name-allocine-a-allociné-映画を観たくなった時に&#34;&gt;&lt;a name=&#34;allocine&#34;&gt;&lt;/a&gt;AlloCiné - 映画を観たくなった時に&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;iOS: &lt;a href=&#34;https://itunes.apple.com/jp/app/allocine/id351184863&#34;&gt;https://itunes.apple.com/jp/app/allocine/id351184863&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Android: &lt;a href=&#34;https://play.google.com/store/apps/details?id=com.allocine.androidapp&#34;&gt;https://play.google.com/store/apps/details?id=com.allocine.androidapp&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;観たい映画を上映している映画館を調べたかったり、
近くの映画館で上映している映画を調べたいときに便利なアプリ。&lt;/p&gt;

&lt;p&gt;アプリとは関係ないが、パリの映画館ではフランス語吹き替えのVFと、フランス語字幕のVOが上映されている。
VOは元の音声が英語とは限らない。ホビットの冒険を見たときは、音声はエルフ語で字幕はフランス語、という場面もあった。&lt;/p&gt;

&lt;h3 id=&#34;a-name-priceminister-a-priceminister-ネットでお買い物&#34;&gt;&lt;a name=&#34;priceminister&#34;&gt;&lt;/a&gt;PriceMinister - ネットでお買い物&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;iOS: &lt;a href=&#34;https://itunes.apple.com/jp/app/priceminister-faites-vos-achats/id579373363&#34;&gt;https://itunes.apple.com/jp/app/priceminister-faites-vos-achats/id579373363&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Android: &lt;a href=&#34;https://play.google.com/store/apps/details?id=com.priceminister.buyerapp&#34;&gt;https://play.google.com/store/apps/details?id=com.priceminister.buyerapp&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;ネットショッピングができるアプリ。
時々、30%ほどポイントでキャッシュバックしてくれるイベントをやっていたので、その際にキーボードやスマホの充電器を買った。&lt;/p&gt;

&lt;p&gt;最近、流行っているらしいのがLeboncoin(&lt;a href=&#34;https://itunes.apple.com/fr/app/leboncoin/id484115113&#34;&gt;iOS&lt;/a&gt; / &lt;a href=&#34;https://play.google.com/store/apps/details?id=fr.leboncoin&#34;&gt;Android&lt;/a&gt;)。
決済システムがなく、売りたい人が電話番号等の情報を載せて、買いたい人が取りに行くというシンプルなサービスだが、
家具など梱包して送るのが難しいものを売るのによく利用されているようだ。売る際に手数料なども発生しないのも嬉しい。&lt;/p&gt;

&lt;h2 id=&#34;旅行に役立つアプリ&#34;&gt;旅行に役立つアプリ&lt;/h2&gt;

&lt;h3 id=&#34;a-name-capitaine-train-a-capitaine-train-列車の予約&#34;&gt;&lt;a name=&#34;capitaine-train&#34;&gt;&lt;/a&gt;Capitaine Train - 列車の予約&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;iOS: &lt;a href=&#34;https://itunes.apple.com/fr/app/capitaine-train-train-tickets/id599502670&#34;&gt;https://itunes.apple.com/fr/app/capitaine-train-train-tickets/id599502670&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Android: &lt;a href=&#34;https://play.google.com/store/apps/details?id=com.capitainetrain.android&#34;&gt;https://play.google.com/store/apps/details?id=com.capitainetrain.android&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;フランスの公共交通機関であるSNCFのオフィシャルアプリもあるが、&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Captaine Trainの方がSNCFより操作しやすい&lt;/li&gt;
&lt;li&gt;Captain Trainでしか表示されないチケットや、Captain Trainの方が安いということがある&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;という理由からオススメ。&lt;/p&gt;

&lt;p&gt;出発地や目的地の駅名がわからなくても、
例えばパリからモンサンミッシェルに行きたい場合は&amp;rdquo;Paris -&amp;gt; Mont Saint Michel&amp;rdquo;という風に行きたい地名を入れれば目的の列車を見つけられる。&lt;/p&gt;

&lt;h3 id=&#34;a-name-skyscanner-a-skyscanner-飛行機の予約&#34;&gt;&lt;a name=&#34;skyscanner&#34;&gt;&lt;/a&gt;Skyscanner - 飛行機の予約&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;iOS: &lt;a href=&#34;https://itunes.apple.com/jp/app/sukaisukyanaha-ge-hang-kong/id415458524&#34;&gt;https://itunes.apple.com/jp/app/sukaisukyanaha-ge-hang-kong/id415458524&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Android: &lt;a href=&#34;https://play.google.com/store/apps/details?id=net.skyscanner.android.main&#34;&gt;https://play.google.com/store/apps/details?id=net.skyscanner.android.main&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;少し遠出する際に安いフライトを見つけたいときに使えるアプリ。&lt;/p&gt;

&lt;p&gt;各航空会社が提供している期間限定の値下げキャンペーン等と比較すると最安のチケットとはいかないかもしれないが、
比較的安いチケットを見つけることができる。&lt;/p&gt;

&lt;p&gt;実際は&lt;a href=&#34;http://www.skyscanner.com&#34;&gt;Web版&lt;/a&gt;を使うことが多いのだが、検索もしやすく重宝する。&lt;/p&gt;

&lt;h3 id=&#34;a-name-booking-com-a-booking-com-宿の予約&#34;&gt;&lt;a name=&#34;booking-com&#34;&gt;&lt;/a&gt;Booking.com - 宿の予約&lt;/h3&gt;

&lt;p&gt;iOS: &lt;a href=&#34;https://itunes.apple.com/jp/app/hoteru-yu-yueno.1-bukkingudottokomu/id367003839&#34;&gt;https://itunes.apple.com/jp/app/hoteru-yu-yueno.1-bukkingudottokomu/id367003839&lt;/a&gt;
Android: &lt;a href=&#34;https://play.google.com/store/apps/details?id=com.booking&#34;&gt;https://play.google.com/store/apps/details?id=com.booking&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;宿泊する宿を探すのに便利なアプリ。&lt;/p&gt;

&lt;p&gt;宿によっては当日のギリギリの時間までキャンセル料が不要であったり、
支払いは現地でカードで払えばよかったということで、前日・当日に宿を探すというような場面でお世話になった。&lt;/p&gt;

&lt;p&gt;複数人で長く滞在する、まだ出発まで時間があるという場合は&lt;a href=&#34;https://www.airbnb.com/&#34;&gt;Airbnb&lt;/a&gt;で部屋を借りるのも良い。
私がAirbnbを利用した時はホストの人が優しかったので、
近場のお店を教えてくれたり、一緒にビールを飲んだりした。
そういったコミュニケーションが生まれるのもAirbnbの良いところ。&lt;/p&gt;

&lt;h2 id=&#34;その他の気になったサービス達&#34;&gt;その他の気になったサービス達&lt;/h2&gt;

&lt;h3 id=&#34;a-name-car-sharing-a-車の貸し借り&#34;&gt;&lt;a name=&#34;car-sharing&#34;&gt;&lt;/a&gt;車の貸し借り&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;http://www.blablacar.com/&#34;&gt;BlaBlaCar&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;BlaBlaCarは誰かの車に相乗りさせてもらうサービス。
レンタルカーを使うよりも安く旅行ができるよ、ということでオススメされた。
他にも似たようなサービスで、相乗りではなく車自体を借りるサービスもある。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.travelercar.com/en/&#34;&gt;TravelerCar&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;その一つがTravelerCar。これは、旅行する際に空港に車を駐車する代わりに自分の車を別の人に貸すというサービス。
空港の駐車代は高いので、貸す側は駐車代を浮かせることができ、借りる側は安く車が借りられるというwin-winを生むサービス。&lt;/p&gt;

&lt;h3 id=&#34;a-name-study-japanese-a-日本語の勉強&#34;&gt;&lt;a name=&#34;study-japanese&#34;&gt;&lt;/a&gt;日本語の勉強&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;https://play.google.com/store/apps/details?id=com.Obenkyo&#34;&gt;Obenkyo&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;日本語を勉強しているフランスの方々が使っていたアプリ。&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;以上！&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Unityで3D野球盤を作った</title>
      <link>http://matsue.github.io/post/2015-02-04-unity-workshop/</link>
      <pubDate>Wed, 04 Feb 2015 22:15:42 +0900</pubDate>
      
      <guid>http://matsue.github.io/post/2015-02-04-unity-workshop/</guid>
      <description>&lt;figure &gt;
    
        &lt;img src=&#34;https://lh6.googleusercontent.com/-jREUCZKPIRA/VNIwE0Q0JBI/AAAAAAAAR_A/bkdtFf09lvE/w1056-h692-no/unity-baseball-game.png&#34;  /&gt;
    
    
&lt;/figure&gt;



&lt;p&gt;&lt;a href=&#34;http://8a1-apc.connpass.com/event/11282/&#34;&gt;&amp;rdquo;【ハンズオン】初めてのUnityで作る「3D野球盤」APC勉強会 #14&amp;rdquo;&lt;/a&gt;に参加してきた。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;p&gt;当日の資料はこちら: &lt;a href=&#34;http://www.slideshare.net/apc_8a1/8a120150204-unity&#34;&gt;http://www.slideshare.net/apc_8a1/8a120150204-unity&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;上記の資料に沿ってUnityで3D野球盤を作ってきた。
資料がスクリーンショットを交えながら丁寧に作られていたし、
事前にオブジェクトやスクリプトが用意されていたこともあって、ちゃんと動くところまでいけた。
細かい操作で詰まっても質問してすぐに解決しながら作成できたのも良かった。
今回使用させてもらったオブジェクトやスクリプトが含まれるパッケージは、パスワード付きのリンクだったのでここには貼ってない。&lt;/p&gt;

&lt;p&gt;今回のハンズオンでスクリプトの定義方法、コンポーネントの追加の仕方、Assetsの登録方法など基本的な操作が理解できた。&lt;/p&gt;

&lt;p&gt;今回は時間短縮のためにパッケージで済ませた、
オブジェクトやゲームスクリプトの作成でトライ&amp;amp;エラーを繰り返していたら、
とても１時間程度では終わらなかったと思う。&lt;/p&gt;

&lt;p&gt;ほとんど用意されていたものを使ったとはいえ、動くとやっぱり嬉しい。&lt;/p&gt;

&lt;p&gt;Unityで作成したアプリなので、この野球盤アプリはAndroidでも動いた。
ただ、ラップトップではキー操作で動く部分が、Androidでは画面タップにする必要があるのでそこは修正しないといけない。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Paris Tech Talks 8th に参加した</title>
      <link>http://matsue.github.io/post/2014-09-22-paris-tech-talks-8th/</link>
      <pubDate>Mon, 22 Sep 2014 23:36:15 +0200</pubDate>
      
      <guid>http://matsue.github.io/post/2014-09-22-paris-tech-talks-8th/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://www.meetup.com/Paris-Tech-Talks/events/206595892/&#34;&gt;Paris Tech Talks #8&lt;/a&gt; に参加してきた。
Paris Tech Talksは新しい技術や事業の紹介をする場。
&lt;a href=&#34;http://matsue.github.io/blog/2014/08/06/paris-dot-rb/&#34;&gt;Paris.rb&lt;/a&gt; に続きパリでは2回目の勉強会参加になる。
珍しく英語開催のイベントということもあって参加してみた。&lt;/p&gt;


&lt;figure &gt;
    
        &lt;img src=&#34;https://lh3.googleusercontent.com/-a9Jgv7TzM-A/VCCTzKMc0mI/AAAAAAAAFGk/wa4WihFt4fg/w924-h693-no/_20140922_194645.jpg&#34;  /&gt;
    
    
&lt;/figure&gt;



&lt;p&gt;&lt;/p&gt;

&lt;h2 id=&#34;セッション&#34;&gt;セッション&lt;/h2&gt;

&lt;h3 id=&#34;detctive-io&#34;&gt;Detctive.io&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;https://www.detective.io/tour/&#34;&gt;Detctive.io&lt;/a&gt;というデータジャーナリズムを扱うサービスの紹介。&lt;br /&gt;
サービスの裏側ではNeo4jとDjangoを使用していて、&lt;a href=&#34;https://github.com/scholrly/neo4django&#34;&gt;neo4django&lt;/a&gt;を使っているらしい。
ただ、neo4djangoはまだ使える機能が限られており困っているとのこと。&lt;/p&gt;

&lt;h3 id=&#34;webプラットフォーム開発コミュニティ&#34;&gt;webプラットフォーム開発コミュニティ&lt;/h3&gt;

&lt;p&gt;共通環境でのブラウザテストや標準化をするコミュニティの話。&lt;br /&gt;
十分なテストや、ライセンスにCCを用いたり、開発練習の場としてスナップショットを用意したり、トピックブランチを活用してもらうというような取り組みで人を増やそうとしているとのこと。&lt;/p&gt;

&lt;p&gt;関連リンク:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://extensiblewebmanifesto.org/&#34;&gt;http://extensiblewebmanifesto.org/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.webplatform.com/&#34;&gt;http://www.webplatform.com/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;platform-sh&#34;&gt;Platform.sh&lt;/h3&gt;

&lt;p&gt;Ori pekelmanさんによる&lt;a href=&#34;https://platform.sh/&#34;&gt;Platform.sh&lt;/a&gt;の紹介。&lt;br /&gt;
Gitにpushするだけでデプロイとかできる、という趣旨のサービス。
懇親会で話を聞く限り、発表者の方は開発ミートアップイベントの常連さんらしい。&lt;/p&gt;

&lt;h3 id=&#34;ドットカンファレンスの紹介&#34;&gt;ドットカンファレンスの紹介&lt;/h3&gt;

&lt;p&gt;パリで開催される&lt;a href=&#34;http://www.dotgo.eu/&#34;&gt;dotGO&lt;/a&gt;、&lt;a href=&#34;http://www.dotcss.eu/&#34;&gt;dotCSS&lt;/a&gt;、&lt;a href=&#34;http://www.dotjs.eu/&#34;&gt;dotJS&lt;/a&gt;の紹介。&lt;br /&gt;
割引コード紹介や、&lt;a href=&#34;http://www.dotjs.eu/prize&#34;&gt;dotJS prize&lt;/a&gt;の紹介があった。
dotJSプライズはOSSならノミネートできるとのこと。&lt;/p&gt;

&lt;p&gt;その他にも以下のイベントが近くパリで開催される。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Rails Girls&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://scala.io/&#34;&gt;Scala.io&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.dotswift.io/&#34;&gt;dotSwift&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;pulsar&#34;&gt;Pulsar&lt;/h3&gt;

&lt;p&gt;Pulsarという開発中のビデオストリーミングソフトの紹介。&lt;br /&gt;
Kodi(XBMC)の上で動くtorrentの検索、ストリームエンジン。
Raspberry Piでも動くらしく、Chromecastのような機器も開発中とのこと。&lt;/p&gt;

&lt;p&gt;関連リンク:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/steeve/script.pulsar.dummy&#34;&gt;https://github.com/steeve/script.pulsar.dummy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://forum.xbmc.org/showthread.php?tid=200957&#34;&gt;http://forum.xbmc.org/showthread.php?tid=200957&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;イベント運営&#34;&gt;イベント運営&lt;/h2&gt;

&lt;p&gt;会場は&lt;a href=&#34;http://www.deezer.com/&#34;&gt;Deezer&lt;/a&gt;のオフィスだった。
Deezerは音楽ストリーミングサイトで、日本とアメリカでは展開していない模様。&lt;/p&gt;

&lt;p&gt;
&lt;figure &gt;
    
        &lt;img src=&#34;https://lh3.googleusercontent.com/dngAX2MxhhqSbqgqTjp4lPiMJfdnRhn14T7Gi26M8Fc=s207-p-no&#34;  /&gt;
    
    
&lt;/figure&gt;



&lt;figure &gt;
    
        &lt;img src=&#34;https://lh3.googleusercontent.com/cJUh3ZZi_yP1Vw7GPR37k5FrXxsbifHl_0mDpZsCfTQ=s207-p-no&#34;  /&gt;
    
    
&lt;/figure&gt;



&lt;figure &gt;
    
        &lt;img src=&#34;https://lh6.googleusercontent.com/a3JdQ8u_kuXnhxQdcSU-DA_9loRsaNZIeTrfXZwOZ0A=s207-p-no&#34;  /&gt;
    
    
&lt;/figure&gt;

&lt;/p&gt;

&lt;p&gt;会場にはキッチン、ソファ、テーブルサッカー等があり、カジュアルな雰囲気。
オフィスの雰囲気がなさすぎて何度か前を通り過ぎてしまった。&lt;/p&gt;

&lt;p&gt;登録221名に対して、実際の参加者は100名程度だったように見えた。&lt;/p&gt;

&lt;p&gt;ピザもビールも十分あったのでお腹いっぱいになった。
ピザとビールはスポンサーによって提供。ありがとうございます。&lt;br /&gt;
いろいろなビールが用意されており、私は&lt;a href=&#34;http://ja.wikipedia.org/wiki/%E3%83%87%E3%83%AA%E3%83%AA%E3%82%A6%E3%83%A0%E3%83%BB%E3%83%88%E3%83%AC%E3%83%A1%E3%83%B3%E3%82%B9&#34;&gt;Delirium Beer&lt;/a&gt;というのをいただいた。ありがとうございます。&lt;/p&gt;


&lt;figure &gt;
    
        &lt;img src=&#34;https://lh6.googleusercontent.com/-rcr_ovLpHnQ/VCRsYtJDfmI/AAAAAAAAFPU/V0l_-qMjccc/w520-h693-no/_20140922_222017.jpg&#34;  /&gt;
    
    
&lt;/figure&gt;



&lt;p&gt;スライドの位置は少し低めだったので、後ろの席の方々はときどき立ち上がって資料を確認していた。&lt;/p&gt;


&lt;figure &gt;
    
        &lt;img src=&#34;https://lh4.googleusercontent.com/-RYTu2eKjjlo/VCRsYmYDyDI/AAAAAAAAFPU/rzevcRScXfI/w924-h693-no/_20140922_200426.jpg&#34;  /&gt;
    
    
&lt;/figure&gt;



&lt;h2 id=&#34;懇親会&#34;&gt;懇親会&lt;/h2&gt;


&lt;figure &gt;
    
        &lt;img src=&#34;https://lh5.googleusercontent.com/-yRyxQymMeBw/VCRsYsowoAI/AAAAAAAAFPU/sfBL2mvHcwo/w924-h693-no/_20140922_211742.jpg&#34;  /&gt;
    
    
&lt;/figure&gt;



&lt;p&gt;知ってる人がいないので、ピザをいただきつつ&lt;a href=&#34;http://d.hatena.ne.jp/hyoshiok/20130602&#34;&gt;よしおかさんメソッド&lt;/a&gt;で何名かの方に話を聞いた。&lt;/p&gt;

&lt;p&gt;話の中ではDevOpsという単語と共に、Puppet、Chef、Ansibleや&lt;a href=&#34;https://github.com/saltstack/salt&#34;&gt;Salt&lt;/a&gt;の名前があがっていた。あとはDocker。&lt;/p&gt;

&lt;p&gt;また&lt;a href=&#34;https://www.mailjet.com/&#34;&gt;Mailjet&lt;/a&gt;というサービスで働いている方にどの言語でサービスを実装してるか聞いた所、&lt;a href=&#34;http://blog.mailjet.com/post/93317385400/developer-evangelists-faq&#34;&gt;Free Pascalという回答&lt;/a&gt;がきて驚いた。
メールを処理する時にバッファオーバフローが起こらないから安全なので使っている、というようなお話だった。&lt;/p&gt;

&lt;p&gt;ストレージに興味があるなら、&lt;a href=&#34;http://www.meetup.com/Paris-Datageeks/&#34;&gt;Paris DataGeeks&lt;/a&gt;というミートアップがオススメとのこと。&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;英語のミートアップではあったが、フランス語が喋れると活動の幅が広がるだろうなあ、改めて感じた。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Tour de France 2014を見てきた</title>
      <link>http://matsue.github.io/post/2014-08-21-tour-de-france-2014/</link>
      <pubDate>Thu, 21 Aug 2014 22:18:06 +0200</pubDate>
      
      <guid>http://matsue.github.io/post/2014-08-21-tour-de-france-2014/</guid>
      <description>&lt;script type=&#34;text/javascriptimg src=&#34;https://apis.google.com/js/plusone.js&#34;&gt;&lt;/script&gt;

&lt;p&gt;ツール・ド・フランス2014を見てきた。参加してから時間が経ってしまったが、情報が少なくて困ったので次に行く時のためにも記録に残しておく。&lt;/p&gt;


&lt;figure &gt;
    
        &lt;img src=&#34;https://lh5.googleusercontent.com/-ZcLe3k1MgD0/U_ZgOG6vTxI/AAAAAAAADK4/5JIari_rhcM/w955-h716-no/_20140727_133707.jpg&#34;  /&gt;
    
    
&lt;/figure&gt;



&lt;p&gt;&lt;/p&gt;

&lt;h2 id=&#34;会場の様子&#34;&gt;会場の様子&lt;/h2&gt;

&lt;p&gt;2014年は女性のレースと男性のレースが同日に開催されていた。&lt;/p&gt;

&lt;p&gt;男性レース開始時の動画はこちら。空にフランスの国旗色の雲が描かれたあとに選手達がシャンゼリゼ通りに入ってきた。&lt;/p&gt;

&lt;div class=&#34;g-post&#34; data-href=&#34;https://plus.google.com/101994396638119080532/posts/X6N16KfgzJ4&#34;&gt;&lt;/div&gt;

&lt;p&gt;ウェアやお土産が売られている様子。&lt;/p&gt;


&lt;figure &gt;
    
        &lt;img src=&#34;https://lh4.googleusercontent.com/-WWgGwtJzrNE/U_Zpk6Pa67I/AAAAAAAADOU/6b9G59sh9so/w426-h320/_20140727_131511.jpg&#34;  /&gt;
    
    
&lt;/figure&gt;



&lt;p&gt;NetAppがスポンサーになっているレーサーの置物も売っていた。&lt;/p&gt;


&lt;figure &gt;
    
        &lt;img src=&#34;https://lh4.googleusercontent.com/-gPrY3qx7EiY/U_ZpT8DyAnI/AAAAAAAADNw/D-UeaXveLIM/w426-h568/_20140727_165752.jpg&#34;  /&gt;
    
    
&lt;/figure&gt;



&lt;p&gt;レース前は様々な装飾をした宣伝カーが凱旋門の周りを走る。&lt;/p&gt;


&lt;figure &gt;
    
        &lt;img src=&#34;https://lh5.googleusercontent.com/-iLmXUtb1OrA/U_ZpIIzyrLI/AAAAAAAADMo/m4-2lFuRFU0/w426-h568/_20140727_161011.jpg&#34;  /&gt;
    
    
&lt;/figure&gt;



&lt;p&gt;凱旋門付近のスピーカーからは基本的には実況が流れているが、男子レース開始までの待ち時間には以下のような曲も流れていた。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Paris - David Guetta&lt;/li&gt;
&lt;li&gt;Roadgame - Kavinsky&lt;/li&gt;
&lt;li&gt;Wake Me Up - Avicii&lt;/li&gt;
&lt;li&gt;Baby I&amp;rsquo;m Yours - Breakbot Feat. Irfane&lt;/li&gt;
&lt;li&gt;Love Is Gone ［fred Rister &amp;amp; Joachim Garraud Remix］ - David Guetta&lt;/li&gt;
&lt;li&gt;Canned Heat - Jamiroquai&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;時間について&#34;&gt;時間について&lt;/h2&gt;

&lt;p&gt;16時頃から割と混んできていたので、場所取りをするなら早めに。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;女子レース開始: 12:40頃&lt;/li&gt;
&lt;li&gt;女子レース終了: 15:00頃&lt;/li&gt;
&lt;li&gt;男子レース開始: 18:00頃にシャンゼリゼに到着&lt;/li&gt;
&lt;li&gt;男子レース終了: 19:15頃&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;シャンゼリゼ付近の地図情報&#34;&gt;シャンゼリゼ付近の地図情報&lt;/h2&gt;

&lt;p&gt;レースは基本的にシャンゼリゼ通り付近がメインだが、スタート地点や駅の位置、封鎖されているエリアを載せたマップを作った。&lt;br /&gt;
今回はセーヌ川沿いを歩いて会場に向かったが、封鎖エリアがあったりするので、メトロを使ってFranklin D. RooseveltまたはGeorge Vから行くのが楽だったと思う。&lt;/p&gt;

&lt;iframe src=&#34;https://mapsengine.google.com/map/u/0/embed?mid=zP_xMsmJueyc.khXDW790OfM4&#34; width=&#34;640&#34; height=&#34;480&#34;&gt;&lt;/iframe&gt;

&lt;h2 id=&#34;気をつけること&#34;&gt;気をつけること&lt;/h2&gt;

&lt;h3 id=&#34;南北間の移動が難しい&#34;&gt;南北間の移動が難しい&lt;/h3&gt;

&lt;p&gt;レース当日、シャンゼリゼ通り付近の道路は大量の警察官によって封鎖されている。
特にレースの中心となるシャンゼリゼ通りの南北間を移動出来る場所は限られていて、メトロの駅(Franklin D. RooseveltまたはGeorge V)を通過するか、凱旋門をぐるっと回るしかない。&lt;/p&gt;

&lt;p&gt;人員を総動員していると思われるが、他の場所の治安は大丈夫なのだろうか。&lt;/p&gt;


&lt;figure &gt;
    
        &lt;img src=&#34;https://lh4.googleusercontent.com/-f1bWdTvHUWY/U_ZpNkFjEzI/AAAAAAAADNA/6j88f6w_eC0/w426-h320/_20140727_153611.jpg&#34;  /&gt;
    
    
&lt;/figure&gt;



&lt;h3 id=&#34;運行してないメトロの駅があるかも&#34;&gt;運行してないメトロの駅があるかも&lt;/h3&gt;

&lt;p&gt;今年はChâteletの駅が工事中で電車が停止しなかった。
凱旋門付近は1番線が通っているのだが、Châteletの駅は1番線に他の4本の線から乗り換えできる大きい駅だ。
ここが使えなかったため、割と歩くことになってしまった。&lt;/p&gt;

&lt;p&gt;駅の工事は夏のバカンスの時期に合わせてやることが多いと聞いたので、7月開催のツール・ド・フランスの場合、他の年度でも注意した方がいいかもしれない。&lt;/p&gt;

&lt;h3 id=&#34;トイレが混んでいる&#34;&gt;トイレが混んでいる&lt;/h3&gt;

&lt;p&gt;パリには所々に公衆トイレが設置されているが、イベント当日はかなり並んでいたので注意。

&lt;figure &gt;
    
        &lt;img src=&#34;https://lh4.googleusercontent.com/-TwHRUVJjVJE/U_ZjpAbx1EI/AAAAAAAADLg/Q_LsyXYKXUc/w426-h320/_20140727_171736.jpg&#34;  /&gt;
    
    
&lt;/figure&gt;

&lt;/p&gt;

&lt;h2 id=&#34;参考にした情報&#34;&gt;参考にした情報&lt;/h2&gt;

&lt;p&gt;こちらのパリナビの2011年の記事が参考になった。
&lt;a href=&#34;http://paris.navi.com/special/5036009&#34;&gt;http://paris.navi.com/special/5036009&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;ネット上ではツール・ド・フランスとはなにか？という情報は見つかるが、時間や開催エリアの情報は日本語だとほとんど見つからなかった。
日本語でパリの情報を探すと、大抵パリナビの情報に辿り着く。お世話になってます。&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;もし参加するときはピクニック気分で椅子やご飯を持って、ゆったりとした気持ちで気長に参加するのが良いと思う。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Paris.rbに参加した</title>
      <link>http://matsue.github.io/post/2014-08-06-paris-dot-rb/</link>
      <pubDate>Wed, 06 Aug 2014 00:21:32 +0200</pubDate>
      
      <guid>http://matsue.github.io/post/2014-08-06-paris-dot-rb/</guid>
      <description>&lt;p&gt;7月より期間限定でパリにて勤務しており、せっかくの機会なのでParis.rbに参加してみた。
今回、Meetup経由で申し込みをして参加した。
&lt;a href=&#34;http://www.meetup.com/parisrb/events/146763542/&#34;&gt;http://www.meetup.com/parisrb/events/146763542/&lt;/a&gt;&lt;/p&gt;


&lt;figure &gt;
    
        &lt;img src=&#34;https://lh3.googleusercontent.com/-XVtwd3k_TpI/U-FKfo99LFI/AAAAAAAACK8/1mtcslNTBTU/w955-h716-no/_20140805_211811.jpg&#34;  /&gt;
    
    
&lt;/figure&gt;



&lt;p&gt;&lt;/p&gt;

&lt;p&gt;19時半開始と書かれていたが最初の時間はピザ&amp;amp;ビールの時間だった。話してくれる方を見つけてSwiftのOptional型の話などしているうちに21時からセッションタイムへ。&lt;br /&gt;
ちなみにパリは今22時頃まで外が明るい。&lt;/p&gt;


&lt;figure &gt;
    
        &lt;img src=&#34;https://lh5.googleusercontent.com/-q7MQs9RJEbs/U-FKVwF0SUI/AAAAAAAACKk/n69VDfjy_nI/w955-h716-no/_20140805_202552.jpg&#34;  /&gt;
    
    
&lt;/figure&gt;



&lt;p&gt;セッションは23時ごろまで開催していたと思われる。発表としては&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://aircall.io/&#34;&gt;AirCall&lt;/a&gt;の話(採用？)&lt;/li&gt;
&lt;li&gt;アジャイルの話&lt;/li&gt;
&lt;li&gt;RioでのRubyの話&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;などなどがあった。当然ながらほとんどがフランス語の資料であったり、字の少ない資料でのプレゼンだったので現状のフランス語力では理解が難しかった。残念。&lt;/p&gt;

&lt;p&gt;かろうじて資料が英語だったRails Tipsの内容のメモは以下。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;skip_before_actionはなるべく避ける&lt;/li&gt;
&lt;li&gt;Respondersを使う&lt;/li&gt;
&lt;li&gt;less redirect_to more respond_with&lt;/li&gt;
&lt;li&gt;less instance variables&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/voxdolo/decent_exposure&#34;&gt;decent_exposure&lt;/a&gt; gem&lt;/li&gt;
&lt;li&gt;before_actionはリダイレクトや認証処理だけに使うようにしている&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/mattt/sinatra-param&#34;&gt;sinatra-param&lt;/a&gt; gemでvalidation&lt;/li&gt;
&lt;li&gt;rails-param gemの紹介&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;感想としては、どのセッションも詳細は分からなかったが、扱っているテーマと日本と大きく異なっていないような印象をうけた。&lt;br /&gt;
それと話が始まってからはラップトップや携帯を触る人は少なく、熱心に話を聞いている人が多いのが印象的だった。&lt;br /&gt;
あと、先に懇親会があって、セッションが21時スタートというのは日本ではあまりない気がする。&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;追記&#34;&gt;追記&lt;/h2&gt;

&lt;p&gt;運営周りについて簡単に追記。&lt;/p&gt;

&lt;p&gt;置かれていたピザとビールはスポンサーがついていたようで、参加者はお金を払っていない。ただ、開始から1時間たたないうちにほぼ無くなっていたので食べ損ねてしまった。&lt;/p&gt;

&lt;p&gt;参加者は80名程度程で登録は120名ほどあったかと思う。思った以上に人が多かったため、はじめはキャンセル待ちだったが最終的には参加することができた。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Erlang User Conference 2014 に参加した</title>
      <link>http://matsue.github.io/post/2014-06-12-euc2014/</link>
      <pubDate>Thu, 12 Jun 2014 14:09:40 +0900</pubDate>
      
      <guid>http://matsue.github.io/post/2014-06-12-euc2014/</guid>
      <description>&lt;p&gt;ストックホルムで開催された&lt;a href=&#34;http://www.erlang-factory.com/euc2014&#34;&gt;Erlang User Conference 2014&lt;/a&gt;に参加した。&lt;/p&gt;


&lt;figure &gt;
    
        &lt;img src=&#34;http://matsue.github.io/images/2014-06-12-euc2014/euc2014_sponsors.jpg&#34; alt=&#34;euc2014_sponsors&#34; /&gt;
    
    
    &lt;figcaption&gt;
        &lt;p&gt;
        The flag of sponsors ato Erlang User Conference 2014
        
            
        
        &lt;/p&gt; 
    &lt;/figcaption&gt;
    
&lt;/figure&gt;



&lt;p&gt;大変有難いことに&lt;a href=&#34;http://www.erlang-factory.com/euc2014/yosuke-hara&#34;&gt;LeoFSのセッション&lt;/a&gt;の一部で、7分ほど登壇させていただいた。&lt;/p&gt;

&lt;iframe src=&#34;http://www.slideshare.net/slideshow/embed_code/35673208&#34; width=&#34;427&#34; height=&#34;356&#34; frameborder=&#34;0&#34; marginwidth=&#34;0&#34; marginheight=&#34;0&#34; scrolling=&#34;no&#34; style=&#34;border:1px solid #CCC; border-width:1px 1px 0; margin-bottom:5px; max-width: 100%;&#34; allowfullscreen&gt; &lt;/iframe&gt;

&lt;p&gt;&lt;/p&gt;

&lt;div class=&#34;embed-video-container&#34;&gt;
  &lt;iframe src=&#34;https://player.vimeo.com/video/104514109#t=1658s?autoplay=0&amp;title=0&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;p&gt;私が話したのは主にLeoFSのユースケースで、&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;現時点で600TB程度のディスク総量でクラスタを組んでいる

&lt;ul&gt;
&lt;li&gt;データセンター間のレプリケーション機能を使っていきたい&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;社内のファイル共有にownCloudをLeoFSと組み合わせて使っている

&lt;ul&gt;
&lt;li&gt;各国のグループ会社との動画の共有などに使われている&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;というようなことを紹介した。&lt;br /&gt;
私たちのセッションには30名ほどの方が聞きにきてくれていたかと思う。&lt;/p&gt;

&lt;h2 id=&#34;day1&#34;&gt;Day1&lt;/h2&gt;

&lt;p&gt;初日は以下のセッションに参加した。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Welcome to the Erlang User Conference!&lt;/li&gt;
&lt;li&gt;Keynote: Composing a Functional Community (Katie Miller)&lt;/li&gt;
&lt;li&gt;Scaling and High Performance Storage System: LeoFS (Yosuke Hara) =&amp;gt; 発表&lt;/li&gt;
&lt;li&gt;The Last REST Client You Will Ever Need (Loïc Hoguin)&lt;/li&gt;
&lt;li&gt;Concuerror: Into Real Code (Stavros Aronis)&lt;/li&gt;
&lt;li&gt;Building a Distributed Data Ingestion System with RabbitMQ (Alvaro Videla)&lt;/li&gt;
&lt;li&gt;Building a Cloud with Erlang and SmartOS - How Hard Could it Possibly Be? (Heinz Gies)&lt;/li&gt;
&lt;li&gt;Locks - Erlang-style Scalable Distributed Locking (Ulf Wiger)&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&#34;composing-a-functional-community&#34;&gt;Composing a Functional Community&lt;/h3&gt;

&lt;p&gt;初日のキーノートは&lt;a href=&#34;http://www.lambdaladies.com/&#34;&gt;Lambda Ladies&lt;/a&gt;という関数型言語の女性コミュニティから、Katieさんによる発表。&lt;/p&gt;

&lt;p&gt;FP(Functional Programming)コミュニティの発展には以下が必要というお話でした。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Education ビギナー向けの教育&lt;/li&gt;
&lt;li&gt;Safe space ハラスメント対策とか&lt;/li&gt;
&lt;li&gt;Mentoring 励ます メンティーはメンターになっていく&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;今のテックスペースやコミュニティはデフォルトで男性向けである話や、実際に女性達が感じていることが紹介されていて、ほとんど男性で埋まっていた会場に対してパンチの効いた発表。&lt;br /&gt;
&lt;a href=&#34;http://www.codemiller.com/blog/2013/07/06/functional-frock-a-dress-fit-for-a-lambda-lady/&#34;&gt;Haskellによる6つのソートアルゴリズムがプリントされたギークドレス&lt;/a&gt;も印象的でした。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;発表者プロフィール: &lt;a href=&#34;http://www.erlang-factory.com/euc2014/katie-miller&#34;&gt;http://www.erlang-factory.com/euc2014/katie-miller&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;スライド: &lt;a href=&#34;http://community.codemiller.com/#/&#34;&gt;http://community.codemiller.com/#/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;the-last-rest-client-you-will-ever-need&#34;&gt;The Last REST Client You Will Ever Need&lt;/h3&gt;

&lt;p&gt;webサーバの&lt;a href=&#34;https://github.com/extend/cowboy&#34;&gt;cowboy&lt;/a&gt;の開発者であるLoicさんによる発表。&lt;/p&gt;

&lt;p&gt;REST APIに使うMedia TypeにJSON、Msgpack、HTML、XMLに代わってBEDというのを考えてるよ、という話。&lt;br /&gt;
Media Typeは独自の定義が使えるので、以下のようなタイプを提唱していた。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;application/x-bed&lt;/li&gt;
&lt;li&gt;application/x-bed-stream&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;バイト数は短く、圧縮もなしで、relationも定義できて・・というようなものを目指しているよう。&lt;br /&gt;
現時点では構想の段階でレポジトリはないが、プロジェクトは作成されている。
&lt;a href=&#34;https://github.com/bed-project&#34;&gt;https://github.com/bed-project&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;ヘルプ絶賛募集中とのことなので、BEDが気になった方はLoicさんにコンタクトをとるといいと思う。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;発表者プロフィール: &lt;a href=&#34;http://www.erlang-factory.com/euc2014/loc-hoguin&#34;&gt;http://www.erlang-factory.com/euc2014/loc-hoguin&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;スライド: &lt;a href=&#34;http://ninenines.eu/talks/bed/bed.html&#34;&gt;http://ninenines.eu/talks/bed/bed.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;building-a-distributed-data-ingestion-system-with-rabbitmq&#34;&gt;Building a Distributed Data Ingestion System with RabbitMQ&lt;/h3&gt;

&lt;p&gt;&amp;ldquo;RabbitMQ in Action&amp;rdquo;の著者のAlvaroさんによるRabbitMQのデザインパターン紹介。&lt;/p&gt;

&lt;p&gt;複数のDC間でのログ集めにRabbitMQを使ってるらしい。&lt;br /&gt;
スケールしていくには&lt;a href=&#34;http://www.rabbitmq.com/federation.html&#34;&gt;Federation Plugin&lt;/a&gt;を使うといいよという内容。&lt;br /&gt;
性能が必要だが、メッセージのロスが許されるような場合はno-ackモードという選択肢もあるとのこと。&lt;/p&gt;

&lt;p&gt;以下のデモページでメッセージが分配される様子を紹介しながらの発表だった。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;デモ実行ページ: &lt;a href=&#34;http://tryrabbitmq.com/&#34;&gt;http://tryrabbitmq.com/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;デモのソース: &lt;a href=&#34;https://github.com/RabbitMQSimulator/RabbitMQSimulator&#34;&gt;https://github.com/RabbitMQSimulator/RabbitMQSimulator&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;各workerにメッセージが分散される様子を見れるデモページは、ついついポチポチ押したくなってしまう。&lt;br /&gt;
正規表現を使ってのメッセージの内容に応じたルーティングもできる模様。&lt;/p&gt;

&lt;p&gt;Fedarationを使った分散の例は以下のリンクでもJavaのコードを交えて紹介されているようだ。
&lt;a href=&#34;http://jaxenter.com/distributed-log-aggregation-with-rabbitmq-federation-49154.html&#34;&gt;http://jaxenter.com/distributed-log-aggregation-with-rabbitmq-federation-49154.html&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;発表者プロフィール: &lt;a href=&#34;http://www.erlang-factory.com/euc2014/alvaro-videla&#34;&gt;http://www.erlang-factory.com/euc2014/alvaro-videla&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;スライド: &lt;a href=&#34;http://www.erlang-factory.com/static/upload/media/1402395255933144rabbitmq_data_ingestion_euc.pdf&#34;&gt;http://www.erlang-factory.com/static/upload/media/1402395255933144rabbitmq_data_ingestion_euc.pdf&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;day2&#34;&gt;Day2&lt;/h2&gt;

&lt;p&gt;二日目に参加したセッションはこちら。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Welcome to the 2nd Day of the EUC!&lt;/li&gt;
&lt;li&gt;Keynote: Erlang, Open Networking, and the Future of Computing (Stuart Bailey)&lt;/li&gt;
&lt;li&gt;Powering your Web and Mobile Applications (Jordan Wilberding)&lt;/li&gt;
&lt;li&gt;Monitoring Erlang Systems with WombatOAM (Richard Jonas)&lt;/li&gt;
&lt;li&gt;Scaling Erlang on 10K or More Cores: An Overview of the RELEASE Project (Simon Thompson)&lt;/li&gt;
&lt;li&gt;Real-Time Performance at Massive Scale (Francois Orsini)&lt;/li&gt;
&lt;li&gt;Where Shall I Parallelize? (Tamás Kozsik)&lt;/li&gt;
&lt;li&gt;Elixir Tooling: Exploring Beyond the Language (Eric Meadows-Jönsson)&lt;/li&gt;
&lt;li&gt;Latest News from the OTP Team - Kenneth Lundin&lt;/li&gt;
&lt;li&gt;Announcement of the Erlang User of the Year &amp;amp; the Most Influential Talk of 1999&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&#34;elixir-tooling-exploring-beyond-the-language&#34;&gt;Elixir Tooling: Exploring Beyond the Language&lt;/h3&gt;

&lt;p&gt;ElixirコミッターのEricさんによる発表。&lt;/p&gt;

&lt;p&gt;はじめにElixirの今年のニュースとして以下の３つを挙げていた。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;version1.0がリリース予定&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://elixirconf.com/&#34;&gt;ElixirConf&lt;/a&gt;が開催予定&lt;/li&gt;
&lt;li&gt;パッケージマネージャの&lt;a href=&#34;https://hex.pm/&#34;&gt;Hex&lt;/a&gt;がリリースされた&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;mix&#34;&gt;Mix&lt;/h4&gt;

&lt;p&gt;Mixというのはプロジェクト作成、コンパイル、テスト、などなどをサポートしてくれるツール。
ErlangのrebarやRubyでのrakeやbundleに似たことをしてくれる模様。&lt;/p&gt;

&lt;p&gt;以下のツールを入れると、Mixのコマンドが拡張されるようだ。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;ecto &lt;a href=&#34;https://github.com/elixir-lang/ecto&#34;&gt;https://github.com/elixir-lang/ecto&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;exrm &lt;a href=&#34;https://github.com/bitwalker/exrm&#34;&gt;https://github.com/bitwalker/exrm&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;ectoはDBのラッパーや管理を提供し、exrmはリリースをサポートしてくれる模様。&lt;/p&gt;

&lt;h4 id=&#34;hex&#34;&gt;Hex&lt;/h4&gt;

&lt;p&gt;Elixirのパッケージマネージャで最近リリースされたばかりのようだ。&lt;br /&gt;
パッケージはS3でホスティングされてるとのこと。&lt;/p&gt;

&lt;h4 id=&#34;iex&#34;&gt;IEx&lt;/h4&gt;

&lt;p&gt;Erlangでいうところのerl, Rubyでいうところのirbにあたる、Elixirの実行ターミナル。&lt;/p&gt;

&lt;p&gt;IEx.pryを書いておくと実行中のコードの途中でiexに入ってデバッグできるらしい。pryにインスパイアされたものだそうだ。&lt;/p&gt;

&lt;p&gt;iexシェルの中では&lt;code&gt;h Enum.map/2&lt;/code&gt;とかするとヘルプも見えるとのこと。&lt;/p&gt;

&lt;h4 id=&#34;exunit&#34;&gt;ExUnit&lt;/h4&gt;

&lt;p&gt;tagsやfilter機能を使うと環境毎にテストを分けたり、特定ケースだけ実行することができるようだ。&lt;/p&gt;

&lt;p&gt;またElixirではdoctestも提供されているとのこと。この形式で書かれたコメントは、後でドキュメントとして生成されるだけでなく、書かれているコードはテストとしての実行もしてくれる。&lt;/p&gt;

&lt;h4 id=&#34;standard-library&#34;&gt;Standard library&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://elixir-lang.org/docs/stable/elixir/Stream.html&#34;&gt;Stream&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;再帰的にファイルの各行に処理するコードが、eachにブロック渡すだけのコードにできる。&lt;/li&gt;
&lt;li&gt;遅延評価されるので必要になったときだけ実際にファイルをオープンしてる。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://elixir-lang.org/docs/stable/elixir/Agent.html&#34;&gt;Agent&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;OTPを抽象化してくれるライブラリ&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://elixir-lang.org/docs/stable/elixir/Task.html&#34;&gt;Task&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;非同期に処理をするために使うライブラリ&lt;/li&gt;
&lt;li&gt;Task.asyncでタスクを作って、Task.awaitで待つ、というような使い方。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;発表者プロフィール: &lt;a href=&#34;http://www.erlang-factory.com/euc2014/eric-meadowsjnsson&#34;&gt;http://www.erlang-factory.com/euc2014/eric-meadowsjnsson&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;スライド: &lt;a href=&#34;http://www.erlang-factory.com/static/upload/media/1402598794815412elixirtooling.pdf&#34;&gt;http://www.erlang-factory.com/static/upload/media/1402598794815412elixirtooling.pdf&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;latest-news-from-the-otp-team&#34;&gt;Latest News from the OTP Team&lt;/h3&gt;

&lt;p&gt;OTPチームからの17系以降の変更点の紹介。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;新しいデータ型のMaps&lt;/li&gt;
&lt;li&gt;binary周りで発生していた、スレッドにおけるブロックが減る&lt;/li&gt;
&lt;li&gt;ライセンスがEPL(Erlang Public License)からApache License Version 2.0に代わる&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;ライセンスに関しては以前、Mozilla Public Licenseへの移行も検討されていたようだ。
ライセンス変更にあたり、コミッターの方々にはメールで同意を求めるので&amp;rdquo;Yes&amp;rdquo;という準備しておいてね！というようなことを言っていた。&lt;/p&gt;

&lt;h2 id=&#34;day3&#34;&gt;Day3&lt;/h2&gt;

&lt;p&gt;最終日は以下のチュートリアルに参加した。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Introduction to Load Testing with Tsung (Radosław Szymczyszyn)&lt;/li&gt;
&lt;li&gt;Erlang in Production - Tricks and Tools for Running Erlang Production Systems (Jesper Louis Andersen)&lt;/li&gt;
&lt;li&gt;Load Testing Made Easy (Diana Corbacho)&lt;/li&gt;
&lt;li&gt;Deploying and Monitoring Erlang Nodes in the Cloud (Csaba Hoch)&lt;/li&gt;
&lt;/ol&gt;


&lt;figure &gt;
    
        &lt;img src=&#34;http://matsue.github.io/images/2014-06-12-euc2014/euc2014_ericsson.jpg&#34; alt=&#34;euc2014_ericsson&#34; /&gt;
    
    
    &lt;figcaption&gt;
        &lt;p&gt;
        Ericsson Group headquarters
        
            
        
        &lt;/p&gt; 
    &lt;/figcaption&gt;
    
&lt;/figure&gt;



&lt;p&gt;WombatOAMやMegaloadといったErlang監視ツール、ロードテストサポートツールにも実際に触れることができたがこちらはOSSではないようだ。&lt;/p&gt;

&lt;h3 id=&#34;introduction-to-load-testing-with-tsung&#34;&gt;Introduction to Load Testing with Tsung&lt;/h3&gt;

&lt;p&gt;ロードテストツールであるTsungの紹介。こちら、Erlang製のJMeterのようなもの。&lt;/p&gt;

&lt;p&gt;チュートリアルは以下の資料に従い、Vagrantで構築された複数VMを使って行われた。Tsungの資料はあまりないと思われるので貴重だ。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/lavrin/euc-2014&#34;&gt;https://github.com/lavrin/euc-2014&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/lavrin/tsung-scenarios&#34;&gt;https://github.com/lavrin/tsung-scenarios&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Tsungに関するメモ。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;指定されたユーザ数でランダムなアクセスをシミュレーションできる

&lt;ul&gt;
&lt;li&gt;XMPP、TCP、HTTPなどのロードテストができる&lt;/li&gt;
&lt;li&gt;ログインパスワード指定できる&lt;/li&gt;
&lt;li&gt;ユーザによってはログインしかしないとかシミュレーションできる&lt;/li&gt;
&lt;li&gt;パスにIDとかいれてリクエスト生成してくれる&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;今回のサンプルでdurationが14400 minutesなのは十分に大きくするため&lt;/li&gt;
&lt;li&gt;ディレクトリ構成やログインユーザ、elrangのcookieなど環境揃っている必要があるが、複数のノードからtsungの実行もできるらしい&lt;/li&gt;
&lt;li&gt;テストの結果はtsplotとかでグラフにできるらしい&lt;/li&gt;
&lt;li&gt;テスト時に、&lt;code&gt;ulimit -n&lt;/code&gt;の上限に引っかかる可能性あるので注意しておく&lt;/li&gt;
&lt;li&gt;クラスタでやるときはtsung-controllerというのもあるらしいが、使用には注意らしい(SPOF?)&lt;/li&gt;
&lt;li&gt;dumptrafficというオプションをオンにすると、大量のログがでるので注意&lt;/li&gt;

&lt;li&gt;&lt;p&gt;JMeterと違ってErlangなので、テスト時にはerlangのメソッドを直接呼ぶようなテストもできるらしい&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;発表者プロフィール: &lt;a href=&#34;http://www.erlang-factory.com/euc2014/radosaw-szymczyszyn&#34;&gt;http://www.erlang-factory.com/euc2014/radosaw-szymczyszyn&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;erlang-in-production&#34;&gt;Erlang in Production&lt;/h3&gt;

&lt;p&gt;運用者が朝まで寝ていられるシステムをつくるにはどうすればいいかという話。&lt;/p&gt;

&lt;p&gt;まず、システムはいつ壊れるのかという話を&amp;rdquo;How Complex Systems Fail&amp;rdquo;というRichard Cookさんの資料を引用しつつ紹介。
たぶん元の資料は&lt;a href=&#34;http://www.ctlab.org/documents/How%20Complex%20Systems%20Fail.pdf&#34;&gt;こちら&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;紹介されていたライブラリの一部。
- &lt;a href=&#34;https://github.com/feuerlabs/exometer&#34;&gt;https://github.com/feuerlabs/exometer&lt;/a&gt;&lt;br /&gt;
- &lt;a href=&#34;https://github.com/klarna/circuit_breaker&#34;&gt;https://github.com/klarna/circuit_breaker&lt;/a&gt;
- &lt;a href=&#34;https://github.com/basho/sidejob&#34;&gt;https://github.com/basho/sidejob&lt;/a&gt;
- &lt;a href=&#34;https://github.com/uwiger/jobs&#34;&gt;https://github.com/uwiger/jobs&lt;/a&gt;
- &lt;a href=&#34;https://github.com/massemanet/eper&#34;&gt;https://github.com/massemanet/eper&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;上記のライブラリは、Erlangプロセスの情報を収集したり、ジョブスケジューリングをしてくれるもののようだ。&lt;/p&gt;

&lt;p&gt;以降は、使ってるライブラリや設定の話。&lt;/p&gt;

&lt;h4 id=&#34;sys-configについて&#34;&gt;sys.configについて&lt;/h4&gt;

&lt;p&gt;&lt;code&gt;erl -man config&lt;/code&gt;でも確認できるがconfigは、他のファイルも読めるので環境ごとのファイルを置いておくようにするといいらしい。&lt;/p&gt;

&lt;h4 id=&#34;lager&#34;&gt;Lager&lt;/h4&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/basho/lager&#34;&gt;https://github.com/basho/lager&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;logライブラリにはlagerを使って、どこかに集めている。
&lt;a href=&#34;https://github.com/boundary/folsom&#34;&gt;folsom&lt;/a&gt;のデータ飛ばしてるらしい。&lt;/p&gt;

&lt;h4 id=&#34;alarm-handler&#34;&gt;alarm_handler&lt;/h4&gt;

&lt;p&gt;SASLの一部。アラートは自分で定義できて、Nagiosサーバにもデータ飛ばすこともできる。
アラームがオフになる時(?)にlagerに流し込むとかもできる。&lt;/p&gt;

&lt;p&gt;Nagiosと組み合わせる際は、ファイル書き出されたステータスをNagiosが定期的に確認するようにしていたらしい。&lt;/p&gt;

&lt;h4 id=&#34;os-mon&#34;&gt;os_mon&lt;/h4&gt;

&lt;p&gt;&lt;a href=&#34;http://erlang.org/doc/man/os_mon_app.html&#34;&gt;http://erlang.org/doc/man/os_mon_app.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;cpu usageみたりもできる。mem_supでメモリ使い過ぎ検知もできる。&lt;/p&gt;

&lt;h4 id=&#34;fuse&#34;&gt;fuse&lt;/h4&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/jlouis/fuse&#34;&gt;https://github.com/jlouis/fuse&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;マウントに使うfuseとは別のErlangライブラリ。&lt;br /&gt;
たとえばmysql落ちた時にほかのノードの処理をキックするのに使う。&lt;/p&gt;

&lt;h4 id=&#34;folsom&#34;&gt;Folsom&lt;/h4&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/boundary/folsom&#34;&gt;https://github.com/boundary/folsom&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;メトリクスのライブラリ。&lt;/p&gt;

&lt;p&gt;データ転送にはUDP使ってる、リモートが落ちてたり遅いことに影響されないように。&lt;br /&gt;
counters, gauges, spirals, histogramsなどのグラフが用意されている。&lt;br /&gt;
グラフを見るに当たっての注意点としては、平均を見るのは危険。低い方と高い方に値が固まっているかもしれないので。なので、95th、99thパーセンタイルの情報をみるべき。&lt;/p&gt;

&lt;h4 id=&#34;なにを集計する&#34;&gt;なにを集計する？&lt;/h4&gt;

&lt;p&gt;取れるものすべてを集計してる。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;query times&lt;/li&gt;
&lt;li&gt;internal heavy weight processing&lt;/li&gt;
&lt;li&gt;API endpoints&lt;/li&gt;
&lt;li&gt;every cascading subsystem&lt;/li&gt;
&lt;li&gt;cache hit/miss, あとDBたたいた時にどうだったのか&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;tracing-recon&#34;&gt;Tracing / Recon&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://ferd.github.io/recon/&#34;&gt;http://ferd.github.io/recon/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/ferd/recon&#34;&gt;https://github.com/ferd/recon&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;reconは各pidが何を実行しているかわかるようにしてくれるらしい。
recon_traceでオンラインtracingもできるらしい。&lt;/p&gt;

&lt;h2 id=&#34;会場の写真&#34;&gt;会場の写真&lt;/h2&gt;

&lt;p&gt;カンファレンス会場に使われた建物。

&lt;figure &gt;
    
        &lt;img src=&#34;http://matsue.github.io/images/2014-06-12-euc2014/euc2014_venue.jpg&#34; alt=&#34;euc2014_venue&#34; /&gt;
    
    
    &lt;figcaption&gt;
        &lt;p&gt;
        The venue of EUC2014
        
            
        
        &lt;/p&gt; 
    &lt;/figcaption&gt;
    
&lt;/figure&gt;

&lt;/p&gt;

&lt;p&gt;カンファレンス会場では何故かファミコンが置かれていて、グラディウスやボンバーマンをプレイされていた。コナミコマンドは使っていないようだ。

&lt;figure &gt;
    
        &lt;img src=&#34;http://matsue.github.io/images/2014-06-12-euc2014/euc2014_game.jpg&#34; alt=&#34;euc2014_game&#34; /&gt;
    
    
    &lt;figcaption&gt;
        &lt;p&gt;
        Game space at EUC2014
        
            
        
        &lt;/p&gt; 
    &lt;/figcaption&gt;
    
&lt;/figure&gt;

&lt;/p&gt;

&lt;p&gt;カンファレンス会場でのランチの様子。

&lt;figure &gt;
    
        &lt;img src=&#34;http://matsue.github.io/images/2014-06-12-euc2014/euc2014_lunch.jpg&#34; alt=&#34;euc2014_lunch&#34; /&gt;
    
    
    &lt;figcaption&gt;
        &lt;p&gt;
        Lunch time at EUC2014
        
            
        
        &lt;/p&gt; 
    &lt;/figcaption&gt;
    
&lt;/figure&gt;

&lt;/p&gt;

&lt;p&gt;チュートリアルで使われたEricssonの一室。

&lt;figure &gt;
    
        &lt;img src=&#34;http://matsue.github.io/images/2014-06-12-euc2014/euc2014_tutorial_room.jpg&#34; alt=&#34;euc2014_tutorial_room&#34; /&gt;
    
    
    &lt;figcaption&gt;
        &lt;p&gt;
        Tutorial room at Ericsson
        
            
        
        &lt;/p&gt; 
    &lt;/figcaption&gt;
    
&lt;/figure&gt;

&lt;/p&gt;

&lt;p&gt;Ericssonでのランチ。スウェーデンではサンドイッチの出る場面が多い。

&lt;figure &gt;
    
        &lt;img src=&#34;http://matsue.github.io/images/2014-06-12-euc2014/euc2014_tutorial_lunch.jpg&#34; alt=&#34;euc2014_tutorial_lunch&#34; /&gt;
    
    
    &lt;figcaption&gt;
        &lt;p&gt;
        Lunch time at Ericsson
        
            
        
        &lt;/p&gt; 
    &lt;/figcaption&gt;
    
&lt;/figure&gt;

&lt;/p&gt;

&lt;h2 id=&#34;おわりに&#34;&gt;おわりに&lt;/h2&gt;

&lt;p&gt;EUCに参加するのは二度目で、前回は&lt;a href=&#34;http://www.erlang-factory.com/conference/ErlangUserConference2012&#34;&gt;2012年のEUC&lt;/a&gt;に参加していた。&lt;/p&gt;

&lt;p&gt;以前は日に何度かあるコーヒブレイクの45分が非常に長く感じられたのだが、今回は会場で知り合った方と話せたこともあってか、あっという間に感じられた。&lt;br /&gt;
英語への敷居が前よりも下がったのかもしれない。&lt;a href=&#34;http://d.hatena.ne.jp/hyoshiok/20130602&#34;&gt;コーヒーを取るタイミング&lt;/a&gt;で、目が合ったら&amp;rdquo;hi&amp;rdquo;と言ってみたりもした。&lt;br /&gt;
わずかだがJoe Armstrongさんとも話せて嬉しい限りだ。&lt;/p&gt;

&lt;p&gt;また、あまり前回は意識していなかったが、発表者はみんな英語が母国語とは限らない。&lt;br /&gt;
よく聞いていると、言いたいことが出てこなかったり、発音を気にして言い直したりしている。&lt;br /&gt;
ヨーロッパの各地から来ている人がいるので、イントネーションも様々だった。&lt;br /&gt;
英語での発表には、多少の不自由を感じながらもみんなやっているのかもしれない。&lt;/p&gt;

&lt;p&gt;最後に、今回の発表・参加にあたってレビューや調整をしてくれた皆様に感謝します。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>第21回 AWS User Group - Japan 東京勉強会に参加しました</title>
      <link>http://matsue.github.io/post/2014-05-21-jaws-ug-tokyo-21th-20140521/</link>
      <pubDate>Wed, 21 May 2014 00:12:13 +0900</pubDate>
      
      <guid>http://matsue.github.io/post/2014-05-21-jaws-ug-tokyo-21th-20140521/</guid>
      <description>&lt;p&gt;AWSのユーザイベントということで、naoyaさんの自動化の話から始まりました。このセッションが一番印象に残りました。&lt;br /&gt;
コード化された運用は形式知化である。そして手順であれコードであれ、「なんでそうしてるのか？」ということも共有されないといけない。なるほど、なるほど。&lt;br /&gt;
紹介されていたQiita teamは使ったことないけれど、Markdownで書けて、気軽に投稿して、検索可能な情報共有の場があると、たしかに良さそうです。&lt;/p&gt;

&lt;p&gt;以下、イベント参加時のメモです。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;イベント関連link&#34;&gt;イベント関連link&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;イベントページ: &lt;a href=&#34;http://jawsug-tokyo.doorkeeper.jp/events/11269&#34;&gt;http://jawsug-tokyo.doorkeeper.jp/events/11269&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Twitter: &lt;a href=&#34;https://twitter.com/search?q=%23jawsug&#34;&gt;https://twitter.com/search?q=%23jawsug&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;伊藤-直也さん&#34;&gt;伊藤 直也さん&lt;/h2&gt;

&lt;p&gt;資料: &lt;a href=&#34;https://speakerdeck.com/naoya/sukerusurukai-fa-zu-zhi-falsezuo-rifang-number-jawsug&#34;&gt;https://speakerdeck.com/naoya/sukerusurukai-fa-zu-zhi-falsezuo-rifang-number-jawsug&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;手作業はなぜダメなのか&#34;&gt;手作業はなぜダメなのか&lt;/h3&gt;

&lt;p&gt;暗黙知になる = 言語化されてないノウハウ&lt;br /&gt;
ログ何処にあるか、サーバ止めていいかわからない&lt;/p&gt;

&lt;p&gt;しっかり手順書？いいえ、infrastracture as a code&lt;br /&gt;
コードにするだけでいい？いいえ&lt;/p&gt;

&lt;p&gt;コードにすると&amp;hellip;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;オブジェクト指向になる。&lt;/li&gt;

&lt;li&gt;&lt;p&gt;アプリケーション開発の文脈で使える、業務フローが変わる&lt;br /&gt;
フローとはgithubでpull requestとか&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;べきとうである&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;変更が可視化される&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;たとえばnginxの設定を変えたとか&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;pull requestないと普段だれも見てない&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;2時間が10分はそれほど重要ではない&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;属人化して不明なことを減らす&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;わからないことには保守的になる。不透明な課金部分とか触れない。&lt;/li&gt;
&lt;li&gt;組織のスケールアウトを阻害する&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;スタートアップの機動力&#34;&gt;スタートアップの機動力&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;暗黙知が少ないので自律的に動きやすい(全能感)

&lt;ul&gt;
&lt;li&gt;フィードバックも得やすく自信を得られる&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;暗黙知の圧力で保守的になりスタートアップがスタートアップでなくなる&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;ref: &amp;ldquo;the tweleve factor app&amp;rdquo;&lt;/p&gt;

&lt;p&gt;フロー情報の共有による知識のチーム間の横展開、連鎖&lt;br /&gt;
Qiita teamとか&lt;/p&gt;

&lt;h3 id=&#34;まだできてないこと&#34;&gt;まだできてないこと&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;メンタルモデルのコードへの反映

&lt;ul&gt;
&lt;li&gt;野生動物を見たら危険だと判断するといった判断&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;「なぜ」が暗黙知化されがち

&lt;ul&gt;
&lt;li&gt;パーミッションかえる =&amp;gt; なんで？とか&lt;/li&gt;
&lt;li&gt;そこはドキュメント化するしかない。そこでフロー情報の共有。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;質問タイム&#34;&gt;質問タイム&lt;/h3&gt;

&lt;h4 id=&#34;q-フロー情報の共有にqiita-team以外に試したツールは&#34;&gt;Q. フロー情報の共有にQiita team以外に試したツールは？&lt;/h4&gt;

&lt;p&gt;上手く行かなかった物があるが名前は出せない。wikiのようなもの使っていた。&lt;br /&gt;
wikiだと更新しなかったことも、Qiita teamのようなものだと気軽に投稿できてよい。&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;wantedly株式会社-川崎-禎紀さん&#34;&gt;Wantedly株式会社 川崎 禎紀さん&lt;/h2&gt;

&lt;p&gt;サービス開始からの2年間Heroku&lt;/p&gt;

&lt;p&gt;サーバの使い分け
- staging: 本番と同じデータ、デプロイ前のテスト&lt;br /&gt;
- QA: topicブランチのテスト、ユーザなどに見てもらう&lt;/p&gt;

&lt;p&gt;travis, circleではなくwercker使ってる&lt;/p&gt;

&lt;p&gt;新しい機能試すこと目的ではなく、ユーザに価値を届けるのが大事にするべし&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;sansan株式会社-宍倉-功一さん&#34;&gt;Sansan株式会社 宍倉 功一さん&lt;/h2&gt;

&lt;p&gt;Eightの話&lt;/p&gt;

&lt;h3 id=&#34;kpi&#34;&gt;KPI&lt;/h3&gt;

&lt;p&gt;PDCAの効果測定、検証での指標&lt;/p&gt;

&lt;p&gt;評価、状態の共有方法
- メール
- Dashboard =&amp;gt; ducsdataを40インチディスプレイに映してる
- その他 fluentd + slash7&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;株式会社スマートエデュケーション-谷川裕之さん&#34;&gt;株式会社スマートエデュケーション 谷川裕之さん&lt;/h2&gt;

&lt;p&gt;世界への配信にS3 + CloudFront必須&lt;br /&gt;
MBaasSはParseを参考に自作してる&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;chatwork株式会社-山本-正喜さん&#34;&gt;ChatWork株式会社 山本 正喜さん&lt;/h2&gt;

&lt;p&gt;RDSにmroogaでラップして検索インデックスつくってる&lt;br /&gt;
mroogaからelasticsearchの導入を検討していたが、amazon cloudsearchを導入予定&lt;br /&gt;
コードはPHPからScalaへ乗り換え予定&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;株式会社nanapi-和田-修一さん&#34;&gt;株式会社nanapi 和田 修一さん&lt;/h2&gt;

&lt;p&gt;logはfluentd&lt;br /&gt;
生でs3へ&lt;br /&gt;
あとはelasticsearch + kibanaで視覚化&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;ランサーズ株式会社-田邊-賢司さん&#34;&gt;ランサーズ株式会社 田邊 賢司さん&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;4000人が毎月収入&lt;/li&gt;
&lt;li&gt;生活出来るひと: 200人&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;株式会社アカツキ-田中-勇輔さん&#34;&gt;株式会社アカツキ 田中 勇輔さん&lt;/h2&gt;

&lt;p&gt;CloudFormationのテンプレート: yusuketのgist&lt;br /&gt;
asset_sync gem利用中&lt;br /&gt;
filepath + MD5をs3にで管理し、ファイル自体はダウンロードせずに存在確認してる&lt;br /&gt;
cloudwatchのアラートをhipchatに送ってる&lt;br /&gt;
github/blacklineのプラグイン使用中&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;kaizen-platform-inc-石橋-利真さん&#34;&gt;Kaizen platform Inc. 石橋 利真さん&lt;/h2&gt;

&lt;p&gt;調整さん、plat BCD(ABテストツール)&lt;br /&gt;
リモートワークしてる&lt;/p&gt;

&lt;h3 id=&#34;インフラ運用の見える化&#34;&gt;インフラ運用の見える化&lt;/h3&gt;

&lt;p&gt;暗黙知era =&amp;gt; 見える化era&lt;/p&gt;

&lt;p&gt;事件&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;ec2keypairなくなった。&lt;/li&gt;
&lt;li&gt;RAILS_ENVはどこ。/etc/profile.d/rail.shで設定されてた。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;chef(knife-solo) + serverspec&lt;br /&gt;
ref: github時代のデプロイ戦略&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;株式会社ビズリーチ-竹内-真さん&#34;&gt;株式会社ビズリーチ 竹内 真さん&lt;/h2&gt;

&lt;p&gt;LUXAの話&lt;/p&gt;

&lt;p&gt;メール1億通/月&lt;br /&gt;
外部サービス、SESは使ってない&lt;br /&gt;
送る時にSMTPサーバ数増やす&lt;br /&gt;
EC2の金額抑えるために稼働時間は30~45分でコントロールしてる&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;イベントレジスト株式会社-池田-大輔さん&#34;&gt;イベントレジスト株式会社 池田 大輔さん&lt;/h2&gt;

&lt;p&gt;翻訳にはTransifex使ってる&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>RubyWorld Conference 2013に参加しました</title>
      <link>http://matsue.github.io/post/2013-11-24-rubyworld-conference-2013/</link>
      <pubDate>Sun, 24 Nov 2013 16:56:35 +0900</pubDate>
      
      <guid>http://matsue.github.io/post/2013-11-24-rubyworld-conference-2013/</guid>
      <description>&lt;p&gt;RubyWorld Conference 2013に参加しました&lt;/p&gt;

&lt;p&gt;島根県松江市で開催された&lt;a href=&#34;http://www.rubyworld-conf.org/ja/&#34;&gt;RubyWorld Conference 2013&lt;/a&gt;に参加してきたので、特に印象に残ったところをメモ(&lt;a href=&#34;http://matsue.github.io/blog/2013/11/23/rubyworld-conference-2013-day1-memo/&#34;&gt;day1&lt;/a&gt;, &lt;a href=&#34;http://matsue.github.io/blog/2013/11/23/rubyworld-conference-2013-day2-memo/&#34;&gt;day2&lt;/a&gt;)からピックアップ。

&lt;figure &gt;
    
        &lt;img src=&#34;https://lh3.googleusercontent.com/-3JJ6G6q-fII/UpHwGGIrhhI/AAAAAAAAADs/lWJGFVGj18U/w955-h716-no/P1020968.JPG&#34;  /&gt;
    
    
&lt;/figure&gt;

&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;h2 id=&#34;aiming-the-moving-target&#34;&gt;Aiming the Moving Target&lt;/h2&gt;


&lt;figure &gt;
    
        &lt;img src=&#34;https://lh5.googleusercontent.com/-QoldzB7PULE/UpHwE29ap5I/AAAAAAAAADY/Bl6DMHQqD-M/w955-h716-no/P1020969.JPG&#34;  /&gt;
    
    
&lt;/figure&gt;



&lt;p&gt;まつもとさんによる初日の基調講演。個人的には特に不思議の国のアリスに登場する赤の女王の言葉を用いた例えと、&amp;rdquo;Nice try&amp;rdquo;という言葉が印象的でした。&lt;br /&gt;
スライドの写真がないので &lt;a href=&#34;http://ja.wikipedia.org/wiki/%E8%B5%A4%E3%81%AE%E5%A5%B3%E7%8E%8B%E4%BB%AE%E8%AA%AC&#34;&gt;Wikipedia&lt;/a&gt;より赤の女王の言葉を引用すると&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;「その場にとどまるためには、全力で走り続けなければならない（It takes all the running you can do, to keep in the same place.）」&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;この言葉が示すように、ソフトウェアのように価値の変化するものを追うには、OSSのコミュニティ、そして会社も、変化し進み続けなければ死んでしまう。&lt;br /&gt;
そして&amp;rdquo;動くターゲット&amp;rdquo;である価値あるソフトウェアを提供するには、&lt;strong&gt;巨人の肩に乗り、なるべく速く、何度もためして、何度も撤退すべき&lt;/strong&gt;。「失敗したらもう終わり」というプロジェクトの進め方をせず、「失敗してもいい」、そして失敗のことも&amp;rdquo;Nice try&amp;rdquo;と言い換えるところから始めてみませんか、というようなお話をされていました。&lt;/p&gt;

&lt;p&gt;昨年の発表もそうでしたが、まつもとさんの「エンジニア主導の世界になっていくんだ」「世界を変えていこう」というメッセージにワクワクしながら聞いていました。&amp;rdquo;Nice try!&amp;ldquo;、使っていきたいです。&lt;/p&gt;

&lt;p&gt;非常にエンジニア心に響くセッションですので、気になった方は&lt;a href=&#34;http://tech.rakuten.co.jp/&#34;&gt;Rakuten Technology Conference 2013&lt;/a&gt;のビデオをご覧下さい。こちらの動画は英語での発表ですし、言い回しや構成も異なる部分がありますが、同じタイトルで発表をされています。&lt;/p&gt;

&lt;div class=&#34;embed-video-container&#34;&gt;
  &lt;iframe src=&#34;http://www.youtube.com/embed/obiljftVy0g&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;


&lt;h2 id=&#34;クックパッドの継続的デリバリー&#34;&gt;クックパッドの継続的デリバリー&lt;/h2&gt;

&lt;p&gt;こちらは高井さんによるクックパッドにおける開発手法の紹介。「いいなー！」「参考になる！」と思った所を並べると、&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;毎日11以上の本番デプロイがされている&lt;/li&gt;
&lt;li&gt;14,432のテストが10分で終わるよう分散実行している&lt;/li&gt;
&lt;li&gt;ブランチ管理はGitHub Flowを採用&lt;/li&gt;
&lt;li&gt;開発環境のDBは本番同様のDBサイズになるようレプリケーションしている&lt;/li&gt;
&lt;li&gt;デザイナもpull requestを送っていて、月間で約800のリクエストがとびかっている&lt;/li&gt;
&lt;li&gt;jenkinsとhipchatを連携させて、デプロイ結果を通知している&lt;/li&gt;
&lt;li&gt;デプロイ結果は自動でwikiにも追記されており、速度低下などあるとインフラエンジニアがそのログを漁って原因究明をする&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;ユーザの属性や時期(例えばハロウィンシーズン)のフラグが立ったらUIを自動で切り替えてるといったことは&lt;a href=&#34;https://github.com/cookpad/chanko&#34;&gt;chanko&lt;/a&gt;を使うと簡単にできるとのこと。また、テストの並列実行をサポートするツールも抽象化してOSSとして公開したいとのことでした。素敵です。&lt;/p&gt;

&lt;p&gt;余談ですが、クックパッドさんはDevOps Tokyoでの発表も非常に熱いものでした。そのとき特に印象的だった&lt;a href=&#34;https://www.google.co.jp/search?q=迷ったら健全な方&#34;&gt;「迷ったら健全な方」&lt;/a&gt;について高井さんに聞いたのですが、実はこれYahooさんの&lt;a href=&#34;https://www.google.co.jp/search?q=迷ったらワイルドな方&#34;&gt;「迷ったらワイルドな方」&lt;/a&gt;にかけているのだとか。いやー、どちらも格好いいっす。&lt;/p&gt;

&lt;script async class=&#34;speakerdeck-embed&#34; data-id=&#34;391a240035690131b25126ccc4851787&#34; data-ratio=&#34;1.33333333333333img src=&#34;//speakerdeck.com/assets/embed.js&#34;&gt;&lt;/script&gt;

&lt;h2 id=&#34;the-internet-axiom-escaping-the-tyranny-of-time-and-space&#34;&gt;The Internet Axiom: Escaping the Tyranny of Time and Space&lt;/h2&gt;

&lt;p&gt;GitHubのCEOであるTomさんが2日目の基調講演でした。&lt;/p&gt;

&lt;p&gt;Tomさんによる自己紹介。新しいスライドの使い方です笑

&lt;figure &gt;
    
        &lt;img src=&#34;https://lh6.googleusercontent.com/-PpxOz94e9Bc/UpHxP_FfArI/AAAAAAAAALU/VkyPZ7IPBQA/w955-h716-no/P1030025.JPG&#34;  /&gt;
    
    
&lt;/figure&gt;

&lt;/p&gt;

&lt;p&gt;そして自己紹介の後、&amp;rdquo;In the Year 2525&amp;rdquo;という曲に合わせた動画が流れ始める。動画の一場面で「どうぞうどうぞ」と2色のピルを奨めるTomさん。

&lt;figure &gt;
    
        &lt;img src=&#34;https://lh3.googleusercontent.com/-e5M1nbjPseE/UpIm4gB2EHI/AAAAAAAAAfw/RykwCcfgF7Y/w544-h318-no/tom_2525.png&#34;  /&gt;
    
    
&lt;/figure&gt;

&lt;/p&gt;

&lt;p&gt;インターネットがもたらす3つの変化を軸にスタートアップを紹介していました。紹介していたサービスは以下。もちろん最後はGitHubです。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;WEIGHTLESS DATA

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://lockitron.com/&#34;&gt;Lockitron&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://squareup.com/&#34;&gt;Square&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;MasterCardの&lt;a href=&#34;https://www.paypass.com/&#34;&gt;PayPass&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://bitcoin.org/&#34;&gt;Bitcoin&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;WEIGHTLESS DATA MOVES FAST

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.drchrono.com/&#34;&gt;drchrono&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.snapchat.com/&#34;&gt;Snapchat&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;COMMUNIATION BECOMES EASY

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.uber.com/&#34;&gt;Uber&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.spoonrocket.com/&#34;&gt;SpooRocket&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/&#34;&gt;GitHub&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;「なんだかみんな笑ってるが完璧な日本語だろ？Google翻訳さ！」というようなやりとりのシーン。どうしてこうなった。。ラップにでもなりそうだ一興。

&lt;figure &gt;
    
        &lt;img src=&#34;https://lh3.googleusercontent.com/-OpifbUXay8w/UpHy5a2a3AI/AAAAAAAAAZk/kne68mWa2qY/w955-h716-no/PB221058.JPG&#34;  /&gt;
    
    
&lt;/figure&gt;

&lt;/p&gt;

&lt;p&gt;GitHub社員の位置情報。みんなバラバラの位置にいることが分かりますが、これで仕事ができているのは非同期(Ashynchronus)なやりとりで仕事が出来るからで、それをサポートするのがpull requestやissueという機能。こういった仕事のやり方についてTomさんは、Linusさんとも話しあったことがあるようです。

&lt;figure &gt;
    
        &lt;img src=&#34;https://lh6.googleusercontent.com/-ne99KZ1aWHc/UpHxUP5qecI/AAAAAAAAAL4/ObRa5Ahu0ZM/w955-h716-no/P1030029.JPG&#34;  /&gt;
    
    
&lt;/figure&gt;

&lt;/p&gt;

&lt;p&gt;ここ1ヶ月のGitHub内のプロジェクトのコミット数など。GitHubが今も活発に改善を重ねていることが分かります。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;931 active pull requests&lt;/li&gt;
&lt;li&gt;815 merged&lt;/li&gt;
&lt;li&gt;113 authors&lt;/li&gt;
&lt;li&gt;5273 commits&lt;/li&gt;
&lt;li&gt;443 active issues&lt;/li&gt;
&lt;li&gt;248 closed issues&lt;/li&gt;
&lt;li&gt;195 new issues&lt;/li&gt;
&lt;/ul&gt;


&lt;figure &gt;
    
        &lt;img src=&#34;https://lh5.googleusercontent.com/-qCiyytvva98/UpHxVY7oISI/AAAAAAAAAL8/A01iDj80Wzk/w955-h716-no/P1030030.JPG&#34;  /&gt;
    
    
&lt;/figure&gt;



&lt;p&gt;GitHubでは Beer30という、社員みんなで集まって新しいプロジェクトや新しいビジョンの話をする場があるそう。サンフランシスコで実施するので、参加できなかったメンバのために動画を共有しているとのこと。

&lt;figure &gt;
    
        &lt;img src=&#34;https://lh3.googleusercontent.com/-4yLMUCoXTbs/UpHxWanmqgI/AAAAAAAAAME/FZSuAR0ytQw/w955-h716-no/P1030031.JPG&#34;  /&gt;
    
    
&lt;/figure&gt;

&lt;/p&gt;

&lt;p&gt;hipchatとhubotで運用状態を見ているところ。

&lt;figure &gt;
    
        &lt;img src=&#34;https://lh6.googleusercontent.com/-7mOe_fkuW6A/UpHxYA7--qI/AAAAAAAAAMU/dXhPp-Ik4yo/w955-h716-no/P1030033.JPG&#34;  /&gt;
    
    
&lt;/figure&gt;

&lt;/p&gt;

&lt;p&gt;Tomさんの話からは終始、「時代は変わるんだよ」というメッセージをビリビリと感じました。きっとVCの人たちに話す時も、様々な例を出して、イノベーションを感じさせる話をしているのだろうなーと思って聞いていました。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/mojombo/jekyll&#34;&gt;jekyll&lt;/a&gt;を作ったの、Tomさんだったんですね。最近はビジネスが忙しく、家族もいるので、奥さんと子供が出かけている間にコードは書いているとのこと。うーん、凄いです。&lt;/p&gt;

&lt;h2 id=&#34;その他の印象に残っているところ&#34;&gt;その他の印象に残っているところ&lt;/h2&gt;

&lt;p&gt;安川さん、八田さんによる&amp;rdquo;Social Translating&amp;rdquo;もとても興味をひかれました。&lt;a href=&#34;http://railstutorial.jp/&#34;&gt;Ruby on Rails チュートリアル&lt;/a&gt;が日本語で読めるって凄いです。4.0対応は2人で約1ヶ月で対応されたとのこと。&lt;/p&gt;


&lt;figure &gt;
    
        &lt;img src=&#34;https://lh4.googleusercontent.com/-mvcjoOpiUlU/UpHwhsjCkuI/AAAAAAAAAGw/_61I-u9Ihng/w955-h716-no/P1020993.JPG&#34;  /&gt;
    
    
&lt;/figure&gt;



&lt;p&gt;相澤さんの『クラウド時代のRubyアプリケーション設計』で取り上げられた&lt;a href=&#34;http://12factor.net/&#34;&gt;The Twelve-Factor App&lt;/a&gt;は必ず読んでおこう。嬉しいことにこちらも&lt;a href=&#34;http://twelve-factor-ja.herokuapp.com/&#34;&gt;翻訳されており&lt;/a&gt;、日本語で読むことができます！&lt;/p&gt;

&lt;p&gt;Herokuユーザが視覚化されている様子。ユーザ数、日本は4位らしいです。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;アメリカ&lt;/li&gt;
&lt;li&gt;UK&lt;/li&gt;
&lt;li&gt;カナダ&lt;/li&gt;
&lt;li&gt;日本&lt;/li&gt;
&lt;/ol&gt;


&lt;figure &gt;
    
        &lt;img src=&#34;https://lh5.googleusercontent.com/-Og9LoT8cu1k/UpHxn0QWNxI/AAAAAAAAAOE/trvu8_efFzQ/w955-h716-no/P1030047.JPG&#34;  /&gt;
    
    
&lt;/figure&gt;



&lt;p&gt;川端さんによる『Rubyistによるアジャイル開発事例紹介と進め方』では最後に引用されていたKent Beckさんの言葉が印象的でした。&lt;/p&gt;


&lt;figure &gt;
    
        &lt;img src=&#34;https://lh4.googleusercontent.com/-29p9-vARPWU/UpHx2MuQUUI/AAAAAAAAAPg/nXCr7OYm2S8/w955-h716-no/P1030058.JPG&#34;  /&gt;
    
    
&lt;/figure&gt;



&lt;p&gt;というメッセージに対する答えが以下。

&lt;figure &gt;
    
        &lt;img src=&#34;https://lh3.googleusercontent.com/-57IBURBQo74/UpHx2wbkrSI/AAAAAAAAAPw/DHNxIEND3_I/w955-h716-no/P1030059.JPG&#34;  /&gt;
    
    
&lt;/figure&gt;

&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;『自分が変えられるのは自分だけ』&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;まずは自分を変える努力をしなければ。&lt;/p&gt;

&lt;p&gt;Ruby Prize 2013は、近永さんが授賞されました。おめでとうございます！

&lt;figure &gt;
    
        &lt;img src=&#34;https://lh4.googleusercontent.com/-ibbxGO3xQQw/UpHwrDzcO8I/AAAAAAAAAH0/72z2KkrkjBE/w955-h716-no/P1030002.JPG&#34;  /&gt;
    
    
&lt;/figure&gt;

&lt;/p&gt;

&lt;h2 id=&#34;最後に&#34;&gt;最後に&lt;/h2&gt;

&lt;p&gt;講演を聞いていて、ただ聞いているだけではなく早く自分のアクションに繋げていかないといけないなと強く感じさせられるカンファレンスでした。&lt;/p&gt;

&lt;p&gt;また、ここでは取り上げませんでしたが、まつもとさんのオリンピックネタや突然のダジャレ賞授賞式、攻めの司会などなど賑やかな場面がたくさんあり、とても楽しいイベントでした。スタッフ、講演者の皆様ありがとうございました！&lt;/p&gt;


&lt;figure &gt;
    
        &lt;img src=&#34;https://lh6.googleusercontent.com/-2mqRdSUqikw/UpHzjMnesHI/AAAAAAAAAbs/PlX0O7BvdYY/w955-h716-no/PB221127.JPG&#34;  /&gt;
    
    
&lt;/figure&gt;</description>
    </item>
    
    <item>
      <title>RubyWorld Conference 2013 day2 memo</title>
      <link>http://matsue.github.io/post/2013-11-23-rubyworld-conference-2013-day2-memo/</link>
      <pubDate>Sat, 23 Nov 2013 01:14:19 +0900</pubDate>
      
      <guid>http://matsue.github.io/post/2013-11-23-rubyworld-conference-2013-day2-memo/</guid>
      <description>&lt;p&gt;RubyWorld Conference 2013 2日目にとったメモです。&lt;br /&gt;
個人メモなので誤字などご容赦ください。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;h2 id=&#34;全体関連リンク&#34;&gt;全体関連リンク&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;公式サイト: &lt;a href=&#34;http://www.rubyworld-conf.org/&#34;&gt;http://www.rubyworld-conf.org/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;公式UST: &lt;a href=&#34;http://www.ustream.tv/channel/rubyw-conf-13&#34;&gt;http://www.ustream.tv/channel/rubyw-conf-13&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;togetter day1: &lt;a href=&#34;http://togetter.com/li/592855&#34;&gt;http://togetter.com/li/592855&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;togetter day2: &lt;a href=&#34;http://togetter.com/li/593359&#34;&gt;http://togetter.com/li/593359&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;my memo day1: &lt;a href=&#34;https://gist.github.com/Matsue/7585061&#34;&gt;https://gist.github.com/Matsue/7585061&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;my memo day2: &lt;a href=&#34;https://gist.github.com/Matsue/7600639&#34;&gt;https://gist.github.com/Matsue/7600639&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Social Translatingの資料: &lt;a href=&#34;https://speakerdeck.com/yasulab/social-translating-the-way-of-translating-rails-tutorial-and-ruby-hacking-guide&#34;&gt;https://speakerdeck.com/yasulab/social-translating-the-way-of-translating-rails-tutorial-and-ruby-hacking-guide&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;the-internet-axiom-escaping-the-tyranny-of-time-and-space&#34;&gt;The Internet Axiom: Escaping the Tyranny of Time and Space』&lt;/h2&gt;

&lt;p&gt;by Tom Preston-Werner (GitHub Inc. CEO)&lt;/p&gt;

&lt;h3 id=&#34;self-introduction&#34;&gt;self introduction&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;ruby developer&lt;/li&gt;
&lt;li&gt;php developer&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;githubで変えたいことがあれば言ってくれ&lt;/p&gt;

&lt;p&gt;(~ video上映 ~)&lt;/p&gt;

&lt;p&gt;video作ったのは私が変わり者だからというのもあるが&lt;br /&gt;
この歌が未来をとらえているから&lt;/p&gt;

&lt;p&gt;このインターネットを使える時代素晴しく思う&lt;br /&gt;
電気がうまれた時代に似てる&lt;/p&gt;

&lt;p&gt;インターネットは多くの情報をはこべ、電力以上に素晴しい&lt;/p&gt;

&lt;p&gt;これはキャンプしたときの写真&lt;br /&gt;
電気が近くにあったわけではない&lt;br /&gt;
あったのはケータイだけ&lt;br /&gt;
これがインターネットの力&lt;/p&gt;

&lt;p&gt;あなたのお気に入りのレストランのページはどうなってる？&lt;br /&gt;
メニューとかのってるだろう&lt;br /&gt;
それだけでいいのでしょうか&lt;/p&gt;

&lt;p&gt;政府も考えるべき&lt;br /&gt;
申請書をアップロードするだけでいいと思ってる人がいる&lt;/p&gt;

&lt;p&gt;ほぼ全ての人がスマートフォン持っている&lt;br /&gt;
10年後はいつでもどこでも使えることになってるだろう&lt;/p&gt;

&lt;h3 id=&#34;weightless-data&#34;&gt;&amp;ldquo;WEIGHTLESS DATA&amp;rdquo;&lt;/h3&gt;

&lt;p&gt;これからデータの重さがなくなる&lt;/p&gt;

&lt;h4 id=&#34;例えば鍵&#34;&gt;例えば鍵&lt;/h4&gt;

&lt;p&gt;みなさん持ってますね&lt;/p&gt;

&lt;p&gt;数KBのデータがあれば鍵はデータで表せるだろう&lt;br /&gt;
なぜ金属で持ち歩いているのか？&lt;br /&gt;
何万もケータイで持てるのになぜ？&lt;br /&gt;
インターネットの力使えてないといえる&lt;/p&gt;

&lt;p&gt;実際にLockitronというサービスがある&lt;/p&gt;

&lt;h4 id=&#34;お金&#34;&gt;お金&lt;/h4&gt;

&lt;p&gt;お札を持ち運んでいるがこれも意味が無い&lt;/p&gt;

&lt;p&gt;squareがあります&lt;br /&gt;
ただ、リーダーがあるとデバイスが増えてる&lt;br /&gt;
そこでsquare cachというものも出してる&lt;br /&gt;
しかしemailなど管理は必要&lt;/p&gt;

&lt;p&gt;iphoneだけでできないだろうか？&lt;br /&gt;
master cardはそれを解決しようとしてる&lt;br /&gt;
pay passというサービス&lt;/p&gt;

&lt;p&gt;なんでこんな大変なのか&lt;br /&gt;
不正起きないよう、さまざまな制約があるから&lt;/p&gt;

&lt;p&gt;bitcoinがある&lt;br /&gt;
これは問題もあるかもしれないが完全にオンラインで成り立っている&lt;/p&gt;

&lt;h4 id=&#34;病院&#34;&gt;病院&lt;/h4&gt;

&lt;p&gt;なんども同じ問診票に同じ情報を書き続けなければならない&lt;br /&gt;
そして医者はまたそれをコンピュータにいれてる&lt;/p&gt;

&lt;p&gt;drchronoはこれに対応している&lt;/p&gt;

&lt;p&gt;みなさん仕事している中でいらつきを感じる場面あると思う&lt;br /&gt;
それをメモしてください&lt;br /&gt;
インターネットアクションをとってないことを&lt;/p&gt;

&lt;h3 id=&#34;weightless-data-moves-fast&#34;&gt;WEIGHTLESS DATA MOVES FAST&lt;/h3&gt;

&lt;p&gt;サンフランシスコからサクラメントにいって事務所に出さないと資料があった&lt;br /&gt;
1.5時間かけていった&lt;br /&gt;
データでいうと400Byteくらいの内容を書いた&lt;br /&gt;
そしてまた取りに戻った&lt;/p&gt;

&lt;p&gt;つまりトータルで8時間もかかった&lt;br /&gt;
なんと50Byte/h&lt;br /&gt;
急いでもこれ&lt;br /&gt;
なんでこんなかかるのか&lt;/p&gt;

&lt;p&gt;これと真逆の状態とはどんな状態でしょう&lt;/p&gt;

&lt;h4 id=&#34;snapchat&#34;&gt;snapchat&lt;/h4&gt;

&lt;p&gt;革新的なのは数十秒でデータが消える&lt;br /&gt;
たとえば人の顔に落書きしておくったり&lt;/p&gt;

&lt;p&gt;これのなにが特別なのか？&lt;br /&gt;
私たちは手紙をemailで代替している&lt;br /&gt;
パラダイムにのって変わったもの&lt;br /&gt;
しかし十分に適応していない部分がある&lt;/p&gt;

&lt;p&gt;snapchatを使うと、送った馬鹿げた写真が広まることを気にしなくて良いのです&lt;/p&gt;

&lt;h3 id=&#34;communiation-becomes-easy&#34;&gt;COMMUNIATION BECOMES EASY&lt;/h3&gt;

&lt;h4 id=&#34;uber&#34;&gt;UBER&lt;/h4&gt;

&lt;p&gt;サンフランシスコのtaxi状況はひどい&lt;br /&gt;
UBERを使えばどこにいるか見えるし自分の場所に来てくれる&lt;br /&gt;
待つ必要もないし、お金もその場で払わなくて良い&lt;br /&gt;
インターネットの力が発揮されている&lt;/p&gt;

&lt;p&gt;簡単だから毎日使っている&lt;/p&gt;

&lt;h4 id=&#34;spoon-rocket&#34;&gt;SPOON ROCKET&lt;/h4&gt;

&lt;p&gt;これの対象はタクシーではなくご飯&lt;br /&gt;
6$で連れて行ってくれるて食べられる&lt;br /&gt;
車の送迎サービスもある&lt;br /&gt;
そして温かいご飯食べられる&lt;br /&gt;
大学生の助けになる&lt;/p&gt;

&lt;h4 id=&#34;github&#34;&gt;GitHub&lt;/h4&gt;

&lt;p&gt;世界中で働いている&lt;/p&gt;

&lt;p&gt;先月のmain GitHubのレポジトリを見ると&lt;br /&gt;
- 931 pull requests
- 815 merged
- 113 authors
- 5273 commits
- 443 issues
- 248 closed&lt;/p&gt;

&lt;p&gt;pull requestすると見える化できるし、レビューできる&lt;br /&gt;
ディスカッションができる&lt;/p&gt;

&lt;p&gt;なぜこのような活動ができるのか？&lt;/p&gt;

&lt;h4 id=&#34;asynchronus&#34;&gt;ASYNCHRONUS&lt;/h4&gt;

&lt;p&gt;それは非同期にできるから&lt;br /&gt;
実際、いま私は日本にいて時差あるわけだが&lt;br /&gt;
リアルタイムではないがメッセージを送りあうことができる&lt;/p&gt;

&lt;p&gt;これにより分散して仕事できる&lt;/p&gt;

&lt;p&gt;非同期をサポートするのが
- pull request
- issue&lt;/p&gt;

&lt;p&gt;という機能&lt;/p&gt;

&lt;p&gt;Linusとも話した&lt;br /&gt;
彼以外の人は多くの人が一緒に働くということについて考えていなかった&lt;br /&gt;
大企業だけがそのような仕事していた&lt;br /&gt;
linuxはまさにそういうパターンの仕事だった&lt;br /&gt;
githubは分散された仕事を便利にしたもの&lt;/p&gt;

&lt;h4 id=&#34;bear-13&#34;&gt;bear 13&lt;/h4&gt;

&lt;p&gt;githubではbear13という取り組みをやっている&lt;br /&gt;
集まって、新しいプロジェクトや新しいビジョンの話をする&lt;/p&gt;

&lt;p&gt;サンフランシスコでやるが遠隔地のひとはどうするか？&lt;br /&gt;
&amp;lsquo;remote by the fault&amp;rsquo;という考えでやっている&lt;br /&gt;
videoを見えるようにしている&lt;/p&gt;

&lt;h4 id=&#34;urls&#34;&gt;URLS&lt;/h4&gt;

&lt;p&gt;URLも大事にしている&lt;br /&gt;
githubのURLは見れば何を指しているか分かるようにしている&lt;/p&gt;

&lt;p&gt;みなさんのサイトでも考えてほしい&lt;br /&gt;
URLどれだけ読みやすいか&lt;/p&gt;

&lt;h4 id=&#34;mentions&#34;&gt;@mentions&lt;/h4&gt;

&lt;p&gt;これはtwitterにもある機能&lt;br /&gt;
issueなどで使う&lt;br /&gt;
これがあることで「いいね」というようなメッセージを引き出せる&lt;/p&gt;

&lt;h4 id=&#34;chat&#34;&gt;CHAT&lt;/h4&gt;

&lt;p&gt;(chatopsのことぽい)&lt;br /&gt;
同期でも非同期でもできる&lt;br /&gt;
cookpad Takaiさんの取り組みは似ている&lt;br /&gt;
うちは28回なのでgithubの勝ちですw&lt;/p&gt;

&lt;p&gt;1secでデプロイできるので何度も本番にデプロイできる&lt;/p&gt;

&lt;p&gt;graph meで見るとかなりのメッセージが飛んでること確認できる&lt;/p&gt;

&lt;p&gt;pagerやpuppetもchatで操作できる&lt;/p&gt;

&lt;h3 id=&#34;qa&#34;&gt;QA&lt;/h3&gt;

&lt;h4 id=&#34;pull-requestなどの機能はユーザにはどう使ってほしいと思っている-あとこれから予定してる機能ある&#34;&gt;pull requestなどの機能はユーザにはどう使ってほしいと思っている?˙あとこれから予定してる機能ある？&lt;/h4&gt;

&lt;p&gt;ソフトウェアエンジニアが使えやすい機能を考えている&lt;/p&gt;

&lt;h4 id=&#34;遠隔地でのコミュニケーションどうしてる&#34;&gt;遠隔地でのコミュニケーションどうしてる&lt;/h4&gt;

&lt;p&gt;基本的には非同期でコミュニケーションだが、&lt;br /&gt;
face to faceするのは戦略的な話をするようなとき&lt;br /&gt;
そういう時にはgoogle hangout使う&lt;/p&gt;

&lt;h4 id=&#34;翻訳に使った時gitを分からない人がいてpull-request分からない人いた-なにか良い解決策ある&#34;&gt;翻訳に使った時gitを分からない人がいてpull request分からない人いた。なにか良い解決策ある？&lt;/h4&gt;

&lt;p&gt;non engineerにgit教えるのは大変。&lt;br /&gt;
githubはweb上だけでファイル編集とpull requestできるのでそれが使えるのでは&lt;/p&gt;

&lt;h4 id=&#34;rubyやrailsに期待する機能ある&#34;&gt;rubyやrailsに期待する機能ある？&lt;/h4&gt;

&lt;p&gt;いまそんなコーディングに時間使ってない   rubyはプロトタイプにとても適していて好きだ&lt;/p&gt;

&lt;h4 id=&#34;問診票は手の震えや記憶も見ている-それをインターネットで解決できるアイデアある&#34;&gt;問診票は手の震えや記憶も見ている。それをインターネットで解決できるアイデアある？&lt;/h4&gt;

&lt;p&gt;オンラインでビデオ問診とかある&lt;/p&gt;

&lt;h4 id=&#34;さいきん開発してる&#34;&gt;さいきん開発してる？&lt;/h4&gt;

&lt;p&gt;そんなしてない&lt;br /&gt;
奥さんと子供がいないときだけしてる&lt;/p&gt;

&lt;h4 id=&#34;cliでpull-requestみるオススメのツールある&#34;&gt;CLIでpull requestみるオススメのツールある？&lt;/h4&gt;

&lt;p&gt;hubとか&lt;br /&gt;
やっぱりwebが便利&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;行政業務システムのruby化-開発事例紹介&#34;&gt;行政業務システムのRuby化(開発事例紹介&lt;/h2&gt;

&lt;p&gt;by 木島浩暁 (株式会社日立ソリューションズ)&lt;/p&gt;

&lt;h3 id=&#34;ruby化の経緯&#34;&gt;Ruby化の経緯&lt;/h3&gt;

&lt;p&gt;システム改修の短期化したかったから&lt;br /&gt;
そこでruby+railsを提案&lt;/p&gt;

&lt;h3 id=&#34;スケジュール&#34;&gt;スケジュール&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;ruby化&lt;/li&gt;
&lt;li&gt;変更分の取り込み&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;をウォーターフォールで計画&lt;/p&gt;

&lt;h3 id=&#34;構成&#34;&gt;構成&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;web: java&lt;/li&gt;
&lt;li&gt;バッチ: C&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;これがrubyとrailsになった&lt;/p&gt;

&lt;h3 id=&#34;課題&#34;&gt;課題&lt;/h3&gt;

&lt;h4 id=&#34;1-開発体制の構築&#34;&gt;1.開発体制の構築&lt;/h4&gt;

&lt;p&gt;多数のruby技術者が必要だった&lt;br /&gt;
=&amp;gt; 島根県企業と共同で行った&lt;/p&gt;

&lt;p&gt;PROBIZMOと協力
VPNや会議システムを構築して対応した&lt;/p&gt;

&lt;h4 id=&#34;2-rails規約に沿わない機能の実装&#34;&gt;2.Rails規約に沿わない機能の実装&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;URLの難読化&lt;/li&gt;
&lt;li&gt;外部ファイルの取り込み&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;rails拡張コンポーネントを挟んで対応した&lt;/p&gt;

&lt;h5 id=&#34;2-1-urlの難読化&#34;&gt;2-1.URLの難読化&lt;/h5&gt;

&lt;p&gt;URLを予測されて直接入力されるのを避けたかった&lt;br /&gt;
開発者は通常通り開発し、難読化はコンポーネントが対応&lt;/p&gt;

&lt;h5 id=&#34;2-2-外部ファイルの取り込み&#34;&gt;2-2.外部ファイルの取り込み&lt;/h5&gt;

&lt;p&gt;申請書をweb画面から入力するのは難しいので&lt;br /&gt;
外注パンチで作成したファイルを取り込み機能が必要だった&lt;br /&gt;
ファイル解析用のDSLを定義した&lt;/p&gt;

&lt;h4 id=&#34;3-バッチ処理の性能確保&#34;&gt;3.バッチ処理の性能確保&lt;/h4&gt;

&lt;p&gt;C言語で書かれていたバッチと同等の速度確保を目標としていた&lt;/p&gt;

&lt;p&gt;47万社のデータをCだと1h22minで処理してた&lt;br /&gt;
そのままrubyにすると70hかかった・・&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Active RecordからSQL直接入力へ変更&lt;/li&gt;
&lt;li&gt;GCタイミング修正&lt;/li&gt;
&lt;li&gt;parralel gemでの並列実行&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;このような取り組みで1h10minにできた&lt;/p&gt;

&lt;p&gt;Railsプロセスの起動時間も問題になっていた&lt;br /&gt;
- プロセス常駐化し、&lt;br /&gt;
- そこにプロセス間通信でキック、&lt;br /&gt;
- 処理プロセスをforkする&lt;/p&gt;

&lt;p&gt;という流れにすることで改善した&lt;/p&gt;

&lt;h4 id=&#34;4-品質の維持&#34;&gt;4.品質の維持&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;rspec&lt;/li&gt;
&lt;li&gt;C0は100%&lt;/li&gt;
&lt;li&gt;テストコードが2.5倍以上を目標&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;テストに9hourかかる&lt;br /&gt;
クックパッドのテスト並列実行のOSSに期待してます&lt;/p&gt;

&lt;h3 id=&#34;最後に&#34;&gt;最後に&lt;/h3&gt;

&lt;p&gt;rubyにしたことで次期以降での改修時間の短縮に期待している&lt;/p&gt;

&lt;h3 id=&#34;qa-1&#34;&gt;QA&lt;/h3&gt;

&lt;p&gt;ruby関連の質問は開発担当のmakiさんが回答&lt;/p&gt;

&lt;h4 id=&#34;rails起動の時間かかるというのはバッチ処理用のgem使ったのか-作ったのか&#34;&gt;rails起動の時間かかるというのはバッチ処理用のgem使ったのか、作ったのか？&lt;/h4&gt;

&lt;p&gt;delayed jobも検討していたが自作した&lt;br /&gt;
200行程度のもの&lt;br /&gt;
作ってからzeusでできるよとも言われた&lt;/p&gt;

&lt;h4 id=&#34;機関系でのruby使用は増えそう&#34;&gt;機関系でのruby使用は増えそう？&lt;/h4&gt;

&lt;p&gt;全国のデータではなく行政単位の処理だったので並列処理できたが、&lt;br /&gt;
もしこれが並列実行できないようなものだったらと考えると検討が必要だろう&lt;/p&gt;

&lt;h4 id=&#34;処理が分割ができれば使えそうということ&#34;&gt;処理が分割ができれば使えそうということ？&lt;/h4&gt;

&lt;p&gt;その認識で間違っていないと思う&lt;/p&gt;

&lt;h4 id=&#34;rdmsがネックになるのでは&#34;&gt;RDMSがネックになるのでは&lt;/h4&gt;

&lt;p&gt;それはある。&lt;br /&gt;
他のプロジェクトで限界を感じている&lt;/p&gt;

&lt;h4 id=&#34;active-record使うのやめたときエスケープ処理などはどうしたのか&#34;&gt;Active Record使うのやめたときエスケープ処理などはどうしたのか&lt;/h4&gt;

&lt;p&gt;ORマッパーだけ使わず、サニタイジング機能などはrailsのものを使った&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;日本最大級のクラウドソーシング-クラウドワークス-の超速事業起ち上げにおいてrubyの果たした役割&#34;&gt;『日本最大級のクラウドソーシング「クラウドワークス」の超速事業起ち上げにおいてRubyの果たした役割』&lt;/h2&gt;

&lt;p&gt;by 野村真一 (株式会社クラウドワークス)&lt;/p&gt;

&lt;h3 id=&#34;自己紹介&#34;&gt;自己紹介&lt;/h3&gt;

&lt;p&gt;モバイルCP -&amp;gt; クーポンサイト -&amp;gt; クラウドソーシング&lt;br /&gt;
Ruby使い始めたのはクラウドワークスが初&lt;/p&gt;

&lt;h3 id=&#34;クラウドワークスとは&#34;&gt;クラウドワークスとは&lt;/h3&gt;

&lt;p&gt;依頼できる仕事はオンラインで完結するものなら何でも&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;ウェブアプリとか&lt;/li&gt;
&lt;li&gt;ランディングページとか&lt;/li&gt;
&lt;li&gt;サーバ構築とか&lt;/li&gt;
&lt;li&gt;デザインとか&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;ミッション&#34;&gt;ミッション&lt;/h3&gt;

&lt;p&gt;「21世紀の新しいワークスタイルを提案する」&lt;/p&gt;

&lt;p&gt;背景は&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;正社員比率の減少&lt;/li&gt;
&lt;li&gt;超高齢化社会&lt;/li&gt;
&lt;li&gt;女性の終業ギャップ&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;大切にしていること&#34;&gt;大切にしていること&lt;/h3&gt;

&lt;p&gt;ユーザエクスペリエンス&lt;/p&gt;

&lt;p&gt;機能で語る時代ではなくなってきた&lt;br /&gt;
車のCMでも「モノより思い出」といっちゃうくらい&lt;/p&gt;

&lt;p&gt;仕事の受発注において、&lt;br /&gt;
お金だけでなくやりがいなどを期待しているはず&lt;br /&gt;
そういった社会の満足度等を提供していきたい&lt;/p&gt;

&lt;h4 id=&#34;働くを通して人々に笑顔を&#34;&gt;「働くを通して人々に笑顔を」&lt;/h4&gt;

&lt;p&gt;クックパッドさん参考にしてる&lt;br /&gt;
仕事を通じた満足やつながりを生みたい&lt;/p&gt;

&lt;p&gt;「ありがとう」ボタン&lt;br /&gt;
facebookのlikeのように感謝を可視化した&lt;br /&gt;
リリース後スゴい押されてる&lt;br /&gt;
採用しなかった受注者の方に押されること多い&lt;/p&gt;

&lt;h4 id=&#34;1クリックで世界の仕事とスキルにアクセスを&#34;&gt;「1クリックで世界の仕事とスキルにアクセスを」&lt;/h4&gt;

&lt;p&gt;これまでのクラウドソーシングサービスは&lt;br /&gt;
予算や仕様が明確でないといけなかったりして複雑だった&lt;br /&gt;
ちょっと電話かけて相談するくらいの感じを想定&lt;/p&gt;

&lt;p&gt;「ショートメッセージ」機能もあり、気軽な相談できるようにしてる&lt;br /&gt;
「お仕事相談所」というところで依頼方法や相場も教えてくれる&lt;/p&gt;

&lt;h3 id=&#34;開発事例&#34;&gt;開発事例&lt;/h3&gt;

&lt;p&gt;rails多い&lt;br /&gt;
ポケットコンシェルジュも発注してる&lt;br /&gt;
ポケットコンシェルジュは時給制を採用してる&lt;/p&gt;

&lt;h3 id=&#34;ロゴコンペ&#34;&gt;ロゴコンペ&lt;/h3&gt;

&lt;p&gt;新しい事業のロゴを依頼してたくさんのデザインが応募してくれる&lt;br /&gt;
経産省Jump start Nipponでも使われた&lt;/p&gt;

&lt;h3 id=&#34;選択と集中&#34;&gt;選択と集中&lt;/h3&gt;

&lt;p&gt;受注と発注は鶏と卵&lt;br /&gt;
発注者にフォーカスしてる&lt;br /&gt;
目標設定も発注者の数&lt;br /&gt;
受注者はあとからついてくるとしてる&lt;/p&gt;

&lt;h3 id=&#34;スピード-スピード-スピード&#34;&gt;スピード!スピード!スピード!&lt;/h3&gt;

&lt;p&gt;楽天を参考にしてる&lt;br /&gt;
F1より自転車のほうがイメージあう&lt;br /&gt;
守るものなく、エンジンは自身なので、スタートアップぽい&lt;/p&gt;

&lt;h3 id=&#34;たちあげの話&#34;&gt;たちあげの話&lt;/h3&gt;

&lt;p&gt;CTOと非常勤の2人でつくった&lt;br /&gt;
rais使ってる&lt;br /&gt;
サービス開発に集中できる&lt;/p&gt;

&lt;p&gt;主に使ってるgem&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;capistrano&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;em-websocket
railsモデルそのままチャット機能つくれるので選択&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;OAtuth-plugin&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;メタプログラミングも活用&lt;/p&gt;

&lt;p&gt;今は4名くらいで開発&lt;br /&gt;
PHPに飽きた方がjoinしてる&lt;br /&gt;
rubyスキルはrubyぽく、railsぽく書けてるかで判断できる&lt;/p&gt;

&lt;h3 id=&#34;審査&#34;&gt;審査&lt;/h3&gt;

&lt;p&gt;ソースコード出してもらってやってもらっている&lt;/p&gt;

&lt;h3 id=&#34;スキルの登録具合&#34;&gt;スキルの登録具合&lt;/h3&gt;

&lt;p&gt;受注者のスキル層的にはPHPが多い&lt;/p&gt;

&lt;h3 id=&#34;内部で使っている技術&#34;&gt;内部で使っている技術&lt;/h3&gt;

&lt;p&gt;大半がRubyがらみ&lt;br /&gt;
rails, fluentd, etc&lt;/p&gt;

&lt;h3 id=&#34;qa-2&#34;&gt;QA&lt;/h3&gt;

&lt;h4 id=&#34;今後の機能等あれば&#34;&gt;今後の機能等あれば&lt;/h4&gt;

&lt;p&gt;3Dプリンタの仕事追加したら発注されてる&lt;br /&gt;
マッチングにふっていきたい&lt;br /&gt;
スケジュール管理、ファイル共有とかを使いたいという要望がきてる&lt;br /&gt;
現状だとdropboxつかってくださいと言ってるが強化したいところ&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;クラウド時代のrubyアプリケーション設計&#34;&gt;『クラウド時代のRubyアプリケーション設計』&lt;/h2&gt;

&lt;p&gt;by 相澤歩 (株式会社セールスフォース･ドットコム)&lt;/p&gt;

&lt;h3 id=&#34;links&#34;&gt;Links&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://twelve-factor-ja.herokuapp.com/&#34;&gt;http://twelve-factor-ja.herokuapp.com/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;自己紹介-1&#34;&gt;自己紹介&lt;/h3&gt;

&lt;p&gt;rubyコミッタになったのが２年前のrwcだったので感慨深い&lt;/p&gt;

&lt;p&gt;herokuは買収され２年ほど経ち、&lt;br /&gt;
herokuでありセールスフォース・ドットコムの社員&lt;/p&gt;

&lt;p&gt;エバンジェリストとしてエンジニアむけのマーケティング活動してる&lt;br /&gt;
大規模なキャンペーンのさい等にテクニカルアカウントマネージャーとしてサポートもしてる&lt;/p&gt;

&lt;p&gt;製品開発以外やってる&lt;/p&gt;

&lt;p&gt;エンタープライズレベルの契約をすると日本語でサポート受けられる&lt;/p&gt;

&lt;h3 id=&#34;heroku&#34;&gt;Heroku&lt;/h3&gt;

&lt;p&gt;2007年に3人で創設&lt;br /&gt;
最初はrubyだけホスティングしていた&lt;/p&gt;

&lt;p&gt;2011に買収されてからはjavaやpythonなどなどサポート開始&lt;/p&gt;

&lt;p&gt;しかしユーザの使用言語、システムの言語はRubyが多い&lt;/p&gt;

&lt;h3 id=&#34;課金&#34;&gt;課金&lt;/h3&gt;

&lt;p&gt;使った分だけ&lt;/p&gt;

&lt;h3 id=&#34;ユーザ分布&#34;&gt;ユーザ分布&lt;/h3&gt;

&lt;p&gt;ランキングは上から&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;アメリカ&lt;/li&gt;
&lt;li&gt;UK&lt;/li&gt;
&lt;li&gt;カナダ&lt;/li&gt;
&lt;li&gt;日本&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;UKインスタンスできてからUKも増えた&lt;br /&gt;
カナダと日本は僅差&lt;/p&gt;

&lt;h3 id=&#34;the-twelve-factor-app&#34;&gt;&amp;lsquo;the twelve-factor app&amp;rsquo;&lt;/h3&gt;

&lt;p&gt;heroku創業者が書いた論文のようなもの&lt;br /&gt;
アプリ構築に必要な12の要素にまとめたもの&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;セットアップは宣言的に行う&lt;/li&gt;
&lt;li&gt;依存を明確に定義する&lt;/li&gt;
&lt;li&gt;クラウド環境を仕様&lt;/li&gt;
&lt;li&gt;環境と本番の差異をなくす&lt;/li&gt;
&lt;li&gt;アーキテクチャを変更せずに用意にスケールするように&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;というようなこと書かれてる&lt;/p&gt;

&lt;p&gt;12のプラクティスのタイトル紹介&lt;/p&gt;

&lt;p&gt;今日は3つだけとりあげる&lt;/p&gt;

&lt;h3 id=&#34;1-codebase&#34;&gt;1.Codebase&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;ひとつのアプリは１つのコードもつ&lt;/li&gt;
&lt;li&gt;ひとつのアプリは複数の環境にデプロイされる&lt;/li&gt;
&lt;li&gt;複数のコードベースは複数のアプリとして取り扱う&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;環境ごとに持つべきではない&lt;/p&gt;

&lt;h4 id=&#34;gem化&#34;&gt;gem化&lt;/h4&gt;

&lt;p&gt;共通コンポーネントはgemにして複数アプリで使う&lt;br /&gt;
jeweler使うとgem化は楽&lt;/p&gt;

&lt;h4 id=&#34;rails-12-factor&#34;&gt;rails_12_factor&lt;/h4&gt;

&lt;p&gt;herokuではrails12_factorを入れるようにしてもらってる&lt;br /&gt;
aasetsなどのサポートがはいる&lt;/p&gt;

&lt;h4 id=&#34;gitのsubmodule&#34;&gt;gitのsubmodule&lt;/h4&gt;

&lt;p&gt;これでgitレポジトリの入れ子できる&lt;/p&gt;

&lt;h3 id=&#34;2-config&#34;&gt;2.Config&lt;/h3&gt;

&lt;p&gt;これはデプロイに特化したものなのでコードベースと分離すべき&lt;br /&gt;
環境変数にわける&lt;/p&gt;

&lt;h3 id=&#34;3-build-release-run&#34;&gt;3.Build, release, run&lt;/h3&gt;

&lt;p&gt;依存解決、リリース(実行準備)、実行&lt;/p&gt;

&lt;h4 id=&#34;バージョン管理&#34;&gt;バージョン管理&lt;/h4&gt;

&lt;p&gt;コードベースのバージョンとリリースのバージョンは違う&lt;br /&gt;
rollbackはリリースのバージョン単位で行う&lt;br /&gt;
heroku内ではbuildpackで依存解決し、最終的にDyno managerでリリースされる&lt;/p&gt;

&lt;h3 id=&#34;日本語訳&#34;&gt;日本語訳&lt;/h3&gt;

&lt;p&gt;ここ: &lt;a href=&#34;http://twelve-factor-ja.herokuapp.com/&#34;&gt;http://twelve-factor-ja.herokuapp.com/&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;qa-3&#34;&gt;QA&lt;/h3&gt;

&lt;h3 id=&#34;アーロンさん-ダジャレ賞さしあげます&#34;&gt;アーロンさん「ダジャレ賞さしあげます」&lt;/h3&gt;

&lt;p&gt;これはダジャレクラブというハッシュタグがあり、その中でいいだじゃれ(たくさん?)つぶやいたのでもらえた&lt;/p&gt;

&lt;h3 id=&#34;司会-最高のダジャレおねがいします&#34;&gt;司会「最高のダジャレおねがいします」&lt;/h3&gt;

&lt;p&gt;「イベントで良い弁当」&lt;/p&gt;

&lt;h3 id=&#34;なぜjewelerにした&#34;&gt;なぜjewelerにした？&lt;/h3&gt;

&lt;p&gt;bundlerと悩んだが初心者にはjewelerのが良いと思った&lt;/p&gt;

&lt;p&gt;slug compilerの中ではbundlerしてる&lt;br /&gt;
rubyのバージョン管理もherokuではbundlerで管理してる&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;rubyからアジャイル開発-ビッグデータ対応のデータベース-4d-dam-を利用するためのapiの研究開発&#34;&gt;『Rubyからアジャイル開発･ビッグデータ対応のデータベース(4D DAM)を利用するためのAPIの研究開発』&lt;/h2&gt;

&lt;p&gt;by 山本哲男 (株式会社八雲ソフトウェア)、高木丈智 (株式会社テクノプロジェクト)&lt;/p&gt;

&lt;h3 id=&#34;山本さんの舞台裏&#34;&gt;山本さんの舞台裏&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;5000人にrwc招待メールおくった&lt;/li&gt;
&lt;li&gt;300人から返信&lt;/li&gt;
&lt;li&gt;34名カンファレンス参加&lt;/li&gt;
&lt;li&gt;20名ツアー参加&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;八雲ソフトウェアについて&#34;&gt;八雲ソフトウェアについて&lt;/h3&gt;

&lt;p&gt;松江駅前にて開業&lt;/p&gt;

&lt;p&gt;八雲は出雲のかかりことば&lt;br /&gt;
8は無限も意味している&lt;/p&gt;

&lt;p&gt;Uターン人材を募集して、これまで4名採用した&lt;/p&gt;

&lt;h3 id=&#34;首都圏の状況&#34;&gt;首都圏の状況&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;人材不足&lt;/li&gt;
&lt;li&gt;オフショア開発のリスク

&lt;ul&gt;
&lt;li&gt;文化も違うし&lt;/li&gt;
&lt;li&gt;賃金あがってきた&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;なので東京で営業、地方で開発がよいと考える&lt;br /&gt;
首都圏の技術者60%は仕事があれば地元に帰りたいと思ってるという背景もある&lt;/p&gt;

&lt;h3 id=&#34;4d-dam&#34;&gt;4D DAM&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;アジャイル&lt;/li&gt;
&lt;li&gt;ビッグデータ(高速処理)&lt;/li&gt;
&lt;li&gt;シンプルなテーブル構造&lt;/li&gt;
&lt;li&gt;メンテナンスが簡単

&lt;ul&gt;
&lt;li&gt;DB内でプログラム実行可能&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;データベースだが上記に対応&lt;/p&gt;

&lt;p&gt;実際、東証ではSQLは1行しかかかれていない&lt;/p&gt;

&lt;h3 id=&#34;東証での実例&#34;&gt;東証での実例&lt;/h3&gt;

&lt;p&gt;2010年に東証に採用された&lt;br /&gt;
不正検知などに貢献&lt;/p&gt;

&lt;p&gt;契機は富士通のアローヘッドを使い始めたこと&lt;br /&gt;
7ヶ月しかなかったがアジェイルで4ヶ月で仮稼働まで辿り着いた&lt;br /&gt;
他社は数年予定だった&lt;/p&gt;

&lt;p&gt;オリンピック殿でも実績ある&lt;/p&gt;

&lt;h3 id=&#34;機能解説&#34;&gt;機能解説&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;ダイナミックアレイ構造&lt;/li&gt;
&lt;li&gt;ディクショナリードリブン&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;変更が用意であるため、アジャイルに適用できる&lt;/p&gt;

&lt;h3 id=&#34;テクノプロジェクト&#34;&gt;テクノプロジェクト&lt;/h3&gt;

&lt;p&gt;創立29年&lt;br /&gt;
2007年からrubyに取り組んでいる&lt;/p&gt;

&lt;h3 id=&#34;4d-dam-apiの紹介&#34;&gt;4D DAM APIの紹介&lt;/h3&gt;

&lt;p&gt;4D DAM向けのAPIの提供の話&lt;br /&gt;
Ruby版ドライバを作成したのでこれからはRubyから使える&lt;br /&gt;
ドライバは年内完成予定&lt;br /&gt;
来年２月にAPIは提供予定&lt;/p&gt;

&lt;h3 id=&#34;4d-damの応用の可能性について&#34;&gt;4D DAMの応用の可能性について&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;ECサイト&lt;/li&gt;
&lt;li&gt;医療情報DB&lt;/li&gt;
&lt;li&gt;通信監視&lt;/li&gt;
&lt;li&gt;部品管理&lt;/li&gt;
&lt;li&gt;フィールドクラウド&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;フィールドクラウド&#34;&gt;フィールドクラウド&lt;/h3&gt;

&lt;p&gt;クラウドと統合したフィールド監視&lt;/p&gt;

&lt;p&gt;example: 笹子トンネルの崩落&lt;br /&gt;
情報は紙では管理はされていた&lt;/p&gt;

&lt;p&gt;交通規制といった水害対策もセンサーと連動することでできるだろう&lt;/p&gt;

&lt;h3 id=&#34;qa-4&#34;&gt;QA&lt;/h3&gt;

&lt;h4 id=&#34;機関システムではrdbmsだが-4d-damに移行したらacid性は担保される-されないなら対策は&#34;&gt;機関システムではRDBMSだが、4D DAMに移行したらACID性は担保される？されないなら対策は？&lt;/h4&gt;

&lt;p&gt;joinが問題だと思うが常にjoinしたような状態で動くので問題が起きない&lt;/p&gt;

&lt;h4 id=&#34;api実装上-データの整合性に気をつけていると思うが-どのへん工夫している&#34;&gt;API実装上、データの整合性に気をつけていると思うが、どのへん工夫している？&lt;/h4&gt;

&lt;p&gt;4D DAMの開発者にCで記述してもらっている&lt;br /&gt;
主にrubyらしい命名の要望だけ開発者に伝えている&lt;/p&gt;

&lt;h4 id=&#34;使用する上での懸念点を本音で言ってほしい&#34;&gt;使用する上での懸念点を本音で言ってほしい&lt;/h4&gt;

&lt;p&gt;八雲ソフトウェアが大きい会社ではないので体力的に懸念はされることはあるだろう&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;rubyistによるアジャイル開発事例紹介と進め方&#34;&gt;『Rubyistによるアジャイル開発事例紹介と進め方』&lt;/h2&gt;

&lt;p&gt;by 川端光義 (株式会社アジャイルウェア)&lt;/p&gt;

&lt;h3 id=&#34;アジャイルウェア&#34;&gt;アジャイルウェア&lt;/h3&gt;

&lt;p&gt;Rails4のシルバー試験の問題を作成中、来年４月から受けれるようになる&lt;/p&gt;

&lt;p&gt;総メンバ数: 15名&lt;/p&gt;

&lt;p&gt;Rubyの受託で12件ほど&lt;/p&gt;

&lt;p&gt;XPS &amp;amp; XCSの実現を理念としている&lt;br /&gt;
=&amp;gt; 究極のプログラマー満足と顧客満足&lt;/p&gt;

&lt;h3 id=&#34;redmineのプラグイン開発事例&#34;&gt;Redmineのプラグイン開発事例&lt;/h3&gt;

&lt;p&gt;2ヶ月で12個のプラグインを作成した&lt;br /&gt;
4つはOSSとしてgithubに還元した&lt;br /&gt;
ちょうどredmineのissueに上がっておりパッチを送った&lt;/p&gt;

&lt;p&gt;発注先として選ばれたのは短期間の12個開発にOKと言えたから&lt;/p&gt;

&lt;h3 id=&#34;次の開発フェーズ&#34;&gt;次の開発フェーズ&lt;/h3&gt;

&lt;p&gt;redmineのガントチャートが使いにくい&lt;br /&gt;
=&amp;gt; MS Projectのように使えるガントチャートを作成することに&lt;/p&gt;

&lt;p&gt;そして Lychee Gantt Chart が生まれた&lt;br /&gt;
Web上でマウス操作で各種期間などを操作できる&lt;/p&gt;

&lt;h3 id=&#34;orange-project&#34;&gt;Orange project&lt;/h3&gt;

&lt;p&gt;THIN REPORTSにお世話になってます&lt;/p&gt;

&lt;h3 id=&#34;開発効率&#34;&gt;開発効率&lt;/h3&gt;

&lt;p&gt;社内ではPivotal Trackerでチケット管理しているが、&lt;br /&gt;
それを見ると日に(?)2,3時間だけ使われている状態で進んでいる&lt;/p&gt;

&lt;p&gt;Ruby, Rubyistの生産性が高いと言える&lt;br /&gt;
映画でリラックスするように彼らはプログラミングでリラックスしている&lt;/p&gt;

&lt;h3 id=&#34;変わったこと&#34;&gt;変わったこと&lt;/h3&gt;

&lt;p&gt;要件定義 == プログラミング&lt;br /&gt;
要件も細かく伝えなくていい&lt;br /&gt;
テストはあるがユニットレベルで仕様が柔らかいまま進む&lt;br /&gt;
受け入れテストの前に顧客のacceptが出ながら進む&lt;br /&gt;
スケジュールが前倒しになって管理がいらなくなってくる&lt;/p&gt;

&lt;p&gt;これはRubyistのおかげ&lt;br /&gt;
エンジニア合わせて組織も変えてきた&lt;/p&gt;

&lt;p&gt;学歴ではなく、githubをみる&lt;br /&gt;
プログラミング以外の物を引き取る&lt;br /&gt;
マネジメントも厳しくしない&lt;/p&gt;

&lt;h3 id=&#34;最後に-1&#34;&gt;最後に&lt;/h3&gt;

&lt;p&gt;あるカンファレンスでのKent Beckのやりとり&lt;br /&gt;
質問者「周囲を変えないと、アジャイルやXPができない」&lt;br /&gt;
Kent Beck 「変えられるのは自分自身だけ、それにつられて周りは変わる」&lt;/p&gt;

&lt;h3 id=&#34;qa-5&#34;&gt;QA&lt;/h3&gt;

&lt;h4 id=&#34;テスト駆動開発できないというのは&#34;&gt;テスト駆動開発できないというのは？&lt;/h4&gt;

&lt;p&gt;受け入れのテストから始められないということ&lt;br /&gt;
ユニットテストは最初から書いてる&lt;br /&gt;
仕様が固まった後半からCIも自動化してる&lt;/p&gt;

&lt;h4 id=&#34;顧客との仕様固めは開発者が直接行ってる&#34;&gt;顧客との仕様固めは開発者が直接行ってる？&lt;/h4&gt;

&lt;p&gt;間に担当が立つこともあります&lt;br /&gt;
状況によります&lt;/p&gt;

&lt;h4 id=&#34;なぜフルーツの中でもアケビをプロダクト名に選んだのか-ruby色関係ある&#34;&gt;なぜフルーツの中でもアケビをプロダクト名に選んだのか?ruby色関係ある？&lt;/h4&gt;

&lt;p&gt;英語のpawpawが可愛いと思ったから&lt;br /&gt;
ruby色だからではない&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;クロージングセレモニー&#34;&gt;クロージングセレモニー&lt;/h2&gt;

&lt;p&gt;by 井上 浩 (Rubyアソシエーション　副理事長, しまねOSS協議会　会長)&lt;/p&gt;

&lt;h3 id=&#34;来場者数&#34;&gt;来場者数&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;day1: 491人&lt;/li&gt;
&lt;li&gt;day2: 410人&lt;/li&gt;
&lt;li&gt;合計: 901人&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;開催趣意書&#34;&gt;開催趣意書&lt;/h3&gt;

&lt;p&gt;趣意書どおり未来イメージできたと思ってる&lt;/p&gt;

&lt;h3 id=&#34;開催テーマ&#34;&gt;開催テーマ&lt;/h3&gt;

&lt;p&gt;様々なテーマ交換できましたね&lt;/p&gt;

&lt;h3 id=&#34;各種紹介&#34;&gt;各種紹介&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;構成団体&lt;/li&gt;
&lt;li&gt;実行委員会&lt;/li&gt;
&lt;li&gt;事務局&lt;/li&gt;
&lt;li&gt;ワーキンググループ&lt;/li&gt;
&lt;li&gt;スポンサー&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;最大の危機&#34;&gt;最大の危機&lt;/h3&gt;

&lt;p&gt;直前でmatz尿管結石に。。&lt;/p&gt;

&lt;h3 id=&#34;各種おもてなしありましたね&#34;&gt;各種おもてなしありましたね&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;聖地 やぁ&lt;/li&gt;
&lt;li&gt;夜も更けたり&lt;/li&gt;
&lt;li&gt;今年も鉄板の石原さん&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;発表者の紹介-振り返り&#34;&gt;発表者の紹介、振り返り&lt;/h3&gt;

&lt;p&gt;keynoteでは&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;あまりコーディングしない&lt;/li&gt;
&lt;li&gt;ナイストライを重ねてchange the world&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;が印象的でしたね&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;三好さんからはなぜJavaを選ばなかったのかという話もありました&lt;/li&gt;
&lt;li&gt;受賞者の書いた紙を温めていたのは舞姫隊のあやめ様でした&lt;/li&gt;
&lt;li&gt;matzのTokyoはナイストライでした&lt;/li&gt;
&lt;li&gt;笹田さんご結婚おめでとうございます&lt;/li&gt;
&lt;li&gt;Tomからはインターネットとプロジェクタの新しい使い方を学びました&lt;/li&gt;
&lt;li&gt;相澤さんダジャレ賞おめでとうございます&lt;/li&gt;
&lt;li&gt;アジャイルウェアさんのウォータフォール万歳&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;アーロンさん壇上へ&#34;&gt;アーロンさん壇上へ&lt;/h3&gt;

&lt;p&gt;今日は素晴しい通訳(matz)がいますので英語で&lt;br /&gt;
いつもひとりで作業して疲れてる&lt;br /&gt;
アメリカにはおつかれさまという言葉ない&lt;br /&gt;
なので週末にハグをするというのを考えた&lt;br /&gt;
(ここでみんなでhappy friday)&lt;/p&gt;

&lt;h3 id=&#34;最後に-2&#34;&gt;最後に&lt;/h3&gt;

&lt;p&gt;尿管結石にはご注意を&lt;br /&gt;
石原さん「来年も待ってるんだからね！」&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>