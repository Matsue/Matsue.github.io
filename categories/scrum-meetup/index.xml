<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Scrum Meetup on Matsue Blog</title>
    <link>http://matsue.github.io/categories/scrum-meetup/</link>
    <description>Recent content in Scrum Meetup on Matsue Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>jp-ja</language>
    <copyright>All rights reserved - 2015</copyright>
    <lastBuildDate>Thu, 05 Mar 2015 20:43:28 +0900</lastBuildDate>
    <atom:link href="http://matsue.github.io/categories/scrum-meetup/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Regional Scrum Gathering Tokyo 2015に参加した</title>
      <link>http://matsue.github.io/post/2015-03-01-scrumgatheringtokyo-2015/</link>
      <pubDate>Thu, 05 Mar 2015 20:43:28 +0900</pubDate>
      
      <guid>http://matsue.github.io/post/2015-03-01-scrumgatheringtokyo-2015/</guid>
      <description>

&lt;p&gt;&lt;a href=&#34;http://2015.scrumgatheringtokyo.org/&#34;&gt;Regional Scrum Gathering Tokyo 2015&lt;/a&gt;に参加した。&lt;br /&gt;
3日分の発表内容メモと感想のまとめ。長い。&lt;/p&gt;

&lt;p&gt;3日間のイベントで、初日は主にスクラム実践者の方々のセッション、2日目はオープンスペーステクノロジーというディスカッション形式、
3日目はコーチや本の執筆をされている方々からのキーノートという構成。3日目のみ有料だった。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.facebook.com/ScrumGatheringTokyo&#34;&gt;https://www.facebook.com/ScrumGatheringTokyo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://twitter.com/search?q=%23rsgt2015&#34;&gt;https://twitter.com/search?q=%23rsgt2015&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;day1&#34;&gt;Day1&lt;/h2&gt;

&lt;p&gt;初日は以下の4つのセッションに参加した。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;James O. Coplienさんの&lt;a href=&#34;http://2015.scrumgatheringtokyo.org/event/5907692ca1c112723617f2438a0501cb#.VPLm-1PadrN&#34;&gt;Scrum Patterns: The New Defacto Scrum Standard&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;藤村 新さんの&lt;a href=&#34;http://2015.scrumgatheringtokyo.org/event/b23e2d897cdf780a82622dd55b865e11#.VPLl41PadrM&#34;&gt;開発モデルの作り方 ～守破離の破！～&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Mitsuyuki　Shiibaさんの&lt;a href=&#34;http://2015.scrumgatheringtokyo.org/event/6bc960ff87b12ca853fea5497627b3ea#.VPLl4FPadrM&#34;&gt;スクラムマスターは要らない&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;林 栄一さんとMasanari Motohasiさんの&lt;a href=&#34;http://2015.scrumgatheringtokyo.org/event/e8ab120c5e4a83383b7da588da120a83#.VPLl71PadrM&#34;&gt;アジャイルコミュニケーションプラログラム ~チームワークに関する心理学的アプローチ~&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;scrum-patterns-the-new-defacto-scrum-standard&#34;&gt;Scrum Patterns: The New Defacto Scrum Standard&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;https://picasaweb.google.com/lh/photo/34HCmZmvOTJlDDlJU2EebNMTjNZETYmyPJy0liipFm0?feat=embedwebsite&#34;&gt;&lt;img src=&#34;https://lh4.googleusercontent.com/-RNmV-m2WKJs/VPfPzR7rtsI/AAAAAAAASj8/_y55odF2IN8/s800/_20150228_103457.jpg&#34; height=&#34;600&#34; width=&#34;800&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Copeさんによるスクラムとは何かを再確認するような発表。
英語だったので意味を取り違えてる部分もあると思うが、以下のようなことを言っていた。&lt;/p&gt;

&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;スクラムはただのルールブック。&lt;/li&gt;
&lt;li&gt;チェスプレーヤーに例えれば、ルールを知っているだけでは良いプレーヤーとは言えない。&lt;/li&gt;
&lt;li&gt;スクラムにおいてマネージャーという存在はいらない。無駄。スクラムでは自己管理する。タスクマネージャーというのもいらない。&lt;/li&gt;
&lt;li&gt;Kanbanを使ってるチームは病気。&lt;/li&gt;
&lt;li&gt;チームのゴールは価値を創ること。スクラムやルール自体はゴールじゃない。&lt;/li&gt;
&lt;li&gt;スクラムによって、どのようにして学ぶかを学ぶ。&lt;/li&gt;
&lt;li&gt;毎朝のスタンドアップミーティングは何のためにあるのか？SBIを管理するショートプランニングミーティングみたいなもの。&lt;/li&gt;
&lt;li&gt;もしもスプリントが終わった時にベロシティの見積もり通りになる確率が50%以上なら誰かが嘘をついてる。&lt;/li&gt;
&lt;li&gt;息子は14歳でCSMになれたんだから皆も出来る。&lt;/li&gt;
&lt;li&gt;ベロシティは6ヶ月で倍になる。なってないなら、あなたは理解してない。&lt;/li&gt;
&lt;li&gt;信頼が大事。マネージャーやテスターを信頼してますか？&lt;/li&gt;
&lt;li&gt;アジャイルマニフェストにあるように顧客との協調が必要。&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt;なぜKanbanを使うのは良くないのか聞いたところ、
例えば1つの製品をデリバリーするために、&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;パーツAをつくるチーム: 生産性98&lt;/li&gt;
&lt;li&gt;パーツBをつくるチーム: 生産性96&lt;/li&gt;
&lt;li&gt;テストするチーム: 生産性100&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;がいたとすると工程2のところで在庫が出る、という説明だった。
なのでHenrik Knibergさんの本に出てくるステータスが細かく管理され、WIPが制限されているようなカンバンを指しているわけではない。
役割が分断されているようなチームは無駄がでて良くないよね、という意見だと解釈した。&lt;/p&gt;

&lt;p&gt;また、見積もったタスクが全てDONEできる確率は体感として50%以下な感じがするんだけど、と言ってみたところ、&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;スプリントへの割り込みタスクを止める人がいない&lt;/li&gt;
&lt;li&gt;違うチームへの依頼で待ち時間がある&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;といったことが原因でしょという話になった。
これは確かにそうなんだけれども、他のチームと働くことが多いというチームの性質や、
会社の枠組みでロールの分断された組織があるという状況もあるのでなかなか難しい印象。
ただ、これらについては他の方とも話しているうちに試してみたいアイデアを得た。&lt;/p&gt;

&lt;p&gt;Copeさん節はいつも通りかなりの破壊力があったし、理想の組織での話のように感じる部分はあるが、原点となるマインドと強いパッションには共感を覚える。
スクラムというと色んな要素はあるものの、価値を生み出すのがゴール。&lt;/p&gt;

&lt;h3 id=&#34;開発モデルの作り方-守破離の破&#34;&gt;開発モデルの作り方 ～守破離の破！～&lt;/h3&gt;

&lt;p&gt;&lt;iframe src=&#34;//www.slideshare.net/slideshow/embed_code/45257394&#34; width=&#34;425&#34; height=&#34;355&#34; frameborder=&#34;0&#34; marginwidth=&#34;0&#34; marginheight=&#34;0&#34; scrolling=&#34;no&#34; style=&#34;border:1px solid #CCC; border-width:1px; margin-bottom:5px; max-width: 100%;&#34; allowfullscreen&gt; &lt;/iframe&gt; &lt;div style=&#34;margin-bottom:5px&#34;&gt; &lt;strong&gt; &lt;a href=&#34;//www.slideshare.net/aratafuji/ss-45257394&#34; title=&#34;開発モデルの作り方(守破離の破)&#34; target=&#34;_blank&#34;&gt;開発モデルの作り方(守破離の破)&lt;/a&gt; &lt;/strong&gt; from &lt;strong&gt;&lt;a href=&#34;//www.slideshare.net/aratafuji&#34; target=&#34;_blank&#34;&gt;Arata Fujimura&lt;/a&gt;&lt;/strong&gt; &lt;/div&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;とりあえずやってみることでプラクティス厨じゃだめだと気付いた。&lt;/li&gt;
&lt;li&gt;ざっくり開発者が言ってきた日数に係数かけて見積もる。エンジニア「２日です」オーナー「わかりました(４日か)」。&lt;/li&gt;
&lt;li&gt;自己流から破はできない。型があるから型やぶり、型がない人が型を破ったら形無し。&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt;リーン開発の現場を参考にされていることも、その他の部分でもすごく共感できることの多かったセッション。&lt;/p&gt;

&lt;p&gt;現状、良かれと思って基本や事例から変化させて取り込んでる手法についてはプラクティス厨になっている気もする。
色んな方々の知識によってスクラムの基本形ができていて、それから学べる要素も多いと思うので基本形をもう一度見直したくなった。&lt;/p&gt;

&lt;h3 id=&#34;スクラムマスターは要らない&#34;&gt;スクラムマスターは要らない&lt;/h3&gt;

&lt;p&gt;&lt;iframe src=&#34;//www.slideshare.net/slideshow/embed_code/45257107&#34; width=&#34;425&#34; height=&#34;355&#34; frameborder=&#34;0&#34; marginwidth=&#34;0&#34; marginheight=&#34;0&#34; scrolling=&#34;no&#34; style=&#34;border:1px solid #CCC; border-width:1px; margin-bottom:5px; max-width: 100%;&#34; allowfullscreen&gt; &lt;/iframe&gt; &lt;div style=&#34;margin-bottom:5px&#34;&gt; &lt;strong&gt; &lt;a href=&#34;//www.slideshare.net/bufferings/ss-45257107&#34; title=&#34;スクラムマスターは要らない&#34; target=&#34;_blank&#34;&gt;スクラムマスターは要らない&lt;/a&gt; &lt;/strong&gt; from &lt;strong&gt;&lt;a href=&#34;//www.slideshare.net/bufferings&#34; target=&#34;_blank&#34;&gt;Mitsuyuki Shiiba&lt;/a&gt;&lt;/strong&gt; &lt;/div&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;全員POであってほしい。&lt;/li&gt;
&lt;li&gt;以前は計画もスピードも重視で根性で乗り切ってた。
- 今は大阪の組織は全てスクラム。&lt;/li&gt;
&lt;li&gt;当時、ベンチャーからの成長で組織はカオスだった。&lt;/li&gt;
&lt;li&gt;「エンジニアとして働きたいチーム」をつくろうとした。&lt;/li&gt;
&lt;li&gt;摩擦とヒエラルキーに悩んだ。&lt;/li&gt;
&lt;li&gt;摩擦を生む境目が何か考えた。それは責任範囲だと考えた。「ここからはあなたの仕事、責任」&lt;/li&gt;
&lt;li&gt;もう一つはエンジニアに期待してない。スキル低いエンジニアでも回せるようにしよう。&lt;/li&gt;
&lt;li&gt;なんでこういう組織になったか考えた。失敗を乗り越えるためだと考えた。失敗しないように。「この範囲なら失敗しないよね」&lt;/li&gt;
&lt;li&gt;子供に転んでほしくないと考えた。そのためには転ばせる必要がある。&lt;/li&gt;
&lt;li&gt;エンジニアへの期待値をあげて、責任範囲を細かくしない。&lt;/li&gt;
&lt;li&gt;タイムボックス、スコープ、レトロスペクティブで失敗を小さく、失敗できるように。&lt;/li&gt;
&lt;li&gt;スキル高い人だけがチーム入ってほしいのではなく、成長できるようにしたかった。&lt;/li&gt;
&lt;li&gt;いますぐ終わらせる、できるひとにとりあえずやってもらうではなく、コスト払っても３ヶ月後に早く開発できるようにしたかった。&lt;/li&gt;
&lt;li&gt;立ち上げメンバーのようにユーザにとってうれしいことを考え、プロダクトオーナーシップを持ってほしい。&lt;/li&gt;
&lt;li&gt;そもそもみんな持ってるはず。&lt;/li&gt;
&lt;li&gt;「ここまででいいよ」と壁つくってた。&lt;/li&gt;
&lt;li&gt;「あなたが一番いいと思うものつくって」というようにした、始めはおそるおそるだったが、徐々にみんな言える環境になった。&lt;/li&gt;
&lt;li&gt;次はみんなが働きたいと思う組織を目指した。&lt;/li&gt;
&lt;li&gt;チームを超える横串の場をつくった。&lt;/li&gt;
&lt;li&gt;マネージャとかもフラット、ただのロールという認識を広めた。。&lt;/li&gt;
&lt;li&gt;組織５０人でもやもやしてることを出した、レトロスペクティブ。

&lt;ul&gt;
&lt;li&gt;ex.全チームにホワイトボード、プロジェクタ導入、カフェテリアの匂いをなくす&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;希望者全員CSMの研修にいってもらった。&lt;/li&gt;
&lt;li&gt;いけない人向けには大阪に人を呼んだりした。&lt;/li&gt;
&lt;li&gt;とりのぞける障害はとった、だから「みんなで大阪の開発部を良くしていこう」&lt;/li&gt;
&lt;li&gt;組織というプロダクトを変えた。&lt;/li&gt;
&lt;li&gt;ただやる人はいらない。プロダクトオーナーシップをもったスクラムマスター、エンジニアになってほしい。&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt;本編以外のQAへの回答からの抜粋は以下。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;方向性の違いは否定するのではなく、話し合ってもともとの原因を探る。&lt;/li&gt;
&lt;li&gt;取り組みの結果、もともとPO、SM、PMとか全部やってたのをメンバー任せられた。&lt;/li&gt;
&lt;li&gt;消極的な人にも参加をよびかける。ほっておかない。定期的な面談とかやるんじゃなく、気付いたらすぐ伝える。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;うーん、羨ましい。
質問への回答にも少しあるが、コミュニケーション的な部分でぶつかった壁や解決したことが多々あったんじゃないかと思う。
今の状況ではKPTやるとどんなものが上がっているのか気になる。&lt;/p&gt;

&lt;h3 id=&#34;アジャイルコミュニケーションプラログラム-チームワークに関する心理学的アプローチ&#34;&gt;アジャイルコミュニケーションプラログラム ~チームワークに関する心理学的アプローチ~&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;https://picasaweb.google.com/lh/photo/FIwv2PGb2QfTk2b6gT-4xdMTjNZETYmyPJy0liipFm0?feat=embedwebsite&#34;&gt;&lt;img src=&#34;https://lh4.googleusercontent.com/-PoT7anCuYzI/VPfPzW6bDPI/AAAAAAAASj4/-V2AiFZQ66Q/s800/_20150228_165337.jpg&#34; height=&#34;600&#34; width=&#34;800&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;「言っても仕方ない」「どうせダメだ」みたいな心境になった人、させる人について対応や原因を考えるセッション。&lt;/p&gt;

&lt;p&gt;例えば、「報告しろ」+「自分で考えろ」という矛盾した指示(ダブルバインド)を出されたりすると、そのような心境をつくる一因になると考えられる。
ペアや4人組でのワークでは、身の回りで起きているコミュニケーション不全の状況を考え、励ましの言葉を考え、それを人から言われてみる、というようなことをした。&lt;/p&gt;

&lt;p&gt;こういうセッションはむずむずするが、ワークと割り切って普段やらないことを試したり、意識できてないようなところを確認できるので面白い。
あーあるある、という状況に名前をつけて認識できるようにする感じ。関連する本を1冊読んでみたくなった。&lt;/p&gt;

&lt;h3 id=&#34;クロージング&#34;&gt;クロージング&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;https://picasaweb.google.com/lh/photo/-8m3QTZ1cMGw8ZXEb4n0J9MTjNZETYmyPJy0liipFm0?feat=embedwebsite&#34;&gt;&lt;img src=&#34;https://lh3.googleusercontent.com/-KW_oTBU3pZo/VPfPzaRiGKI/AAAAAAAASj4/ESG_jlF9J1s/s800/_20150228_173624.jpg&#34; height=&#34;600&#34; width=&#34;800&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;初日のクロージングは参加者全員で来年度のRSGTのポスター・テーマを考えた。
それぞれ10人程度の9チームに分かれ、意見をまとめ、発表した。&lt;/p&gt;

&lt;p&gt;限られた時間内に焦りながら成果を出そうとする感覚は、マシュマロゲームみたいな印象。
すみません、プロトタイプとか全然つくりませんでした。アイデア考えて、締め切り直前に最終版を書き始めました。&lt;/p&gt;

&lt;p&gt;みなさんどうやって取り組んだろうか？
振り返りしたチームもあるようだし、自分がいたチームは「だれが」「なにを」期待するイベントにしたいかのアイデアを考えて投票、
それに合うフレーズのアイデアを出し合うようなフローで参加した。&lt;/p&gt;

&lt;p&gt;意外に感じたのは、チーム内で我先にとファシリテーター役出るかと思ったらそうでもなかった。お見合い。
そんな雰囲気の中でも活発に意見を出して、雰囲気をつくっていた女性の方々すごいと思いました。&lt;/p&gt;

&lt;h2 id=&#34;day2&#34;&gt;Day2&lt;/h2&gt;

&lt;h3 id=&#34;open-space-technology&#34;&gt;Open Space Technology&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;https://picasaweb.google.com/lh/photo/wTFS1FiWL85lr_cuRREbSdMTjNZETYmyPJy0liipFm0?feat=embedwebsite&#34;&gt;&lt;img src=&#34;https://lh3.googleusercontent.com/--NZKsShM8S0/VPfPzZsy1nI/AAAAAAAASj4/10eN7so2MPA/s800/_20150301_130543.jpg&#34; height=&#34;600&#34; width=&#34;800&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;2日目は全てOpen Space Technologyの時間。
午前はアイデア募集をして、似たものはまとめて、午後に向けて時間と場所の割り振りをした。&lt;/p&gt;

&lt;p&gt;私は&amp;rdquo;スクラムで取ると嬉しいメトリクス・数字&amp;rdquo;というテーマで時間をとらせてもらい、以下のようなアイデアがでた。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://picasaweb.google.com/lh/photo/QrY0T6zZ6vUQ-MPDKLrbQdMTjNZETYmyPJy0liipFm0?feat=embedwebsite&#34;&gt;&lt;img src=&#34;https://lh6.googleusercontent.com/-eORdhihYEiw/VPfPzWwV1aI/AAAAAAAASj8/wdv5wzE2sKk/s800/_20150301_150056.jpg&#34; height=&#34;600&#34; width=&#34;800&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;測定手法・項目&lt;/th&gt;
&lt;th&gt;効果&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;ベロシティ&lt;/td&gt;
&lt;td&gt;見積もり精度向上&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;各タスクが何日で完了したか&lt;/td&gt;
&lt;td&gt;見積もり精度向上&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;◯◯さんが実施したレビュー回数&lt;/td&gt;
&lt;td&gt;特定の人への依存の視覚化&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;テストカバレッジ&lt;/td&gt;
&lt;td&gt;品質&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;テストの書き出し、実装にかかった時間&lt;/td&gt;
&lt;td&gt;工数視覚化?&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;割り込みタスクの数・かかった時間&lt;/td&gt;
&lt;td&gt;見積もり精度向上&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;バグの数&lt;/td&gt;
&lt;td&gt;見積もり精度向上&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;デモミーティング参加者のフィードバック数&lt;/td&gt;
&lt;td&gt;期待値や成果の指標&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;目標達成できると思う率&lt;/td&gt;
&lt;td&gt;心境・潜在タスクの視覚化&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;TODO・FIXMEコメント、つみのこしタスクの量&lt;/td&gt;
&lt;td&gt;潜在タスクの視覚化、理解度の視覚化&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;コードの静的チェック&lt;/td&gt;
&lt;td&gt;技術的負債の視覚化&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;トラックナンバー&lt;/td&gt;
&lt;td&gt;特定の人への依存の視覚化&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;タスクや開発プロセスが停滞してたとこ共有&lt;/td&gt;
&lt;td&gt;特定の人への依存の低減、プロセス上のボトルネックの発見&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;UATの実行時間&lt;/td&gt;
&lt;td&gt;性能保証、変化に気づける&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;スプリントへの満足度&lt;/td&gt;
&lt;td&gt;開発プロセス上の問題発見&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;問い合わせに返答してる率&lt;/td&gt;
&lt;td&gt;対応もれ防止&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;最終ソースコミット時刻&lt;/td&gt;
&lt;td&gt;働く環境の状況が見える&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;同じ種類のバグを出してないか&lt;/td&gt;
&lt;td&gt;コード改善&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;もっとはやくデリバリーしたいと思っても、どこが原因になってるか見えてないことは多いので、
上がったような項目からアイデアを得て改善できると嬉しい。&lt;/p&gt;

&lt;h3 id=&#34;lean-coffee&#34;&gt;Lean Coffee&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;https://picasaweb.google.com/lh/photo/EB0j90S5-Rpu7hQuoLYjvNMTjNZETYmyPJy0liipFm0?feat=embedwebsite&#34;&gt;&lt;img src=&#34;https://lh5.googleusercontent.com/-nxVFGEs0Hhc/VPfPzQlwsjI/AAAAAAAASj8/YJxjadGNobU/s800/_20150301_123951.jpg&#34; height=&#34;600&#34; width=&#34;800&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;ランチの時間にはLean Coffeeを行った。Coffeeは飲んでないけど。
テーマを出し合って、投票して人気だったのテーマから順にディスカッションをする。
7分ごとに議論を継続するか、次の話題に移っていくかの確認がある。&lt;/p&gt;

&lt;p&gt;適度に時間が区切られており、人数も少人数だったのでわりと集中して参加できた印象。&lt;/p&gt;

&lt;p&gt;議論ででたアイデアの中で、&amp;rdquo;メンバーそれぞれがスプリントの名前を出し合う&amp;rdquo;というのが個人的に面白いと思った。
ビジョンが共有されてなければ、全く違うものが出てそれに気づくだろうし、
見返した時に何をしてきたのか、何が不足しているのかの考えるヒントになる。&lt;/p&gt;

&lt;h2 id=&#34;day3&#34;&gt;Day3&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://picasaweb.google.com/lh/photo/6HOUhH24kW39OgxzcL3JHNMTjNZETYmyPJy0liipFm0?feat=embedwebsite&#34;&gt;&lt;img src=&#34;https://lh6.googleusercontent.com/-tEUEtwrX5vY/VPfPzdNNIJI/AAAAAAAASj4/87n2Lmag_6w/s800/_20150302_144630.jpg&#34; height=&#34;800&#34; width=&#34;600&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;3日目は以下の4つのセッションがあった。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Kazumasa Ebataさんの&lt;a href=&#34;http://2015.scrumgatheringtokyo.org/event/328d75dfb6132d6ced031e7ba846cc1b#.VPfjHVPadrM&#34;&gt;Promotion of Growth Led by Scrum. ~ Road to Agile/KAIZEN. Improve THE Experience for Challenger ~&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;森崎 修司さんの&lt;a href=&#34;http://2015.scrumgatheringtokyo.org/event/e34accd4020c1869e4a77e23390c3565#.VPfjIFPadrM&#34;&gt;レビューの課題と対策、モダンコードレビューの動向&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Kiro HARADAさん、Lê Trọng Hiệpさん、Phạm Anh Đớiさんの&lt;a href=&#34;http://2015.scrumgatheringtokyo.org/event/1fdf35d5512cb65be238b2dc6985a888#.VPfjIVPadrM&#34;&gt;State of Agile / Software Dev in Vietnam and relationship between Japan and Vietnam&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Mary Gormanさんの&lt;a href=&#34;http://2015.scrumgatheringtokyo.org/event/1fe726ea088481ce98590a251857d1fb#.VPfjJFPadrM&#34;&gt;アジャイルな発見プラクティスを革新し、活性化させましょう Innovate and Invigorate Your Agile Discovery Practices&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;promotion-of-growth-led-by-scrum-road-to-agile-kaizen-improve-the-experience-for-challenger&#34;&gt;Promotion of Growth Led by Scrum. ~ Road to Agile/KAIZEN. Improve THE Experience for Challenger ~&lt;/h3&gt;

&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;日本の状況は誤った情報が多い印象。&lt;/li&gt;
&lt;li&gt;自分の本もスクラムに色付けしたもの。&lt;/li&gt;
&lt;li&gt;今から学ぼうとするとミスリーディングが多い。正しい情報が多い状況をつくっていきたい。&lt;/li&gt;
&lt;li&gt;スクラムを選択肢にいれてほしい。&lt;/li&gt;
&lt;/ul&gt;

&lt;!-- br --&gt;

&lt;ul&gt;
&lt;li&gt;◯◯ブートキャンプとか◯◯サムライも誰かが経験したもの。&lt;/li&gt;
&lt;li&gt;第一ソースに会う機会を増やしていったほうがいいと感じる。&lt;/li&gt;
&lt;/ul&gt;

&lt;!-- br --&gt;

&lt;ul&gt;
&lt;li&gt;奴隷になってる。会社やスクラムの。&lt;/li&gt;
&lt;li&gt;スクラムだからではなく、スクラムの目指してるものを考えれてるのか。&lt;/li&gt;
&lt;/ul&gt;

&lt;!-- br --&gt;

&lt;ul&gt;
&lt;li&gt;Ken Schwaberのgoogleでの動画から分かるように、透明感、３ヶ月後とかの状況を知る、把握するためのツール&lt;/li&gt;
&lt;li&gt;ビジネスを成功させるものではない&lt;/li&gt;
&lt;li&gt;できない人がやって数ヶ月後ほとんど何も完成してないだろう、それがわかる&lt;/li&gt;
&lt;/ul&gt;

&lt;!-- br --&gt;

&lt;ul&gt;
&lt;li&gt;改善したい人のペルソナを考える&lt;/li&gt;
&lt;li&gt;飢餓感タイプか(圧倒的当事者意識くん)&lt;/li&gt;
&lt;li&gt;危機感タイプか(やればできるこ)&lt;/li&gt;
&lt;li&gt;飢餓感タイプは与えることに抵抗ない&lt;/li&gt;
&lt;li&gt;危機感タイプはいただければやります、ひどいともうほっといてください&lt;/li&gt;
&lt;/ul&gt;

&lt;!-- br --&gt;

&lt;ul&gt;
&lt;li&gt;飢餓：「忙しいからほっておいてくれ！」&lt;/li&gt;
&lt;li&gt;危機：「トラブルさえなければいい」&lt;/li&gt;
&lt;li&gt;どちらもなにも求めてない。どちらもスクラムほしがってない。&lt;/li&gt;
&lt;/ul&gt;

&lt;!-- br --&gt;

&lt;ul&gt;
&lt;li&gt;飢餓：あなたの望みの助けになるよ、と伝える。&lt;/li&gt;
&lt;li&gt;危機：なんで重要なのかというイメージもってもらう。イメージさえできればできる。&lt;/li&gt;
&lt;li&gt;アプローチは対象によって違う&lt;/li&gt;
&lt;/ul&gt;

&lt;!-- br --&gt;

&lt;ul&gt;
&lt;li&gt;えばたさんは危機感タイプ。だから本場に行くことで危機感を覚えるように動く&lt;/li&gt;
&lt;li&gt;フィードバックは&amp;rdquo;言う&amp;rdquo;ことだけではない。なんでも言ってたら、それはただの独り言&lt;/li&gt;
&lt;li&gt;適切に行動を変える刺激を与えたり、与えなかったりすること&lt;/li&gt;
&lt;li&gt;挑戦する場がなければ人は動かない&lt;/li&gt;
&lt;/ul&gt;

&lt;!-- br --&gt;

&lt;ul&gt;
&lt;li&gt;スクラムにはフィードバックが組み込まれてる&lt;/li&gt;
&lt;li&gt;ルール通りにやることで、８割方のフィードバック得られるはず&lt;/li&gt;
&lt;/ul&gt;

&lt;!-- br --&gt;

&lt;ul&gt;
&lt;li&gt;スクラムスレーブ(奴隷)になる。どうやって未来をつくっていくのかを考えないと。&lt;/li&gt;
&lt;li&gt;ブラックボックスな状態でスクラムやります、は仲間をつくらない。&lt;/li&gt;
&lt;/ul&gt;

&lt;!-- br --&gt;

&lt;ul&gt;
&lt;li&gt;スクラムでプロダクトよくなるは嘘。または、あくまでも特定の状況での事例にすぎない。&lt;/li&gt;
&lt;li&gt;機会を多くして、プロダクトよくする機会がふえるだけ。&lt;/li&gt;
&lt;/ul&gt;

&lt;!-- br --&gt;

&lt;ul&gt;
&lt;li&gt;チームもいきなり成長することはない。&lt;/li&gt;
&lt;li&gt;スクラムは現状をつきつけて残酷。ベロシティとか。&lt;/li&gt;
&lt;/ul&gt;

&lt;!-- br --&gt;

&lt;ul&gt;
&lt;li&gt;「組織が違うんです。頭でっかちいるんです。」&lt;/li&gt;
&lt;li&gt;じゃあ働きかけていきましょう。キーパーソンに。スクラムにはそういうことを考えるきっかけがあるだけ。&lt;/li&gt;
&lt;/ul&gt;

&lt;!-- br --&gt;

&lt;ul&gt;
&lt;li&gt;勇気をもって未来をつくってほしい。未来はリスクある。そこにいる人が勇気を持たなければならない。&lt;/li&gt;
&lt;li&gt;スクラムやったからよくなるとは限らない。&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt;公演中に紹介されていたKen Schwaberさんの動画は多分これ。&lt;/p&gt;

&lt;div class=&#34;embed-video-container&#34;&gt;
  &lt;iframe src=&#34;http://www.youtube.com/embed/_47VWIvOKH8&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;


&lt;p&gt;また、メモ上では大分省略しているが、
2タイプのペルソナに対して継続・ゴール設定といった状況に合わせた具体的なメッセージの紹介があった。&lt;/p&gt;

&lt;p&gt;周りの方々を見ていてもそうだが、1次ソースに触れるというのは大事なんだろうなあと感じた。
また、2タイプにわけて考えるという切り口は面白い。
相手の求めるフィードバックに役立つのはもちろん、自分がどっちかを意識しておくことで、人との違いに変にイライラせずに済みそう。&lt;/p&gt;

&lt;h3 id=&#34;レビューの課題と対策-モダンコードレビューの動向&#34;&gt;レビューの課題と対策、モダンコードレビューの動向&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;モダン: どの時点でのモダンかわからない。
例えば&amp;rdquo;新&amp;rdquo;喜劇。&lt;/p&gt;

&lt;p&gt;エンピリカルソフトウェア、フィードバックを基にした研究。&lt;/p&gt;

&lt;p&gt;ソフトウェアレビューの目的：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;不具合の修正コストの低減&lt;/li&gt;
&lt;li&gt;保守性向上&lt;/li&gt;
&lt;li&gt;状況把握と承認&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;レビューは指摘ポイントの自由度高く、本質的な欠陥の指摘が少ない。&lt;/p&gt;

&lt;p&gt;アンチパターンの例:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;コードの前半ばかり見てる&lt;/li&gt;
&lt;li&gt;作り直してやろうかと考える&lt;/li&gt;
&lt;li&gt;時間があるだけやり続ける&lt;/li&gt;
&lt;li&gt;人間関係の持ち込み&lt;/li&gt;
&lt;li&gt;見栄の張り合い、「なにか言わないと」&lt;/li&gt;
&lt;li&gt;人格攻撃、「センスないね」&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;ある研究の結果:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;機能的な問題(21.4%)&lt;/li&gt;
&lt;li&gt;保守上の問題(71.1%)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;教科書的な対応としては、レビューする前に目的を定義する。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;命名規則&lt;/li&gt;
&lt;li&gt;ユーザビリティ&lt;/li&gt;
&lt;li&gt;性能問題&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;そのための方法:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;コードレビュー&lt;/li&gt;
&lt;li&gt;手動テスト&lt;/li&gt;
&lt;li&gt;テストコード、テスト自動化&lt;/li&gt;
&lt;/ul&gt;

&lt;!-- br --&gt;

&lt;ul&gt;
&lt;li&gt;見つけると効果ある(定数を右に書くかどうかは効果低そう)&lt;/li&gt;
&lt;li&gt;コスト減らす(特殊な状況だけ起きるものとかカバー)&lt;/li&gt;
&lt;li&gt;あとあと拡張しやすくする（プラグインにするとか）&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;リーディングテクニック:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;シナリオを用意して個々に割り当てる&lt;/li&gt;
&lt;li&gt;先にシナリオはチームで合意しておく

&lt;ul&gt;
&lt;li&gt;ex.メモリリークないか(確保と解放の数あってるか)、無停止でデプロイできるか&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;シナリオのメリット:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;限界を知って割りきれる。「初めてやるし仕方ない」&lt;/li&gt;
&lt;li&gt;問題の指摘するふりした攻撃とかを減らせる。&lt;/li&gt;
&lt;/ul&gt;

&lt;!-- br --&gt;

&lt;ul&gt;
&lt;li&gt;唯一の正解があるわけではない&lt;/li&gt;
&lt;li&gt;身の丈にあったシナリオ設定する

&lt;ul&gt;
&lt;li&gt;ex.鉄道のシステムとかつくるのと違って、絶対に落ちないアプリそれほど求められてない&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;!-- br --&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;タブとかスペースの数は息の長くないモジュールにやっても仕方ない&lt;/li&gt;
&lt;li&gt;が、OSSだとちょっと違う&lt;/li&gt;
&lt;li&gt;メンテナがいないと滅びるのでevolvabilityが重視される&lt;/li&gt;
&lt;/ul&gt;

&lt;!-- br --&gt;

&lt;ul&gt;
&lt;li&gt;アジャイルでなくても信頼、助け合いは必要&lt;/li&gt;
&lt;li&gt;言葉の端々への配慮必要&lt;/li&gt;
&lt;li&gt;態度を変えさせるための指摘してはだめ&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;新人向けの注意:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;問題指摘されても自分の批判と考えないように&lt;/li&gt;
&lt;li&gt;「知ってました」「そうでしたっけ」と照れ隠ししない&lt;/li&gt;
&lt;li&gt;厳しい批判に「自分でやってください」と逆上しない&lt;/li&gt;
&lt;li&gt;「本質的でない」と逆批判しない&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;モダンコードレビューは:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;パスアラウンドに似てる、メールでなげて回覧板みたいにするやつ&lt;/li&gt;
&lt;li&gt;OSSのコードレビューに似てる&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;欠陥検出以外に・・&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;情報共有&lt;/li&gt;
&lt;li&gt;透明性向上&lt;/li&gt;
&lt;li&gt;代替実装方法の検討&lt;/li&gt;
&lt;li&gt;良い点、続けてもらいたいことも積極的に伝える&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;グーグルでのコードレビュー:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;目的は協調であり、欠陥検出ではない&lt;/li&gt;
&lt;li&gt;コーディングプロセスの一部として統合されてる&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;メリット&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;修正時間を短くする&lt;/li&gt;
&lt;li&gt;新人の教育&lt;/li&gt;
&lt;li&gt;信頼感の醸成&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;グーグルのツール:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;mondrianというツールで管理&lt;/li&gt;
&lt;li&gt;OSSクローンのrietveldがある&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;シスコでのコードレビュー:&lt;br /&gt;
シスコでのコードレビューも小さくたくさんやってる感じ&lt;/p&gt;

&lt;p&gt;Microsoftはcodeflowというツール。mondrianやgerritと似てる。&lt;/p&gt;

&lt;p&gt;コードレビューに期待することアンケートでは&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;保守性&lt;/li&gt;
&lt;li&gt;情報共有&lt;/li&gt;
&lt;li&gt;やってること見える化&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;あたり上位にきてた。バグ見つけるだけじゃない。&lt;/p&gt;

&lt;p&gt;モダンコードレビューでの注意点&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;断片でみるので全体での一貫性や整合性が見落としがち&lt;/li&gt;
&lt;li&gt;些細な指摘ならないシナリオ設定&lt;/li&gt;
&lt;li&gt;誰かがみるだろうと放置&lt;/li&gt;
&lt;li&gt;特定の人に集中する&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt;Githubなどで利用されているプルリクエストがちょうどモダンコードレビューに当たるとのこと。&lt;br /&gt;
なんでプルリクという形に落ち着いてるのか考えるきっかけになる。
また、どうしてOSSでは保守性が重視されるのか、という切り口は面白いと思った。&lt;/p&gt;

&lt;p&gt;そして紹介されていたアンチパターンは、耳の痛いものばかり。。&lt;/p&gt;

&lt;h3 id=&#34;state-of-agile-software-dev-in-vietnam-and-relationship-between-japan-and-vietnam&#34;&gt;State of Agile / Software Dev in Vietnam and relationship between Japan and Vietnam&lt;/h3&gt;

&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;ベトナムの現状、手法やhowが多い&lt;/li&gt;
&lt;li&gt;value driven development&lt;/li&gt;
&lt;li&gt;これからwhyに変わっていくだろう&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;問題:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;まずは信頼が大事。コードの品質よりも大事だとおもう。

&lt;ul&gt;
&lt;li&gt;日本はレポート多い。下手すると毎時間。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;言葉の壁。定義されてない期待。

&lt;ul&gt;
&lt;li&gt;ex.５分早くミーティングにいくべき。とか&lt;/li&gt;
&lt;li&gt;やりたいこと(日本語)-&amp;gt;仕様書(日本語)-&amp;gt;ベトナム語と、たくさんの変換&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;POをオフショア先に置くのが一つの解決策では。
プロキシPOではなく。スクラムチームまるごとをオフショア先におく。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;プロキシする人が多いとややこしいというのは共感。
依頼側も依頼される側も「信頼関係を築きたい」と考えている状況ならもっとシンプルになりそう。&lt;/p&gt;

&lt;p&gt;今回の発表者のお二人もそうだし、紹介されていたベトナムでのイベントはとても盛り上がっている印象を受けた。
ベトナムでは多くの講演が英語らしい。
ベトナム行きたい。&lt;/p&gt;

&lt;h3 id=&#34;innovate-and-invigorate-your-agile-discovery-practices&#34;&gt;Innovate and Invigorate Your Agile Discovery Practices&lt;/h3&gt;

&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;多くのチームは一度ディスカバーに時間を費やした後、多くの時間をデリバリーに費やしている&lt;/li&gt;
&lt;li&gt;ディスカバーとデリバリーのフローは断絶されてるべきではない。&lt;/li&gt;
&lt;li&gt;そしてジャストオンタイムであるべき。&lt;/li&gt;
&lt;/ul&gt;

&lt;!-- br --&gt;

&lt;ul&gt;
&lt;li&gt;inovate(革新) + invigorate(活性化)&lt;/li&gt;
&lt;/ul&gt;

&lt;!-- br --&gt;

&lt;ul&gt;
&lt;li&gt;一般的なストーリーはユーザーとアクションから構成される&lt;/li&gt;
&lt;/ul&gt;

&lt;!-- br --&gt;

&lt;ul&gt;
&lt;li&gt;要件は機能要件と非機能要件に分けられる&lt;/li&gt;
&lt;li&gt;それらの要件をさらに7つに分解したのが&amp;rdquo;7 product demensions&amp;rdquo;(プロダクトの7側面)&lt;/li&gt;
&lt;/ul&gt;

&lt;!-- br --&gt;

&lt;ul&gt;
&lt;li&gt;チームはinterdependent(互いに依存している状態)がよい&lt;/li&gt;
&lt;li&gt;独立状態でもなく&lt;/li&gt;
&lt;li&gt;依存でもなく(一方的な)&lt;/li&gt;
&lt;/ul&gt;

&lt;!-- br --&gt;

&lt;ul&gt;
&lt;li&gt;イメージを共有するために、より視覚的に考えるべき&lt;/li&gt;
&lt;li&gt;実際に7側面を考える場を設けるとそれはエネルギッシュで騒がしい場になる
- ディスカバーすることでモチベーションも高まる&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt;今回紹介されたDtoD本は日本語に翻訳されている。紹介動画もある。&lt;/p&gt;

&lt;table border=&#34;0&#34; cellpadding=&#34;0&#34; cellspacing=&#34;0&#34;&gt;&lt;tr&gt;&lt;td valign=&#34;top&#34;&gt;&lt;div style=&#34;border:1px solid;margin:0px;padding:6px 0px;width:260px;text-align:center;float:left&#34;&gt;&lt;a href=&#34;http://hb.afl.rakuten.co.jp/hgc/0ecae152.d6af1699.0ecae153.1dd72672/?pc=http%3a%2f%2fitem.rakuten.co.jp%2fbook%2f13138583%2f%3fscid%3daf_link_tbl&amp;amp;m=http%3a%2f%2fm.rakuten.co.jp%2fbook%2fi%2f17331482%2f&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;http://hbb.afl.rakuten.co.jp/hgb/?pc=http%3a%2f%2fthumbnail.image.rakuten.co.jp%2f%400_mall%2fbook%2fcabinet%2fnoimage_01.gif%3f_ex%3d240x240&amp;amp;m=http%3a%2f%2fthumbnail.image.rakuten.co.jp%2f%400_mall%2fbook%2fcabinet%2fnoimage_01.gif%3f_ex%3d80x80&#34; alt=&#34;発見から納品へ [ Gottesdiener，Ellen ]&#34; border=&#34;0&#34; style=&#34;margin:0px;padding:0px&#34;&gt;&lt;/a&gt;&lt;p style=&#34;font-size:12px;line-height:1.4em;text-align:left;margin:0px;padding:2px 6px&#34;&gt;&lt;a href=&#34;http://hb.afl.rakuten.co.jp/hgc/0ecae152.d6af1699.0ecae153.1dd72672/?pc=http%3a%2f%2fitem.rakuten.co.jp%2fbook%2f13138583%2f%3fscid%3daf_link_tbl&amp;amp;m=http%3a%2f%2fm.rakuten.co.jp%2fbook%2fi%2f17331482%2f&#34; target=&#34;_blank&#34;&gt;発見から納品へ [ Gottesdiener，Ellen ]&lt;/a&gt;&lt;br&gt;&lt;span&gt;価格：3,500円（税込、送料込）&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;div class=&#34;embed-video-container&#34;&gt;
  &lt;iframe src=&#34;http://www.youtube.com/embed/x9oIpZaXTDs&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;


&lt;p&gt;イメージ的にはスコープや要件に新たな切り口を定義する感じだろうか。&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;発表者の方々はHowではなくWhyを語る人が多い印象を受けた。
ただ、Howを実践することでWhyを発見することはあるはず。
一方で、もっと人やプロダクトの価値にもっとフォーカスすべきだなあと感じた。&lt;/p&gt;

&lt;p&gt;ベトナムの方々は強いインパクトがあった。
彼らはスクラムの未来を考えよう、とビジョンやマインドを語っていたし、若かった。ベトナムのIT業界の平均年齢は27歳らしい。&lt;/p&gt;

&lt;p&gt;今回のイベントに参加して、本家アジャイルカンファレンスにも行きたくなった。&lt;/p&gt;

&lt;p&gt;最後に、実行委員の皆様ありがとうございました。&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>